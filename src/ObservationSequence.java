import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

public class ObservationSequence {
    ArrayList<Integer> obsSeq = new ArrayList<>();
    int T; //length of obsSeq

    public ObservationSequence(File file) {
        if(file.isDirectory()) {
            this.readFromDirectory(file);
        } else {
            this.readFromFile(file);
        }
        this.T = obsSeq.size();
    }

    public ObservationSequence(boolean debug) {
        if(debug) {
            Preprocessing preprocessor = new Preprocessing();
            this.obsSeq = preprocessor.getBrownCorpus();
        }
        this.T = obsSeq.size();
    }

    private void readFromDirectory(File file) {
        for(File f : file.listFiles()) {
            this.readFromFile(f);
        }
    }

    private void readFromFile(File file) {
        //ArrayList<Integer> seq = new ArrayList<>();
        try {
            Scanner sc = new Scanner(file);
            while(sc.hasNextLine()) {
                try {
                    obsSeq.add(Integer.parseInt(sc.nextLine()));
                } catch(NumberFormatException e) {
                    e.printStackTrace();
                }
            }
            sc.close();
        } catch(FileNotFoundException e) {
            System.err.println("File \"" + file.getName() + "\" has not been found.");
        }
    }

    public ArrayList<Integer> getObsSeq() {
        return this.obsSeq;
    }

    public int getT() {
        return this.T;
    }

    /**
     * For testing only, prints the observation sequence
     */
    private void print() {
        for(int i : obsSeq) {
            System.out.println(i);
        }
    }
}