public class Lambda {
    private static final double RANGE_PERCENTAGE = 0.1;

    private double A[][];
    private double B[][];
    private double pi[];
    private int N;
    private int M;

    public Lambda(int N, int M) {
        this.N = N;
        this.M = M;
        initialize(N,M,RANGE_PERCENTAGE);
    }

    private void initialize(int N, int M, double rangePercentage) {
        double range;
        range = 1.0/N*rangePercentage;
        A = initializeMatrix(N,M,range);
        pi = initializeVector(N,range);

        range = 1.0/M*rangePercentage;
        B = initializeMatrix(N,M,range);
    }

    private double[][] initializeMatrix(int row, int col, double range) {
        double[][] matrix = new double[row][col];
        for(int i=0; i<row; i++) {
            matrix[i] = initializeVector(col, range);
        }
        return matrix;
    }

    private double[] initializeVector(int col, double range) {
        double[] vector = new double[col];
        double rowSum = 0;

        for(int j=0; j<col; j++) {
            vector[j] = 1.0/col;
            double amountToAdd = Math.random() * range;
            if(Math.random() < 0.5)
                vector[j] += amountToAdd;
            else
                vector[j] -= amountToAdd;
            rowSum += vector[j];
        }
        for(int j=0; j<col; j++) {
            vector[j] /= rowSum;
        }

        return vector;
    }

    private void printA() {
        for(int i=0; i<N; i++) {
            for(int j=0; j<N; j++) {
                System.out.println(A[i][j] + " ");
            }
            System.out.println();
        }
    }

    private void printB() {
        for(int i=0; i<N; i++) {
            for(int j=0; j<M; j++) {
                System.out.println(B[i][j] + " ");
            }
            System.out.println();
        }
    }

    private void printPi() {
        for(int j=0; j<N; j++) {
            System.out.println(pi[j] + " ");
        }
    }

    public double[][] getA() {
        return this.A;
    }

    public double[][] getB() {
        return this.B;
    }

    public double[] getPi() {
        return this.pi;
    }

    public void setA(double value, int row, int col) {
        this.A[row][col] = value;
    }

    public void setB(double value, int row, int col) {
        this.B[row][col] = value;
    }

    public void setPi(double value, int index) {
        this.pi[index] = value;
    }
}
