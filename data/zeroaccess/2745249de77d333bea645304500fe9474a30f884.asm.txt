push
mov
sub
xor
jmp
mov
xor
mov
mov
or
mov
mov
mov
mov
push
or
push
add
mov
and
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
jmp
add
xor
mov
adc
lea
or
mov
xor
mov
neg
mov
xor
jmp
retn
retn
leave
retf
retn
pop
aas
add
mov
sbb
mov
lea
jmp
xlat
retn
cmpsb
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
mov
sbb
mov
dec
xor
add
mov
movzx
and
mov
mov
mov
adc
mov
xor
mov
mov
movzx
jmp
retf
add
xor
add
and
mov
mov
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
jmp
rcl
retn
add
js
jle
js
rep
sbb
or
and
mov
sbb
jmp
xor
and
add
cmp
jnz
mov
mov
sbb
xor
add
jmp
cmp
jnz
mov
mov
xor
add
mov
jmp
aas
retf
retn
scasd
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
lea
xor
sub
mov
movzx
cmp
mov
movzx
jg
xor
jmp
retn
sub
jmp
retn
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
jmp
mov
mov
jmp
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
jmp
add
xor
cmp
jz
jmp
mov
mov
xor
add
mov
jmp
jmp
retf
retf
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
push
mov
add
push
xor
mov
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
dec
mov
mov
not
jmp
rol
retf
leave
retf
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
call
jmp
xor
jmp
wait
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
sub
mov
jmp
push
mov
add
cmp
jz
mov
mov
xor
jmp
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
mov
jmp
adc
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
retf
retn
dec
jle
js
add
pop
jmp
lodsd
jecxz
sub
sbb
xchg
sbb
cvtps2pi
adc
lock
enter
xchg
mov
mov
push
mov
loop
rcr
rcr
mov
pop
add
aas
mov
psllw
dec
pop
jbe
jmp
retf
sti
push
int
push
in
sbb
jge
mov
inc
pop
lea
in
nop
in
mov
fild
mov
xor
std
or
mov
mov
jnz
stosd
pushf
mov
add
push
push
sub
dec
pop
out
mov
aaa
sbb
sar
inc
wait
jmp
cld
retf
dec
add
cmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
mov
jmp
jle
xor
jmp
rol
ror
leave
rcr
aaa
mov
inc
retf
sub
xchg
cmpsd
pop
outsd
fcompp
dec
add
retf
dec
fidivr
mov
cdq
or
imul
cmp
pushf
stosb
mov
mov
add
mov
lahf
cli
sar
pop
jge
retn
sub
mov
cmp
mov
nop
xchg
mov
mov
dec
imul
dec
push
mov
test
setalc
mov
pop
push
pop
ror
out
pop
in
loope
les
add
test
add
sbb
in
stc
in
fdiv
std
retn
mov
jmp
div
mov
jmp
mov
retn
and
or
mov
jmp
pop
retn
push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
retn
mov
adc
xor
sub
mov
xor
jmp
add
sbb
movzx
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
mov
lea
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
jmp
mov
mov
or
mov
xor
sub
sbb
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
jmp
cmp
cmp
retn
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
jmp
ror
retf
cmp
jnz
pop
pop
mov
mov
jmp
retf
retn
fld
add
fmul
sub
leave
mov
js
jle
js
mov
push
cmc
jmp
mov
inc
fldenv
dec
insd
test
ror
mov
out
dec
or
jns
cli
shr
and
dec
dec
call
bound
or
and
mov
jnb
cmp
mov
sal
cmpsb
in
xchg
jb
xor
fld
cmp
neg
into
iret
fisubr
setalc
mov
popf
lock
sbb
sar
scasd
and
loopne
out
sal
sub
pop
shr
ja
inc
mov
pop
sahf
stc
pop
hlt
in
icebp
jnz
lodsb
or
shr
fadd
lock
adc
cmp
dec
mov
xor
int
out
sti
adc
mov
ficom
sahf
test
cwde
outsd
in
arpl
outsb
mov
mov
jl
lodsd
mov
lock
scasb
fstp
loope
adc
jnb
rcr
aaa
dec
adc
inc
pop
les
inc
pushf
shr
in
pop
rcr
lea
push
lea
fidiv
imul
sbb
fisub
adc
pop
rep
xchg
stc
or
or
stc
pop
add
push
mov
pop
and
inc
jge
mov
fisub
add
add
pusha
sbb
neg
pop
shl
fucom
pop
jecxz
inc
dec
and
mov
js
stosd
stosd
mov
mov
xchg
dec
jmp
adc
pop
and
mov
test
rcr
add
nop
push
sub
nop
add
sub
mov
loop
scasd
mov
add
scas
mov
inc
adc
hlt
jnp
mul
adc
rsqrtps
or
mov
sub
wait
mov
push
jmp
retf
xor
add
mov
mov
xor
add
mov
mov
jmp
retn
stc
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jz
mov
jmp
lea
mov
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
jmp
enter
retn
mov
pop
leave
retn
push
mov
push
xor
push
jmp
mov
mov
mov
add
push
mov
mov
add
mov
mov
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
add
inc
mov
jmp
mov
xor
mov
mov
or
add
add
xor
imul
mov
jmp
cmp
retf
cmp
mov
jnz
jmp
retf
mov
add
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
retf
aad
leave
adc
jmp
xor
jle
js
sal
or
mov
div
mov
rol
pop
in
inc
outsd
test
cmp
mov
pop
and
mov
loop
mov
test
into
jge
cmp
push
sub
or
sub
pop
jz
aaa
jmp
jnb
or
cmp
xchg
retf
sahf
add
outsb
xor
add
cmp
pop
mov
in
sahf
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
jmp
push
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
xor
jmp
mov
sbb
mov
xor
and
mov
add
neg
mov
or
movzx
sbb
not
xor
and
jmp
retn
das
push
mov
mov
jmp
xor
mov
push
call
test
jz
leave
retn
push
mov
sub
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
mov
sub
xor
mov
mov
xor
or
sub
imul
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
retn
lea
and
mov
sub
mov
or
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
lea
mov
mov
sub
and
mov
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
mov
jmp
mov
mov
mov
mov
xor
mov
jmp
xor
xor
add
add
div
mov
mov
cmp
jz
mov
lea
mov
mov
jmp
mov
imul
mov
mov
jmp
cmp
jmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
jmp
leave
xlat
retn
cmp
jz
mov
and
jmp
jmp
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
jmp
and
dec
push
adc
jns
inc
aas
sbb
cmp
aaa
xchg
movsb
adc
int
mov
inc
and
loop
rcr
out
out
pop
pop
mov
sbb
sbb
nop
cli
mov
fsubr
push
dec
jns
retf
in
mov
mov
inc
xchg
mov
adc
jno
sti
adc
or
sub
insd
lsl
stosb
and
int
js
test
scasd
jg
or
in
insd
or
pop
into
hlt
or
xor
cmpsd
dec
popa
inc
push
dec
mov
fcmove
xchg
int
inc
jbe
fld
push
test
out
lodsd
insb
xchg
shr
jge
stosb
mov
add
push
in
lahf
inc
mov
loope
aaa
sahf
mov
leave
xchg
mov
xor
adc
jl
push
pop
and
jmp
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
jmp
xchg
mov
mov
mov
jmp
xor
add
movzx
mov
xor
lea
add
jmp
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
jmp
inc
cmp
jmp
jz
mov
jmp
push
mov
sub
sbb
mov
xor
jmp
push
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
call
jmp
mov
movzx
xor
mov
xor
or
mov
adc
add
sub
push
mov
adc
mov
neg
xor
jmp
retf
mov
mov
and
add
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
leave
retn
cmp
mov
jnz
and
jmp
and
mov
sbb
mov
mov
xor
sub
or
push
adc
mov
jmp
enter
setalc
retn
dec
test
push
scasb
js
xor
leave
test
push
pop
cdq
push
and
xor
jns
ja
scasd
push
psubb
aas
jmp
mov
shl
push
mov
pop
mov
retn
adc
pushf
les
imul
mov
inc
push
sar
inc
mov
add
push
mov
aaa
call
inc
cmpsb
lock
pop
call
aaa
sub
fidiv
jnz
sahf
das
inc
imul
push
fnstsw
push
mov
stosd
and
mov
xor
fcom
jp
pop
and
fsubp
rcl
test
cmp
push
ficom
xchg
sti
mov
mov
mov
xlat
and
and
iret
add
add
push
adc
call
mov
inc
cmp
mov
jb
mov
jmp
cmp
jnz
sbb
mov
mov
mov
mov
mov
movzx
and
mov
adc
xor
jmp
aad
add
mov
not
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
xor
add
push
jmp
mov
retf
mov
push
push
call
jmp
cmp
jnz
mov
jmp
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
sub
push
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
jmp
lodsb
mov
or
mov
mov
xor
add
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
add
mov
xor
jmp
retf
ror
leave
retf
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
and
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
and
xor
jmp
retf
retn
add
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
mov
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
mov
sub
mov
and
mov
or
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
call
xor
or
dec
mov
jmp
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
call
jmp
dec
mov
mov
jmp
retn
add
cmp
mov
jmp
retn
retn
fstp1
retf
adc
jz
push
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
push
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
rol
leave
retf
xor
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
add
jmp
retn
imul
mov
mov
jmp
cmp
retn
sub
sub
cmp
jmp
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
retf
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
add
jmp
add
imul
jmp
aas
xlat
xlat
retf
xlat
retf
pop
stosd
mov
mov
sub
cmp
ja
jmp
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
sub
cmp
mov
jbe
jmp
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
clc
xchg
dec
icebp
jmp
out
mov
sbb
sub
mov
aam
in
inc
inc
cmp
fldcw
inc
rep
aaa
sbb
and
add
add
imul
mov
mov
mov
mov
add
mov
jmp
retn
mov
jmp
mov
mov
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
mov
jmp
pop
mov
mov
xor
add
mov
mov
mov
mov
jmp
mov
xor
add
mov
mov
mov
mov
xor
jmp
retn
retn
add
mov
mov
jmp
lea
dec
mov
mov
xor
xor
add
add
jmp
retn
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
retf
fxch
fld
xchg
mov
xchg
retf
sub
mov
mov
xor
add
jmp
imul
mov
jmp
rol
leave
rcr
rcr
mov
jmp
js
xor
pop
ficom
in
and
fmul
shr
wait
ja
pop
jmp
das
jo
retn
mov
dec
outsb
and
stosd
lodsd
loop
xchg
jns
wait
loopne
mov
push
retf
mov
mov
adc
dec
cmp
adc
jz
pop
dec
aaa
fdivr
adc
cmc
add
out
loopne
pop
mov
sub
push
test
or
loopne
test
mov
sub
loop
popf
inc
mov
test
xchg
lahf
add
inc
xchg
jz
mov
or
xor
cmp
add
jbe
in
loop
pop
rcr
sbb
pop
mov
or
sub
mov
sbb
or
sbb
xchg
xor
cdq
xchg
lodsd
aas
pop
jecxz
mov
out
mov
pusha
retn
push
inc
fild
stosb
push
jnz
insd
sub
xlat
sal
fst
imul
push
dec
inc
push
outsb
xchg
in
pop
movsd
push
outsb
sti
retf
xor
jmp
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
imul
mov
jmp
retf
retn
fcmovnu
retn
inc
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
xor
add
imul
cmp
jmp
retf
jbe
pop
pop
leave
retn
push
mov
sub
movzx
xor
push
and
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbb
call
mov
inc
mov
cmp
jb
mov
inc
mov
lea
inc
mov
and
lea
xor
mov
or
mov
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
and
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzx
cmp
mov
mov
mov
mov
jz
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
mov
xor
xor
add
add
imul
mov
mov
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
xor
mov
xor
add
and
mov
neg
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
not
add
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
add
mov
mov
xor
xor
add
mov
cmp
mov
jnz
mov
push
sub
push
push
sub
call
mov
mov
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
or
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
adc
mov
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
and
mov
add
xor
xor
xor
add
mov
xor
or
xor
add
lea
mov
mov
mov
cmp
ja
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sbb
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
push
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
inc
push
push
mov
mov
mov
mov
mov
push
jmp
retf
xlat
fcmovnbe
retf
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
mov
mov
xor
sub
add
cmp
jz
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
push
push
mov
add
jmp
retn
leave
leave
leave
retf
call
mov
mov
jmp
retn
mov
mov
jmp
jmp
fiadd
mov
jmp
retn
aaa
pop
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
jmp
xor
add
mov
jmp
retn
push
push
call
mov
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
dec
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
mov
mov
add
xor
cmp
jnz
mov
mov
jmp
add
jmp
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int
leave
fnstenv
or
jp
xor
add
retn
and
loopne
push
pop
imul
adc
imul
cwde
xor
or
pop
sbb
movsb
fcos
push
cmpsd
std
and
add
aam
retn
inc
xchg
mov
mov
mov
sub
cmpsb
push
adc
cwde
jmp
push
or
cmc
aam
sti
adc
mov
sbb
sbb
out
scasb
sub
or
mov
jo
adc
shr
jmp
xlat
setalc
ror
movsd
sahf
retn
stosb
test
retn
cmp
push
mov
cmp
rcl
jnp
push
xor
cld
sti
or
clc
ja
or
rol
mov
sbb
add
scasd
fadd
add
and
jnb
xor
xor
sti
loope
adc
fsubr
add
or
xchg
mov
mov
dec
popa
jnp
pop
icebp
xchg
mov
int
call
hlt
cli
rep
popf
lodsb
pop
add
rcr
sbb
mov
push
sbb
in
adc
iret
mov
call
das
stosb
xor
shl
ficom
imul
cli
mov
cmc
xor
add
leave
retn
push
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
adc
mov
inc
mov
and
xor
or
add
mov
mov
not
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
jmp
retn
retn
leave
retf
jmp
jnz
mov
xor
xor
lea
xor
jmp
pop
lea
mov
jle
cmpsb
mov
insd
sub
popf
call
retf
pop
wait
rep
mov
imul
mov
mov
sub
add
call
and
or
popf
sbb
mov
out
pop
mov
xor
mov
movsd
mov
lock
mov
jns
loop
arpl
mov
into
clc
imul
pop
outsd
inc
dec
nop
stosb
jb
add
inc
cmpsd
jmp
cmp
jnz
jmp
jmp
push
cmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
jmp
cmp
rcl
fcmove
test
fmulp
pop
jg
jnp
js
jbe
push
add
scasd
retf
adc
adc
pop
push
pop
call
sbb
jnp
mov
call
or
leave
mov
aaa
mov
mov
sub
bound
aaa
or
push
les
call
push
jecxz
cmp
mov
sbb
leave
mov
popa
adc
outsd
stc
lock
mov
leave
sub
adc
shr
call
mov
fadd
jecxz
stosd
iret
push
mov
jmp
retf
retn
retn
retf
push
mov
jmp
retf
call
jmp
mov
leave
retn
push
mov
sub
jmp
rcl
retn
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
adc
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
mov
and
push
add
mov
and
xor
movzx
adc
mov
adc
add
inc
mov
mov
push
mov
push
test
mov
jz
jmp
retf
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
not
xchg
add
jmp
sub
adc
xor
xor
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adc
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
add
mov
mov
jmp
jmp
mov
jz
inc
mov
xor
sbb
add
mov
cmp
mov
jmp
jnz
add
push
or
call
and
mov
jmp
mov
mov
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
mov
mov
xor
add
cmp
mov
jz
push
sub
push
call
jmp
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
jmp
retf
push
stosb
add
jmp
mov
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
jmp
pop
push
dec
pop
jmp
sub
inc
xchg
sub
jmp
retn
xchg
jmp
dec
mov
dec
mov
jmp
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
xor
add
jmp
imul
mov
jmp
xor
jmp
mov
jmp
lea
cmp
jnz
mov
jmp
mov
mov
jmp
cdq
adc
xor
add
jmp
or
push
mov
jmp
retn
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
retn
les
dec
pop
jmp
pop
leave
retn
retf
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
cld
mov
push
push
retf
