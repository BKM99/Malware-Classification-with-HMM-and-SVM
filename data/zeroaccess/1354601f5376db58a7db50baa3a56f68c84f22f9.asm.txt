push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
sub
mov
sub
mov
xor
mov
add
mov
sbb
mov
push
movzx
sbb
mov
push
mov
xor
push
or
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
mov
mov
mov
or
mov
mov
sub
xor
add
mov
sbb
mov
mov
mov
xor
xor
add
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
jmp
mov
mov
xor
xor
neg
jmp
jns
jge
jle
jg
jle
jz
sbb
sbb
fimul
int
mov
cmc
jmp
retf
add
mov
mov
xor
sbb
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
xor
sbb
add
dec
mov
lea
mov
movzx
and
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
jmp
mov
jmp
mov
mov
xor
add
mov
mov
mov
xor
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
jz
lea
push
mov
xor
add
jmp
movsd
stosb
movsb
push
mov
add
jmp
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
push
sal
push
stosd
rol
sub
jle
cli
jg
jle
movsd
loopne
test
mov
sbb
and
sal
mov
cmc
idiv
sbb
mov
mov
loope
loope
pop
test
rep
mov
jmp
cmpsb
or
call
mov
adc
loop
xor
dec
lahf
dec
lock
and
mov
push
loopne
sub
dec
pop
sti
arpl
sub
jl
mov
adc
cmp
push
out
insb
inc
inc
add
retn
adc
sbb
or
arpl
sub
xchg
cmp
stos
pusha
adc
hlt
add
fsubr
das
cmp
add
jnz
hlt
in
xchg
test
mov
wait
out
insd
and
add
test
add
leave
inc
retf
sbb
neg
mov
test
fst
and
test
pop
loopne
xchg
adc
loope
shr
imul
sub
loope
int
imul
sub
call
mov
fnstenv
out
leave
popa
imul
test
mov
test
fsubr
mov
test
fidivr
retf
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
push
push
ror
sub
push
jle
cli
jg
jle
mov
imul
xor
push
jecxz
mov
add
pop
xor
out
aam
movsd
adc
mov
sbb
cld
dec
xor
outsb
arpl
rol
mov
retf
pop
mov
not
retn
mov
mov
mov
mov
mov
test
jmp
mov
jnz
mov
xor
add
jmp
or
retf
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
jmp
push
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
jmp
jmp
ficom
jnb
nop
push
ror
jmp
mov
jle
cli
jg
jle
les
sbb
retf
push
xlat
fiadd
scasb
fisubr
sub
push
leave
leave
into
or
add
out
stc
out
js
inc
leave
push
test
mov
hlt
fcomp
dec
les
and
push
retn
mov
xchg
retf
cmp
popa
xor
mov
dec
add
inc
push
add
test
mov
pop
push
outsb
jns
push
int
sbb
xchg
add
out
ja
lock
xor
pop
leave
and
cmp
inc
push
sar
xor
mov
jmp
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
push
pop
jmp
call
mov
mov
add
pop
jmp
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
push
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
not
mov
xor
mov
sbb
mov
mov
add
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
dec
mov
xor
mov
mov
sub
imul
mov
add
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbb
xor
add
not
mov
not
mov
mov
mov
adc
mov
adc
mov
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
jmp
mov
sbb
mov
sbb
xor
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
mov
sub
add
mov
cmp
mov
jz
mov
push
jmp
xor
mov
sub
mov
sub
xor
mov
xor
xor
mov
add
cmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
neg
xor
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jb
add
add
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
sub
cmp
mov
jbe
mov
mov
jmp
xor
jmp
retn
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
jmp
test
pop
jno
dec
mov
jl
jle
dec
jo
xor
pop
jnz
inc
mov
add
or
inc
or
inc
dec
xchg
push
cmp
push
mov
push
hlt
mov
sub
or
mov
sbb
popf
fild
cmp
mov
cdq
jno
sti
cmp
add
sahf
aad
cmp
xchg
scasd
push
js
cmp
jge
cmp
sub
fcmovb
mov
iret
mov
xchg
xchg
xchg
adc
jmp
hlt
dec
jo
imul
sbb
clc
shr
jnp
sbb
dec
fild
mov
insd
das
jecxz
and
iret
ror
mov
sub
imul
adc
mov
mov
push
jge
mov
mov
ja
inc
test
push
pop
cdq
aad
arpl
inc
jg
cmp
pop
scasd
sti
mov
add
inc
sub
mov
jns
std
xlat
outsd
add
xchg
out
mov
push
pop
mov
sub
loop
mov
retn
xor
add
in
pop
jmp
xlat
push
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
rcl
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
imul
mov
xor
sub
lea
jmp
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
and
mov
xor
xor
not
add
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
jz
mov
xor
xor
xor
lea
xor
cmp
jnz
mov
jmp
add
mov
xor
add
mov
mov
mov
mov
jmp
xor
neg
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
jmp
push
sbb
call
jmp
mov
leave
retn
push
mov
sub
push
call
mov
cmp
jnz
push
call
mov
cmp
mov
jnz
mov
mov
lea
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
movzx
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
sub
xor
adc
push
mov
add
mov
mov
mov
cmp
mov
mov
jz
or
mov
sbb
xor
add
sbb
imul
mov
mov
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
add
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbb
xor
adc
add
cmp
mov
jnz
sub
push
or
push
push
call
mov
mov
and
mov
mov
mov
or
mov
sub
mov
sub
mov
and
mov
dec
mov
mov
adc
xor
add
jmp
not
mov
xor
lea
push
mov
xor
lea
push
adc
mov
xor
push
call
mov
add
xor
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
retn
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
or
mov
sbb
mov
mov
jmp
xor
mov
sbb
add
add
mov
movzx
sbb
jmp
not
and
and
mov
mov
jmp
xor
mov
jmp
push
call
test
jmp
jz
leave
retn
push
mov
sub
and
mov
mov
or
jmp
push
mov
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
push
lea
mov
mov
jmp
push
sub
push
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
neg
jmp
xor
adc
mov
mov
xor
add
xor
and
add
neg
add
inc
div
mov
mov
mov
mov
cmp
jz
mov
mov
and
lea
xor
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
adc
mov
mov
movzx
or
mov
or
mov
mov
or
push
xor
xor
sub
push
mov
sub
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
neg
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
add
mov
add
lea
not
mov
mov
mov
and
mov
and
xor
add
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
mov
dec
mov
jmp
lea
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
inc
mov
or
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
mov
adc
mov
sbb
jmp
mov
xor
mov
adc
movzx
xor
add
not
mov
mov
or
mov
xor
add
cmp
jnz
dec
mov
mov
xor
add
cmp
jmp
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
pop
push
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
jmp
call
jmp
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
mov
add
mov
xor
xor
xor
mov
push
sub
mov
add
xor
mov
add
or
mov
mov
sub
mov
jmp
push
push
sbb
jmp
test
mov
jz
mov
mov
sub
mov
mov
or
jmp
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
or
mov
jmp
mov
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
or
add
mov
mov
mov
mov
jz
mov
xor
sbb
add
mov
jmp
imul
jno
dec
test
pusha
retn
and
dec
xchg
out
stosd
retf
nop
pop
pop
jo
add
jmp
push
cmp
mov
jnz
adc
push
add
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
add
add
mov
cmp
mov
jz
add
push
xor
push
dec
call
movzx
sub
jmp
mov
mov
xor
mov
xor
adc
add
mov
jmp
dec
retn
xchg
push
nop
push
dec
retn
mov
ficom
mov
jmp
pop
adc
sub
lock
jge
mov
in
arpl
into
retf
pop
test
leave
in
in
sub
imul
lds
jl
repne
jb
test
sti
or
inc
setalc
mov
insb
push
rcr
mov
sbb
jge
repne
dec
xchg
lock
leave
fist
mov
fistp
fnsave
nop
mov
jns
lodsb
rcl
add
fild
jle
les
xchg
jmp
or
sub
add
stosd
daa
stc
out
inc
add
jnz
inc
sbb
dec
or
jbe
mov
inc
add
mov
jo
jg
mov
call
mov
cmc
xor
dec
test
or
adc
mov
movsd
add
add
xor
pop
inc
add
inc
leave
adc
ror
pop
icebp
popf
stc
jno
xor
xlat
cdq
jns
and
out
xchg
bound
pop
pop
aaa
pop
dec
cmp
nop
hlt
pusha
xchg
dec
cmpsb
clc
cmp
jz
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
adc
jmp
push
mov
or
mov
mov
mov
not
add
movzx
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
jmp
mov
mov
add
jmp
aas
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
push
push
call
mov
mov
xor
add
cmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
wait
icebp
cld
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
jmp
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
jmp
mov
xchg
dec
mov
imul
sub
mov
jmp
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
jmp
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
push
mov
xor
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
jmp
inc
sub
xchg
jmp
dec
mov
imul
add
xchg
jmp
push
xor
mov
dec
jmp
xor
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
not
push
mov
mov
mov
mov
push
mov
mov
mov
mov
push
not
mov
not
mov
mov
cmp
mov
jz
mov
mov
sub
xor
add
mov
cmp
mov
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
add
mov
mov
xor
add
push
push
push
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
add
jmp
cmp
jnz
mov
xor
jmp
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
xor
jmp
mov
sub
push
sub
push
or
mov
jmp
cmp
xor
adc
mov
xor
add
push
jmp
mov
mov
inc
xor
add
mov
mov
dec
add
mov
jmp
cmp
jnz
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
xor
and
mov
add
sub
xor
push
sbb
mov
mov
add
push
call
mov
inc
cmp
mov
jb
mov
jmp
mov
cmp
mov
jnz
movzx
and
mov
add
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
retn
mov
stosb
scasb
test
popa
dec
enter
mov
popa
jmp
mov
or
xor
add
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
jmp
lahf
xchg
mov
mov
mov
jmp
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
jnz
mov
pop
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
mov
dec
mov
jmp
mov
push
mov
sbb
mov
mov
push
add
mov
adc
mov
jmp
xor
sub
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
jmp
mov
pop
leave
retn
push
mov
push
push
inc
jmp
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
sub
sub
mov
mov
cmp
jz
cmp
jnz
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
jge
dec
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
das
cmp
call
cmpsd
and
imul
and
retn
jbe
pop
mov
pop
pop
leave
retn
push
mov
jmp
mov
xor
mov
jmp
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
or
add
xor
movzx
and
mov
xor
xor
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
sub
xor
xor
sub
mov
movzx
sub
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
adc
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
sub
mov
push
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
jmp
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
sbb
add
jmp
pop
mov
cmpsb
lodsb
inc
stc
sbb
aas
adc
jnb
sub
xor
mov
mov
xchg
cmp
xchg
test
xor
sbb
adc
and
or
xor
in
in
aam
loop
jg
xchg
outsb
scasb
xor
fsub
in
repne
cwde
sar
lodsb
push
movsb
loope
arpl
cli
push
mov
add
lahf
push
aaa
xor
ja
sub
mov
add
sbb
test
and
out
push
mov
pop
out
jnz
nop
jnb
icebp
inc
les
xchg
int
cli
aam
inc
test
and
int
in
enter
lodsb
sar
xor
jg
in
shl
aas
fisttp
lahf
push
test
add
push
push
pushf
daa
mov
test
jmp
add
jmp
mov
mov
jmp
sbb
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jmp
jmp
mov
mov
add
xor
test
or
mov
jz
mov
lea
mov
mov
add
mov
jmp
retn
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
jmp
mov
mov
mov
sub
add
xor
xor
mov
cmp
jnz
and
mov
mov
add
and
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
jmp
leave
sub
jle
movsb
jg
jle
mov
cmp
xor
mov
imul
and
xor
push
push
adc
sub
or
sti
add
mov
pusha
js
mov
stosb
adc
mov
dec
repne
scasb
pop
cmpsd
inc
add
leave
std
xchg
pop
mov
into
mov
mov
dec
in
out
adc
in
sub
icebp
jbe
cmpsd
add
jmp
mov
xor
add
leave
retn
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
jz
add
xor
add
add
retn
setalc
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidiv
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
jz
add
mov
add
add
add
add
mov
add
retf
retn
retf
pop
add
imul
add
retf
retf
retn
jns
retn
dec
cmp
dec
jp
cmp
dec
dec
add
dec
retn
dec
push
push
pop
push
cmp
dec
retn
dec
xor
retn
dec
push
jb
jnb
or
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
sbb
setnb
nop
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
retn
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
retn
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
retn
dec
push
retn
retf
retf
lahf
mov
pop
das
imul
add
pop
mov
les
jle
xor
push
cmp
or
inc
add
sbb
aaa
jge
add
cmc
cmpsd
mov
sti
lock
aam
in
jecxz
xchg
hlt
add
mov
lodsb
inc
add
mov
outsb
inc
push
xor
and
push
cmp
mov
xor
dec
mov
in
mov
aam
xor
rol
push
xor
pop
mov
cdq
dec
jp
mov
sbb
jge
mov
js
mov
or
sbb
mov
repne
dec
jo
jo
adc
sbb
lds
das
sbb
jz
inc
scasd
sbb
jns
retn
cmp
imul
das
in
dec
jns
mul
clc
setalc
insb
stosd
iret
lock
cwde
fstp
xchg
xchg
popa
xchg
add
mov
in
adc
out
dec
jmp
mov
insb
mov
mov
jl
mov
in
jmp
lodsd
stc
adc
std
movsb
aaa
jbe
mov
clc
daa
adc
in
retn
sal
cli
clc
cli
clc
sar
sti
mov
lahf
mov
add
inc
scasb
and
cdq
pop
cmp
int
pop
dec
retf
fiadd
retn
push
retn
inc
jmp
aas
daa
push
cld
push
std
jmp
dec
push
xchg
jmp
and
dec
retf
lds
cmc
cwde
xchg
push
sub
inc
add
add
mov
leave
mov
add
adc
adc
push
push
mov
aas
mov
xor
shl
mov
and
retf
push
sbb
jmp
mov
xchg
mov
pop
and
dec
push
add
add
retn
inc
pop
mov
fstp
and
mov
add
add
push
or
jp
sbb
mov
jmp
inc
stosd
xchg
xor
or
in
loope
rcl
add
add
mov
adc
push
mov
dec
dec
lds
push
dec
mov
cld
push
mov
insb
in
or
xchg
outsb
stosd
mov
out
sub
daa
and
out
ficomp
loopne
retn
jmp
push
jnp
or
jmp
jmp
retf
sub
scasd
mov
aas
scasb
fnstenv
mov
add
cld
add
std
sub
mov
fucomip
mov
pusha
les
stc
jmp
pop
popf
ja
call
retn
or
xchg
mov
xchg
sbb
push
cmp
inc
or
jns
push
retn
add
jz
stc
dec
push
adc
test
cli
movsd
cmp
pusha
inc
jp
movsd
mov
and
inc
mov
mul
dec
add
dec
fidiv
loope
dec
inc
push
mov
xchg
cmp
push
jns
mov
aaa
pop
sub
aaa
lodsd
lea
mov
mov
mov
jge
std
mov
retf
xchg
wait
cwde
pop
popf
pop
xlat
fistp
push
inc
sahf
xor
add
add
ror
retf
retn
jecxz
test
ja
add
add
jmp
daa
mov
fldenv
add
pop
mov
or
retn
or
mov
and
pop
sub
add
clc
retn
dec
rol
retf
push
mov
fcom
inc
xor
iret
cld
retf
pop
test
clc
add
fdivp
test
inc
mov
fdivr
jmp
sub
cld
jb
add
jnz
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repne
cmp
test
fistp
inc
mov
add
inc
test
add
add
retn
add
inc
xor
fdiv
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
mov
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
ror
mov
push
mov
in
jnz
mov
add
clc
mov
add
rol
mov
jnz
inc
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
paddb
xor
sub
sub
cmp
add
xchg
add
adc
jmp
push
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
pop
or
add
retf
mov
retn
