push
mov
sub
sbb
mov
mov
mov
add
mov
dec
mov
sbb
push
push
sub
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adc
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
or
jmp
mov
adc
lea
xor
mov
adc
mov
or
mov
xor
xor
neg
add
mov
mov
lea
sbb
mov
mov
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
xor
add
mov
dec
mov
mov
mov
sbb
mov
adc
mov
xor
movzx
add
mov
jmp
cmpsd
inc
mov
mov
and
mov
xor
add
add
mov
cmp
mov
jnz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
or
mov
sub
and
mov
mov
add
xor
or
add
mov
cmp
jmp
jnz
mov
or
jmp
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
mov
mov
mov
movzx
add
jmp
retf
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
jmp
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
jmp
cdq
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
jmp
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
jmp
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
jmp
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
jmp
xor
push
sbb
mov
sbb
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
add
mov
mov
push
mov
or
mov
xor
mov
push
add
mov
sbb
jmp
add
cmp
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
mov
xor
mov
xor
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
retn
push
mov
sub
and
mov
jmp
inc
dec
wait
imul
add
jle
push
jns
jle
xor
add
retn
pop
mov
retn
add
shr
outsd
mov
inc
mov
xchg
inc
out
rcl
test
pop
mov
mov
jmp
mov
xor
mov
and
add
mov
xor
mov
movzx
mov
xor
mov
mov
sbb
mov
mov
lea
or
mov
and
jmp
mov
mov
sbb
mov
mov
sbb
xor
add
sub
or
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
adc
mov
mov
push
adc
xor
inc
mov
sub
add
jmp
not
mov
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
jmp
push
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
add
mov
jmp
adc
mov
xor
add
mov
mov
jmp
pop
retn
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
jmp
shr
jle
jns
jle
jl
dec
inc
retf
repne
pop
test
adc
add
retn
push
in
xor
xor
xchg
loope
test
in
fsub
cdq
scasd
fist
mov
cmp
rcr
les
pusha
loope
xchg
and
setz
cmc
aaa
mov
jb
bound
bound
loopne
hlt
and
cmp
fnstsw
hlt
std
xor
and
xchg
std
mov
sbb
mov
xor
inc
lea
mov
stosd
std
jns
ficomp
and
push
or
mov
mov
push
into
jbe
in
mov
sub
push
pop
jmp
xchg
adc
mov
pop
inc
push
test
add
or
mov
jnz
aas
hlt
xor
inc
sub
push
push
or
scasd
outsb
push
inc
mov
fadd
lds
pop
add
jb
call
sal
out
or
rol
aad
les
jg
xor
mov
add
cmc
dec
mov
jnb
scasd
mov
mov
in
test
mov
add
bound
adc
scasb
or
xchg
mov
cmpsb
xchg
fist
test
loop
mov
fst
push
or
imul
insd
sti
mov
insb
cmp
cld
mov
call
cli
sbb
jbe
pop
setalc
cmpsb
mov
sbb
int
mov
out
popf
or
std
sub
fisub
pop
and
and
or
cmp
inc
cmp
mov
rep
in
sti
mov
sbb
fisub
inc
mov
inc
and
inc
fcmovnb
sub
cdq
hlt
in
mov
test
push
loopne
inc
mov
and
int
cmp
pop
out
not
add
push
cmp
mov
xor
dec
out
mov
sub
aam
push
add
xchg
rep
sub
lahf
rol
out
fmulp
das
xchg
hlt
jnz
adc
jmp
pop
sub
loopne
and
jns
inc
sub
and
test
inc
and
add
in
out
xchg
js
sbb
aad
aam
pushf
and
lodsd
imul
inc
xchg
adc
aam
adc
and
push
loope
popa
repne
mov
pop
push
jo
inc
cdq
daa
inc
push
dec
sbb
or
push
add
push
rcr
push
jb
push
dec
mov
mov
or
push
xchg
xchg
retf
cmp
push
test
loopne
inc
push
adc
jz
pop
daa
adc
out
jo
retn
into
js
adc
scasb
scasd
fnstcw
jg
xchg
stosd
dec
in
lodsb
and
push
aas
mov
adc
pop
in
xor
add
cmp
jz
mov
lea
mov
jmp
push
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
sub
jmp
push
or
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
xor
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
inc
mov
inc
mov
xor
xor
mov
add
xor
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
push
jmp
push
mov
mov
mov
mov
jmp
mov
mov
jmp
cmp
jnz
add
mov
and
mov
sub
xor
or
mov
and
add
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
movzx
not
and
mov
mov
jmp
xor
mov
push
call
test
jmp
std
jz
leave
retn
push
mov
sub
mov
mov
mov
mov
sub
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
jmp
lea
movzx
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
jmp
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
add
xor
add
sbb
add
div
mov
jmp
mov
mov
jmp
mov
mov
cmp
mov
jz
mov
lea
add
mov
xor
mov
not
mov
or
imul
mov
mov
mov
mov
cmp
jz
mov
mov
sub
sub
mov
or
mov
xor
add
pop
pop
jmp
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
jmp
retn
jz
jl
pop
jmp
inc
sbb
jbe
or
in
jmp
xchg
adc
xchg
test
adc
mov
push
fcmovu
jecxz
cdq
pop
sal
inc
rcl
pop
jg
out
aad
or
pop
pop
iret
std
stos
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
jmp
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
movzx
sbb
mov
sbb
push
xor
or
sbb
push
jmp
jmp
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
xor
or
mov
add
push
sub
mov
xor
jmp
retn
scasb
mov
xor
not
mov
mov
add
jmp
cmp
jmp
dec
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
jmp
and
mov
or
sub
push
mov
or
mov
add
add
sub
push
dec
call
mov
inc
cmp
mov
jb
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
jmp
retf
dec
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
sub
push
adc
mov
mov
and
jmp
std
jge
or
clc
inc
retn
or
std
add
shl
cmp
push
bound
test
out
outsb
pop
test
inc
push
mov
cli
enter
pop
jl
and
jnp
push
xor
jecxz
sbb
loop
xor
jno
ror
mov
psubq
xor
int
push
jl
jg
das
fucomp
or
test
wait
popa
hlt
pop
sub
popf
and
inc
lea
mov
mov
test
dec
movsb
push
xor
jg
dec
daa
out
inc
mov
adc
push
imul
retf
out
xchg
cdq
lds
setalc
and
arpl
or
pop
mov
sbb
sub
adc
sbb
xor
dec
clc
shr
stosb
int
dec
adc
xchg
sbb
jp
out
cmp
out
mov
xlat
bound
loope
mov
nop
jb
mov
stc
mov
popa
and
inc
push
insd
mov
icebp
sub
pop
or
jnp
xchg
pop
dec
enter
add
inc
push
xor
lock
shr
pop
fnstsw
aas
add
adc
lea
and
test
jnp
sub
jp
fcomp
cmp
inc
repne
cmp
fimul
call
mov
sub
add
mov
jns
or
setalc
aaa
xor
dec
jnb
shl
xor
fidivr
std
xor
jno
dec
mov
sti
xchg
sal
jo
sub
fstp
fld
cmpsd
adc
push
cmp
pop
mov
and
mov
xchg
mov
mov
xor
iret
outsb
pop
mov
push
ja
mov
jno
dec
aad
sub
mov
fxch
mov
and
out
outsd
and
in
mov
test
mov
jmp
push
in
insb
add
xchg
in
xor
pusha
mov
dec
cli
jnb
cdq
dec
or
mov
ficom
repne
jz
xchg
cdq
cdq
and
test
call
jb
ficom
and
inc
pop
mov
aam
push
jge
cld
push
push
retf
mov
imul
jnp
fcomp
mov
stosb
call
leave
jb
jle
pushf
fcmovnb
daa
cmp
test
loopne
jbe
sbb
sbb
hlt
mov
xchg
popf
shl
mov
adc
lodsd
sub
push
icebp
fdiv
test
ficomp
leave
mov
inc
sub
sub
call
inc
inc
arpl
mov
mov
or
mov
xor
mov
movzx
add
mov
mov
jmp
jmp
sbb
xchg
out
jle
jo
jle
iret
cmp
cmp
mov
mov
stosd
int
adc
pop
rcr
jecxz
pop
test
int
jp
fsubr
fxch7
movsb
cmp
popa
mov
mov
cmp
pop
out
or
xchg
rcl
aad
xchg
test
and
and
jns
int
test
bound
fcmovb
loopne
mov
or
dec
lodsd
mov
mov
or
mov
lahf
xlat
popf
repne
adc
popf
setnp
cmp
icebp
mov
inc
wait
mov
in
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
mov
mov
mov
sub
add
jmp
sbb
xchg
mov
stosb
pusha
xor
jle
jns
jle
jg
adc
rcr
loope
and
lodsb
dec
in
mov
or
or
in
mov
and
jmp
mov
mov
or
mov
sbb
mov
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jb
or
mov
sbb
mov
xor
sub
mov
or
add
cmp
jz
mov
push
jmp
xor
mov
add
mov
add
sub
mov
mov
and
xor
add
add
mov
cmp
mov
jb
mov
mov
sub
xor
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
inc
xor
sbb
add
or
add
imul
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
mov
sub
cmp
mov
ja
xor
add
add
mov
or
jmp
std
dec
xor
adc
add
jmp
mov
sub
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
add
imul
xor
mov
mov
xor
sub
mov
cmp
mov
ja
mov
mov
mov
jmp
sub
mov
add
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
xor
xor
add
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jb
add
imul
mov
mov
jmp
sub
cmp
ja
mov
jmp
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
add
add
jmp
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
jmp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
rcr
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
xor
add
mov
lea
jmp
mov
mov
xor
mov
jmp
sbb
sahf
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
lahf
retf
pop
leave
retn
push
mov
sub
sbb
push
sbb
push
inc
push
and
push
adc
call
test
mov
jz
adc
xor
inc
mov
jmp
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
sub
mov
sbb
lea
movzx
and
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
and
xor
sbb
mov
xor
add
mov
mov
movzx
cmp
mov
movzx
mov
jz
sub
mov
xor
add
sbb
imul
mov
mov
mov
jmp
add
xor
sbb
add
mov
movzx
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xor
add
mov
cmp
jnz
sbb
push
mov
push
sbb
push
adc
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
mov
or
mov
mov
xor
mov
and
mov
and
mov
or
xor
sub
xor
adc
add
mov
adc
xor
xor
adc
add
mov
lea
mov
mov
mov
cmp
mov
ja
jmp
adc
mov
add
mov
xor
xor
lea
push
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
movzx
adc
mov
mov
xor
mov
lea
sub
push
and
mov
adc
push
call
mov
mov
mov
or
xor
lea
mov
or
mov
sub
xor
xor
xor
add
mov
and
xor
mov
lea
mov
mov
mov
cmp
mov
jbe
mov
mov
add
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
add
mov
inc
mov
sub
push
or
sub
sub
push
adc
xor
mov
push
call
sub
adc
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
push
push
mov
mov
mov
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
cmp
jz
or
jmp
mov
mov
xor
xor
add
mov
cmp
mov
jz
and
mov
mov
xor
xor
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
and
add
push
push
push
mov
jmp
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
add
mov
push
push
call
jmp
mov
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
and
mov
add
xor
cmp
mov
jnz
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
mov
jmp
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
retn
push
mov
push
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
movzx
adc
mov
and
xor
add
mov
jmp
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
mov
xor
sub
xor
xor
lea
xor
cmp
jnz
mov
jmp
jmp
and
mov
leave
dec
jle
popf
js
jle
adc
cli
call
add
adc
out
mov
xor
adc
ficom
push
xor
pop
stc
fbstp
add
retf
add
mov
xor
add
mov
mov
xor
jmp
stosb
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
call
jmp
mov
leave
retn
push
mov
sub
mov
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
mov
xor
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
movzx
adc
mov
xor
add
or
mov
sbb
mov
xor
push
mov
push
sbb
test
jz
mov
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
mov
or
mov
jmp
retf
xchg
sub
xor
xor
adc
mov
mov
dec
mov
mov
mov
add
xor
xor
add
mov
mov
mov
mov
jz
adc
mov
adc
xor
or
add
mov
cmp
jnz
sbb
push
or
call
and
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
xor
add
cmp
jz
or
push
push
sub
call
movzx
and
mov
mov
mov
cmp
jz
cmp
jnz
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
jmp
retf
mov
mov
jmp
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
jmp
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
xor
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
jmp
scasb
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
cmp
add
add
pop
cmp
add
add
jz
add
nop
cmp
add
add
int
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
retn
add
cmp
add
cmp
add
jmp
jbe
add
mov
add
inc
add
retf
add
inc
add
fiadd
add
inc
add
repne
add
inc
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int
inc
add
fadd
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
ror
setalc
dec
add
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
retn
retf
and
cmp
sti
fsubrp
dec
retn
retf
jecxz
push
test
retn
add
mov
mov
int
loopne
leave
jl
mov
retf
sbb
inc
dec
jl
aad
sti
icebp
lds
push
aas
setalc
outsd
inc
add
jg
push
jmp
mov
or
stc
js
and
out
dec
jmp
leave
not
jb
div
enter
dec
mov
pop
call
cld
jge
enter
dec
jl
std
cmp
inc
retf
mov
fmul
adc
ficom
cmp
cmpsd
or
in
push
add
jmp
retn
fiadd
retn
push
retn
inc
jmp
aas
daa
push
cld
push
std
jmp
and
dec
retf
push
sbb
jmp
mov
and
das
retf
push
jnp
jmp
adc
mov
pusha
retf
retf
retn
sub
scasd
fdivr
fnstcw
cmp
retn
retn
dec
rol
retf
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
dec
retf
