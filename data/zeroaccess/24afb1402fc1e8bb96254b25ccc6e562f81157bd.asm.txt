push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
sub
mov
sub
mov
xor
mov
add
mov
sbb
mov
push
movzx
sbb
mov
push
mov
xor
push
or
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
mov
mov
mov
or
mov
mov
sub
xor
add
mov
sbb
mov
mov
mov
xor
xor
add
jmp
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
jmp
mov
xor
xor
neg
jmp
add
mov
mov
xor
sbb
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
xor
sbb
add
dec
mov
lea
mov
movzx
and
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
jmp
retf
mov
jmp
cwde
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
jz
lea
push
mov
xor
add
jmp
pop
inc
inc
push
mov
add
jmp
mov
sub
mov
lodsb
jns
fistp
add
cli
jg
jle
xor
xchg
les
mov
lodsd
cmp
inc
mov
mov
sbb
push
mov
mov
jz
jbe
mov
cmp
jnz
std
push
pop
stc
popf
xchg
fnstenv
sub
adc
inc
dec
sub
mov
clc
mov
rol
xchg
dec
xor
mov
xchg
cmp
mov
neg
dec
in
and
mov
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pushf
inc
mov
mov
mov
mov
mov
test
jmp
mov
jnz
mov
xor
add
jmp
or
retf
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
jmp
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
jmp
jmp
inc
bound
insb
mov
lodsb
xchg
out
cld
inc
mov
hlt
or
add
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
push
pop
jmp
call
mov
mov
add
pop
jmp
add
mov
adc
push
mov
jg
jle
xchg
inc
jnp
fdivr
jmp
inc
clc
jo
jge
adc
retn
sub
in
lodsd
jp
jp
push
sub
insd
inc
rcr
xchg
and
bound
leave
mov
fimul
stc
mov
enter
jg
wait
repne
and
jo
retn
in
dec
mov
xor
retf
sbb
jg
rol
jnz
pop
push
mov
xchg
cmp
push
out
or
xchg
std
push
cmpsd
shl
retn
pop
xor
push
mov
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
push
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
not
mov
xor
mov
sbb
mov
mov
add
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
dec
mov
xor
mov
mov
sub
imul
mov
add
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbb
xor
add
not
mov
not
mov
mov
mov
adc
mov
adc
mov
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
jmp
mov
sbb
mov
sbb
xor
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
mov
sub
add
mov
cmp
mov
jz
mov
push
jmp
xor
mov
sub
mov
sub
xor
mov
xor
xor
mov
add
cmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
neg
xor
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jb
add
add
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
sub
cmp
mov
jbe
mov
mov
jmp
xor
jmp
inc
dec
popa
jno
jnz
xor
jle
xchg
and
jle
jl
jle
dec
sal
push
adc
add
stosb
dec
push
cmp
adc
sbb
inc
dec
mov
sti
xchg
or
lodsd
cwde
jmp
adc
pop
jnp
mov
out
pusha
inc
adc
xlat
dec
or
or
movsd
out
mov
jns
push
inc
enter
sbb
push
jge
enter
ja
jle
inc
pop
push
mov
xor
outsb
sub
iret
div
mov
insb
xor
inc
push
ror
cmc
add
mov
jg
sub
cld
wait
les
dec
adc
mov
sbb
in
mov
popa
in
clc
xchg
xor
sbb
and
dec
pop
leave
fist
adc
outsd
loopne
rol
call
mov
sbb
jmp
retn
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
sbb
pushf
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
imul
mov
xor
sub
lea
jmp
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
and
mov
xor
xor
not
add
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
jz
mov
xor
xor
xor
lea
xor
cmp
jnz
mov
jmp
add
mov
xor
add
mov
mov
mov
mov
jmp
xor
neg
jmp
sub
test
test
mov
jmp
xor
or
push
pop
sbb
arpl
add
hlt
mov
sub
sbb
or
sub
mov
lahf
inc
pop
loopne
xchg
jz
mov
in
jb
inc
outsd
test
mov
outsb
xchg
or
ror
adc
inc
xor
or
push
daa
xlat
mov
fisubr
pop
and
sti
xchg
cmp
add
int
stosd
int
scasb
or
adc
xor
stc
loop
imul
mov
push
jge
pop
and
mov
cmp
sub
in
cmp
retn
jno
mov
mov
mov
fild
scasd
aaa
mov
adc
retf
leave
cmp
jmp
push
retn
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
jmp
call
jmp
mov
leave
retn
push
mov
sub
push
call
mov
cmp
jnz
push
call
mov
cmp
mov
jnz
mov
mov
lea
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
movzx
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
sub
xor
adc
push
mov
add
mov
mov
mov
cmp
mov
mov
jz
or
mov
sbb
xor
add
sbb
imul
mov
mov
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
add
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbb
xor
adc
add
cmp
mov
jnz
sub
push
or
push
push
call
mov
mov
and
mov
mov
mov
or
mov
sub
mov
sub
mov
and
mov
dec
mov
mov
adc
xor
add
jmp
not
mov
xor
lea
push
mov
xor
lea
push
adc
mov
xor
push
call
mov
add
xor
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
retn
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
or
mov
sbb
mov
mov
jmp
xor
mov
sbb
add
add
mov
movzx
sbb
jmp
not
and
and
mov
mov
jmp
xor
mov
jmp
push
call
test
jmp
jz
leave
retn
push
mov
sub
and
mov
mov
or
jmp
mov
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
push
lea
mov
mov
jmp
push
sub
push
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
neg
jmp
xor
adc
mov
mov
xor
add
xor
and
add
neg
add
inc
div
mov
mov
mov
mov
cmp
jz
mov
mov
and
lea
xor
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
inc
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
adc
mov
mov
movzx
or
mov
or
mov
mov
or
push
xor
xor
sub
push
mov
sub
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
neg
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
add
mov
add
lea
not
mov
mov
mov
and
mov
and
xor
add
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
mov
dec
mov
jmp
lea
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
inc
mov
or
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
mov
adc
mov
sbb
jmp
mov
xor
mov
adc
movzx
xor
add
not
mov
mov
or
mov
xor
add
cmp
jnz
dec
mov
mov
xor
add
cmp
jmp
fsub
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
jmp
call
jmp
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
mov
add
mov
xor
xor
xor
mov
push
sub
mov
add
xor
mov
add
or
mov
mov
sub
mov
jmp
push
push
sbb
jmp
pop
test
mov
jz
mov
mov
sub
mov
mov
or
jmp
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
or
mov
jmp
mov
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
or
add
mov
mov
mov
mov
jz
mov
xor
sbb
add
mov
jmp
cmp
mov
jnz
adc
push
add
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
add
add
mov
cmp
mov
jz
add
push
xor
push
dec
call
movzx
sub
jmp
mov
mov
xor
mov
xor
adc
add
mov
jmp
dec
retn
xchg
push
nop
push
dec
retn
mov
scasb
mov
jle
cmp
retf
dec
pop
imul
xchg
jo
xchg
pushf
jbe
cmpsd
xchg
push
pop
pop
popa
sbb
sub
cmp
jz
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
adc
jmp
mov
or
mov
mov
mov
not
add
movzx
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
jmp
mov
mov
add
jmp
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
push
push
call
mov
mov
xor
add
cmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
jmp
mov
scasd
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
jmp
xchg
dec
mov
imul
sub
mov
jmp
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
jmp
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
mov
xor
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int
xor
retn
pop
sub
xchg
jmp
dec
mov
imul
add
xchg
jmp
push
xor
mov
dec
jmp
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
not
push
mov
mov
mov
mov
push
mov
mov
mov
mov
push
not
mov
not
mov
mov
cmp
mov
jz
mov
mov
sub
xor
add
mov
cmp
mov
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
add
mov
mov
xor
add
push
push
push
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
add
jmp
cmp
jnz
mov
xor
jmp
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
xor
jmp
mov
sub
push
sub
push
or
mov
jmp
xor
adc
mov
xor
add
push
jmp
mov
mov
inc
xor
add
mov
mov
dec
add
mov
jmp
cmp
jnz
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
xor
and
mov
add
sub
xor
push
sbb
mov
mov
add
push
call
mov
inc
cmp
mov
jb
mov
jmp
mov
cmp
mov
jnz
movzx
and
mov
add
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
retn
jge
push
dec
mov
setalc
mov
mov
sub
and
in
popf
ja
sub
lahf
mov
jz
inc
push
jo
stc
inc
sub
add
pop
lock
loope
mov
cdq
jl
test
xchg
push
adc
aam
call
repne
rol
add
cmpsb
mov
mov
cmp
into
xchg
mov
sar
test
add
retf
xor
jz
shl
clc
adc
in
out
test
call
sub
dec
repne
lodsd
and
retn
mov
or
xor
add
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
jmp
pop
pop
dec
mov
mov
mov
jmp
dec
add
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
aas
push
jnz
mov
pop
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
mov
dec
mov
jmp
mov
push
mov
sbb
mov
mov
push
add
mov
adc
mov
jmp
xor
sub
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
jmp
mov
pop
leave
retn
push
mov
push
push
inc
jmp
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
sub
sub
mov
mov
cmp
jz
cmp
jnz
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
jmp
mov
xor
mov
jmp
lahf
lodsb
inc
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
or
add
xor
movzx
and
mov
xor
xor
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
sub
xor
xor
sub
mov
movzx
sub
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
adc
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
sub
mov
push
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
jmp
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
jmp
add
jmp
xor
push
xchg
pop
retn
mov
mov
jmp
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
inc
jo
sbb
jle
jl
jle
wait
cmp
jo
aam
stosb
setalc
pop
test
mov
jg
sub
out
xor
test
xchg
dec
push
jnb
adc
sub
fstp
mov
cmp
wait
push
cdq
cmpsb
jg
jecxz
push
lea
aaa
lodsb
movsb
stc
cmp
arpl
inc
mov
loop
xchg
pop
jg
fsubr
wait
aas
pop
stosb
cmp
and
repne
fnstcw
jle
outsd
xchg
aaa
xor
pop
or
pop
mov
and
add
inc
retn
aad
push
std
xchg
jb
or
sar
sub
add
sahf
dec
pop
test
out
aad
movsb
dec
aad
xchg
xor
pushf
jle
and
inc
dec
not
inc
clc
or
xchg
mov
mov
add
or
push
jl
and
push
pop
mov
scasb
xlat
push
retf
jz
mov
lea
mov
mov
add
mov
jmp
retn
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
jmp
xchg
mov
mov
mov
sub
add
xor
xor
mov
cmp
jnz
and
mov
mov
add
and
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
jmp
mov
mov
stosd
retf
add
jmp
mov
xor
add
leave
retn
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
jz
add
xor
add
add
retn
setalc
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidiv
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
jz
add
mov
add
add
add
add
mov
add
retf
retn
retf
pop
add
imul
add
retf
retf
retn
jns
retn
dec
cmp
dec
jp
cmp
dec
dec
add
dec
retn
dec
push
push
pop
push
cmp
dec
retn
dec
xor
retn
dec
push
jb
jnb
or
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
sbb
setnb
nop
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
retn
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
retn
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
retn
dec
push
retn
retf
retf
pusha
ror
cmpsb
mov
retn
dec
jmp
pop
jl
mov
sal
test
or
pop
clc
or
inc
rol
jmp
retn
fiadd
retn
mov
lahf
jmp
and
xchg
jge
inc
mov
call
adc
add
bound
fistp
adc
retf
push
retn
inc
jmp
aas
daa
push
cld
push
std
jmp
and
dec
retf
push
sbb
jmp
inc
pop
mov
fstp
aad
mov
add
add
jg
jmp
das
add
in
ficomp
adc
mov
xchg
add
sahf
rcr
cld
mov
hlt
icebp
insb
xor
imul
mov
jle
jo
cmp
wait
sbb
add
dec
xchg
jo
fist
pusha
ficomp
retf
rep
dec
mov
cmp
xchg
push
loope
adc
leave
and
inc
sub
cmpsb
retn
xchg
sub
js
cmp
xor
aaa
js
and
jns
rsldt
pop
clc
xchg
stc
mov
xchg
fdivr
pop
int
adc
xchg
xchg
scasd
int
xchg
mov
xor
jnz
ficomp
mov
pop
sub
sub
sal
and
setalc
mov
cmpsb
insb
sub
mov
outsd
fcomp
movsb
imul
retf
push
jnp
clc
fisub
mov
mov
scasb
mov
add
sti
retf
or
jmp
mov
cmpsb
push
sbb
fisub
jl
add
dec
retf
jmp
cmpsb
xchg
add
add
and
adc
pop
sub
xlat
pusha
jb
mov
jnp
jno
cmpsd
inc
push
movsd
call
xlat
fdivr
mov
mov
push
aad
add
mov
add
js
mov
xlat
std
xor
leave
push
mov
mov
test
fidiv
push
pop
sbb
sub
lodsd
sub
js
inc
or
sub
sbb
cld
jno
sub
sub
dec
sbb
dec
adc
pop
rcl
jmp
xchg
cld
or
cwde
cld
mov
sbb
retf
sub
scasd
mov
aas
scasb
fst
retn
mov
mov
add
fucomi
xchg
mov
add
fldcw
call
cmp
mov
retf
mov
mov
mov
mov
add
movsd
retf
add
inc
lodsd
xchg
jl
aas
pop
push
retn
sahf
fst
sub
or
in
cmp
cmp
pushf
sbb
sub
cmp
insd
mov
or
or
and
imul
and
push
in
add
or
mov
sub
pop
adc
inc
lodsd
retn
fbstp
lds
fst
mul
add
sbb
adc
idiv
test
inc
aaa
add
push
cdq
xchg
retn
xor
add
sbb
sub
dec
inc
imul
rcl
add
add
pop
aad
sbb
test
push
mov
retn
retn
ja
and
aaa
mov
jmp
xchg
pop
dec
push
fadd
movsd
in
xor
cdq
xor
sub
scasd
fdivr
fnstcw
jecxz
test
ja
add
add
movsd
cmpsd
sub
retf
xor
jge
iret
retn
dec
rol
retf
push
mov
fcom
inc
xor
iret
cld
retf
push
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
pop
or
add
retf
mov
retn
