push
mov
sub
xor
jmp
mov
clc
mov
xor
mov
mov
or
mov
mov
mov
mov
push
or
push
add
mov
and
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
jmp
xchg
push
xchg
add
xor
mov
adc
lea
or
mov
xor
mov
neg
mov
xor
jmp
retn
retn
leave
retf
retn
movsd
xchg
add
mov
sbb
mov
lea
jmp
xlat
retn
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
mov
sbb
mov
dec
xor
add
mov
movzx
and
mov
mov
mov
adc
mov
xor
mov
mov
movzx
jmp
retf
aam
leave
fldcw
retf
cmp
add
xor
add
and
mov
mov
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
jmp
rcl
retn
out
jmp
add
js
jle
js
mov
int
fild
pop
xchg
pop
rep
jl
insd
retn
adc
adc
stosb
or
movsb
daa
nop
cmpsb
add
sbb
pop
sbb
imul
leave
into
imul
in
push
mov
test
cmpsb
xchg
jp
push
and
mov
leave
dec
jecxz
jle
mov
jb
push
std
in
rcl
test
sub
mov
stosd
popf
inc
mov
scasd
in
cli
enter
and
outsd
test
mov
fdivr
xchg
sbb
sbb
adc
and
dec
pop
das
int
pop
mul
push
fimul
sbb
add
loope
dec
push
or
adc
mov
xor
and
add
cmp
jnz
mov
mov
sbb
xor
add
jmp
cmp
jnz
mov
mov
xor
add
mov
jmp
aas
retf
retn
xchg
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
lea
xor
sub
mov
movzx
cmp
mov
movzx
jg
xor
jmp
retn
sub
jmp
retn
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
jmp
mov
mov
jmp
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidiv
sahf
mov
js
jle
js
imul
sub
pop
frstor
jge
into
jnp
sub
add
push
pusha
test
jl
retn
pop
mov
or
push
sbb
test
jnz
inc
aad
xor
mov
into
fisttp
xchg
push
sbb
push
cld
shl
inc
pop
loopne
push
mov
sub
test
xor
mov
dec
pusha
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
jmp
add
xor
cmp
jz
jmp
mov
mov
xor
add
mov
jmp
jmp
retf
retf
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
push
mov
add
push
xor
mov
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
dec
mov
mov
not
jmp
rol
retf
leave
retf
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
call
jmp
xor
jmp
dec
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
sub
mov
jmp
enter
fstp1
aam
mov
int
push
sub
js
jle
js
inc
mov
retf
mov
jge
aas
inc
or
xor
dec
mov
imul
mov
scasb
or
popf
wait
mov
pop
icebp
popf
xchg
mov
pop
das
idiv
cmp
jb
in
jmp
mov
mov
cdq
xchg
retn
movsb
mov
inc
xchg
shl
call
xchg
push
pop
pushf
test
out
mov
mov
retf
push
mov
add
cmp
jz
mov
mov
xor
jmp
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
mov
jmp
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
retf
retn
add
cmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
mov
jmp
xor
jmp
mov
jmp
pop
div
mov
jmp
mov
retn
and
or
mov
jmp
pop
retn
push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
mov
adc
xor
sub
mov
xor
jmp
add
sbb
movzx
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
mov
lea
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
jmp
mov
mov
or
mov
xor
sub
sbb
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
jmp
cmp
cmp
retn
push
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
jmp
ror
retf
cmp
jnz
pop
pop
mov
mov
jmp
retf
retn
xchg
xor
add
mov
mov
xor
add
mov
mov
jmp
retn
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jz
mov
jmp
lea
mov
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
jmp
enter
retn
mov
pop
leave
retn
push
mov
push
xor
push
jmp
mov
mov
mov
add
push
mov
mov
add
mov
mov
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
add
inc
mov
jmp
mov
xor
mov
mov
or
add
add
xor
imul
mov
jmp
cmp
retf
cmp
mov
jnz
jmp
retf
mov
add
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
retf
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
jmp
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
xor
jmp
mov
sbb
mov
xor
and
mov
add
neg
mov
or
movzx
sbb
not
xor
and
jmp
retn
mov
mov
jmp
xor
mov
push
call
test
jz
leave
retn
push
mov
sub
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
mov
sub
xor
mov
mov
xor
or
sub
imul
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
retn
lea
and
mov
sub
mov
or
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
lea
mov
mov
sub
and
mov
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
mov
jmp
mov
mov
mov
mov
xor
mov
jmp
xor
xor
add
add
div
mov
mov
cmp
jz
mov
lea
mov
mov
jmp
mov
imul
mov
mov
jmp
cmp
jmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
jmp
leave
xlat
retn
cmp
jz
mov
and
jmp
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
jmp
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
jmp
mov
mov
mov
jmp
inc
stc
xor
add
movzx
mov
xor
lea
add
jmp
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
jmp
mov
push
pop
dec
icebp
jz
xor
js
adc
sbb
xor
lea
dec
mov
sub
or
mov
mov
cmc
jmp
fsubr
movsd
dec
jnb
les
in
cmp
push
sar
stc
retf
mov
mov
jmp
fisttp
sbb
outsb
sal
and
jnp
mov
pop
in
js
pop
adc
push
mov
insd
repne
mul
rol
mov
fcomp
inc
and
mov
mov
xchg
mov
xor
mov
fist
mov
pop
wait
sar
adc
or
push
popa
scasb
sbb
call
aad
xchg
jecxz
or
and
out
and
jp
fst
mov
push
mov
inc
setalc
inc
fisub
push
aaa
adc
test
shl
sbb
repne
pop
and
inc
scasd
adc
mov
xchg
push
dec
jle
pop
not
pop
retf
pop
bound
aaa
cmpsd
xor
jg
imul
mov
pop
push
adc
sbb
or
inc
pop
inc
jnz
jecxz
outsb
das
cwde
sahf
jl
push
jmp
push
sub
inc
lodsb
mov
jmp
sbb
sahf
jmp
push
stosb
scasb
push
push
movsb
mov
xchg
aaa
jbe
xchg
cmp
icebp
popf
mov
mov
jnp
call
les
jo
mov
inc
insd
idiv
xchg
cwde
dec
mov
and
loopne
inc
in
imul
sar
cmp
test
fld
xchg
inc
inc
jo
or
aas
mov
ror
and
adc
sbb
fcom
xchg
xchg
dec
inc
daa
jbe
sbb
sar
mov
xchg
and
push
jb
fld
push
and
push
xchg
sal
in
out
xchg
xchg
mov
xchg
icebp
mov
xor
not
cmp
ja
push
lahf
mov
push
mov
sub
out
mov
sbb
test
cmc
cld
scasb
cmpsb
lahf
adc
adc
pop
aaa
cmc
rep
push
cmp
jmp
ror
aad
xchg
mov
aad
jbe
stc
mov
js
push
popa
push
push
loop
adc
cld
aaa
cdq
aad
fidivr
and
add
pop
sub
pusha
mov
jz
cmp
retn
and
shr
aas
sbb
mov
jnp
add
jz
inc
inc
or
or
mov
insb
push
fistp
push
or
jg
dec
loope
dec
and
mov
xchg
jmp
or
cmp
adc
dec
retf
sub
das
test
mov
mov
aad
xchg
loope
cmp
ja
mov
add
xor
pop
sub
xor
cld
retn
and
stosb
fchs
cmpsd
or
fldcw
cmpsd
mov
rep
push
rcl
pavgb
fldln2
mov
or
sub
push
call
out
cmpsd
icebp
dec
pop
cld
setalc
and
or
out
push
scasd
adc
call
lodsd
mov
push
push
jl
mov
shl
cmpsd
lodsd
mov
mov
xchg
mov
neg
sti
mov
adc
pop
int
pop
retn
int
cmp
jmp
scasb
mov
cmp
jnb
in
movsb
and
lock
dec
sbb
jb
ror
push
jle
fistp
cmp
sbb
jg
jno
cdq
pop
pop
in
mov
out
inc
xchg
jmp
lodsb
mov
jno
outsd
mov
fisub
add
sub
push
inc
mov
sti
mov
mov
push
jz
mov
jmp
push
mov
sub
sbb
mov
xor
jmp
push
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
call
jmp
mov
movzx
xor
mov
xor
or
mov
adc
add
sub
push
mov
adc
mov
neg
xor
jmp
retf
mov
mov
and
add
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
leave
retn
cmp
mov
jnz
and
jmp
and
mov
sbb
mov
mov
xor
sub
or
push
adc
mov
jmp
enter
setalc
retn
add
add
push
adc
call
mov
inc
cmp
mov
jb
mov
jmp
cmp
jnz
sbb
mov
mov
mov
mov
mov
movzx
and
mov
adc
xor
jmp
add
mov
not
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
xor
add
push
jmp
mov
retf
lahf
mov
push
push
call
jmp
cmp
jnz
mov
jmp
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
sub
push
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
jmp
mov
or
mov
mov
xor
add
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
add
mov
xor
jmp
retf
ror
leave
retf
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
and
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
and
xor
jmp
retf
retn
add
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
mov
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
mov
sub
mov
and
mov
or
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
call
xor
or
dec
mov
jmp
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
call
jmp
dec
mov
mov
jmp
retn
add
cmp
mov
jmp
retn
retn
fstp1
retf
jz
push
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
rol
leave
retf
add
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
add
jmp
retn
imul
mov
mov
jmp
cmp
retn
sbb
sub
cmp
jmp
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
retf
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
add
jmp
add
imul
jmp
aas
xlat
xlat
retf
xlat
retf
sub
mov
mov
sub
cmp
ja
jmp
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
fistp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
sub
cmp
mov
jbe
jmp
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
ror
jmp
pop
and
add
pop
sub
push
sub
mov
xchg
les
adc
add
pop
mov
xchg
sbb
mov
pop
jecxz
int
jnb
enter
rcl
pop
add
xchg
jnz
mov
jo
mov
mov
mov
push
in
or
in
jg
mov
cwde
jns
out
mov
mov
xchg
pop
sub
pop
dec
or
sbb
call
into
mov
lahf
test
rep
push
cld
movsd
mov
or
clc
inc
lodsb
test
xchg
sbb
fadd
cmp
leave
out
adc
fdiv
add
add
imul
mov
mov
mov
mov
add
mov
jmp
retn
mov
jmp
dec
mov
mov
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
mov
jmp
inc
mov
mov
xor
add
mov
mov
mov
mov
jmp
mov
xor
add
mov
mov
mov
mov
xor
jmp
retn
retn
add
mov
mov
jmp
mov
mov
xor
xor
add
add
jmp
retn
popa
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
retf
sub
mov
mov
xor
add
jmp
imul
mov
jmp
xor
jmp
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
imul
mov
jmp
retf
retn
fcmovnu
retn
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
call
xor
add
imul
cmp
jmp
retf
fst
xchg
cmp
jle
js
pop
adc
or
pop
retn
bswap
inc
cmc
enter
loope
nop
add
jp
and
add
jl
pusha
push
setalc
mov
retf
push
setalc
add
fdiv
mov
xor
mov
or
sub
or
outsd
nop
sahf
xor
and
push
xchg
sub
js
repne
fistp
adc
sub
mov
mov
jz
lds
outsd
and
xchg
into
lodsb
test
jbe
pop
pop
leave
retn
push
mov
sub
movzx
xor
push
and
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbb
call
mov
inc
mov
cmp
jb
mov
inc
mov
lea
inc
mov
and
lea
xor
mov
or
mov
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
and
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzx
cmp
mov
mov
mov
mov
jz
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
mov
xor
xor
add
add
imul
mov
mov
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
xor
mov
xor
add
and
mov
neg
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
not
add
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
add
mov
mov
xor
xor
add
mov
cmp
mov
jnz
mov
push
sub
push
push
sub
call
mov
mov
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
or
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
adc
mov
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
and
mov
add
xor
xor
xor
add
mov
xor
or
xor
add
lea
mov
mov
mov
cmp
ja
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sbb
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
push
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
inc
push
push
mov
mov
mov
mov
mov
push
jmp
retf
xlat
fcmovnbe
retf
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
mov
mov
xor
sub
add
cmp
jz
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
push
push
mov
add
jmp
retn
leave
leave
leave
retf
call
mov
mov
jmp
retn
mov
mov
jmp
jmp
mov
jmp
retn
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
jmp
add
mov
jmp
retn
push
push
call
mov
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
dec
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
mov
mov
add
xor
cmp
jnz
mov
mov
jmp
add
jmp
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
jmp
xor
add
leave
retn
push
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
adc
mov
inc
mov
and
xor
or
add
mov
mov
not
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
jmp
retn
retn
leave
retf
mov
xor
xor
lea
xor
jmp
cmp
jnz
jmp
jmp
cmp
aam
ror
mov
push
pop
adc
jg
jnp
js
mov
test
jmp
xchg
pop
jb
insd
in
dec
xchg
cwde
adc
nop
popa
sub
in
mov
pop
push
jp
or
cwde
xor
cdq
and
movsb
adc
setalc
xor
xchg
leave
xchg
rcr
push
std
enter
cld
jbe
jb
js
mov
adc
fcomip
jnp
test
shl
cmp
lahf
dec
retn
lodsd
xchg
pop
adc
iret
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
jmp
push
mov
jmp
retf
retn
retn
retf
setalc
xor
stosd
push
sbb
retn
jg
jnp
js
sbb
cmp
mov
scasd
cld
and
retf
in
leave
adc
retf
stosb
sub
mov
and
imul
jnp
mov
sbb
lodsd
out
cmp
js
inc
lds
xor
jl
sub
sal
inc
cli
dec
or
iret
dec
jmp
push
mov
jmp
retf
call
jmp
mov
leave
retn
push
mov
sub
jmp
rcl
retn
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
adc
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
mov
and
push
add
mov
and
xor
movzx
adc
mov
adc
add
inc
mov
mov
push
mov
push
test
mov
jz
jmp
retf
pop
movsd
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
not
xchg
add
jmp
sub
adc
xor
xor
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adc
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
add
mov
mov
jmp
mov
jz
inc
mov
xor
sbb
add
mov
cmp
mov
jmp
jnz
add
push
or
call
and
mov
jmp
mov
mov
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
mov
mov
xor
add
cmp
mov
jz
push
sub
push
call
jmp
sbb
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
jmp
retf
add
jmp
mov
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
jmp
pop
push
dec
pop
jmp
xchg
sub
jmp
retn
xchg
jmp
push
jecxz
fidivr
adc
js
dec
movsd
cmp
movsb
mov
inc
aaa
outsd
fistp
dec
mov
jmp
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
xor
add
jmp
mov
imul
mov
jmp
push
xor
jmp
mov
jmp
lea
cmp
jnz
mov
jmp
mov
mov
jmp
xor
add
jmp
mov
push
mov
test
loopne
rol
mov
or
mov
lds
mov
push
iret
mov
jmp
retn
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
retn
scasb
xor
pop
jmp
pop
leave
retn
retf
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
cld
mov
push
push
retf
