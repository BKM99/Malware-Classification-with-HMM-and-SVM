push
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jnz
mov
push
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
mov
mov
xor
add
mov
xor
push
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
add
movzx
add
not
or
and
movzx
xor
mov
sub
mov
adc
mov
sbb
mov
sbb
push
or
mov
dec
movzx
mov
sub
mov
mov
xor
or
add
mov
mov
mov
or
mov
movzx
or
lea
mov
mov
mov
add
lea
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
mov
and
xor
xor
and
xor
and
add
mov
add
div
mov
mov
mov
cmp
mov
jz
mov
lea
sbb
mov
mov
jmp
mov
imul
mov
mov
cmp
jmp
retn
jz
mov
or
jmp
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
xor
mov
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
movzx
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
jecxz
lodsd
xor
cmp
jz
mov
add
jmp
mov
cmp
jnz
mov
xor
add
test
jnz
xor
jmp
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
jmp
jo
stosb
and
mov
cld
pop
inc
jo
dec
cmp
xchg
mov
jge
mov
call
aad
dec
jnz
xchg
imul
loope
cld
popf
xor
wait
femms
or
dec
movsb
pop
test
sbb
jns
scasb
push
loopne
lodsd
test
pminsw
sbb
dec
jbe
dec
icebp
cmp
jmp
xchg
add
push
cmp
sub
sub
leave
aaa
jg
enter
icebp
into
test
jge
and
and
in
jno
pop
jb
lodsb
push
lodsb
lock
enter
inc
scasb
test
jns
push
xchg
cmp
and
and
cld
js
inc
aad
sahf
sub
setalc
and
jns
mov
inc
dec
mov
cmp
mov
inc
add
push
jnz
mov
js
jecxz
aaa
setalc
pop
jno
push
scasb
int
repne
daa
repne
push
adc
mov
push
cmp
and
call
enter
xor
bound
and
test
mov
lea
fcmovnu
adc
in
or
retn
sti
cmp
and
adc
fstp1
mov
sbb
push
wait
push
push
xor
mov
sub
mov
sbb
jmp
mov
mov
mov
sbb
jmp
mov
sub
push
add
mov
xor
and
mov
push
mov
add
add
jmp
cmp
mov
jz
and
mov
sbb
mov
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
jmp
mov
sub
add
xor
adc
add
mov
cmp
ja
push
jmp
mov
mov
jmp
mov
jmp
xor
jmp
add
mov
imul
mov
jmp
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
sub
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adc
add
movzx
sub
movzx
adc
mov
and
mov
xor
or
xor
mov
lea
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
and
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
and
mov
mov
add
mov
or
mov
jmp
mov
pop
push
inc
xor
mov
sbb
add
mov
jmp
mov
mov
mov
inc
cmp
jmp
sbb
movsb
scasb
xchg
sub
cmp
retn
cdq
jb
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
cmp
jnz
pop
jmp
xchg
push
pop
mov
mov
jmp
xor
add
mov
mov
xor
add
jmp
mov
mov
mov
mov
cmp
jz
mov
mov
jmp
xchg
mov
cmp
jnz
mov
jmp
mov
movsx
xor
add
cmp
jmp
pusha
jz
mov
jmp
lea
mov
mov
add
mov
mov
xor
lea
mov
jmp
daa
jl
mov
jg
sti
fimul
pop
sub
rep
inc
cmp
push
mov
stosd
test
add
scasd
bound
jz
test
mov
or
call
outsd
inc
dec
xchg
inc
jmp
jmp
mov
xor
mov
add
jmp
mov
pop
leave
retn
push
mov
push
push
sub
mov
mov
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adc
jmp
or
add
xor
add
imul
mov
mov
mov
cmp
mov
jnz
mov
mov
xor
jmp
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shl
add
retn
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
push
mov
mov
mov
mov
adc
xor
add
and
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
dec
push
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
adc
add
mov
movzx
and
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
pop
leave
retn
push
mov
mov
xor
jmp
mov
div
mov
and
or
mov
pop
retn
push
mov
push
mov
add
mov
mov
mov
mov
add
mov
xor
sub
add
xor
mov
inc
mov
sub
mov
mov
mov
mov
adc
mov
mov
mov
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
leave
retn
push
mov
sub
add
mov
sbb
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
jmp
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
mov
mov
mov
adc
mov
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
jmp
sbb
mov
push
sbb
push
push
mov
and
jmp
xor
add
mov
and
add
jmp
mov
xor
mov
mov
mov
xor
mov
xor
mov
sub
xor
add
add
adc
mov
mov
sbb
mov
or
mov
xor
add
mov
neg
mov
sbb
xor
add
sub
push
sbb
mov
sub
xor
adc
add
push
add
mov
add
xor
add
add
push
lea
push
push
adc
push
call
sub
jmp
test
mov
jz
lea
sbb
push
sbb
mov
and
xor
add
push
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
push
mov
xor
add
push
mov
xor
add
push
push
lea
push
jmp
push
push
call
test
jz
lea
jmp
push
mov
xor
add
push
mov
add
push
mov
jmp
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
jmp
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
retn
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
mov
sub
mov
mov
and
xor
add
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbb
xor
add
mov
or
mov
mov
inc
mov
mov
cmp
jz
cmp
jnz
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
mov
mov
add
mov
mov
sub
mov
mov
and
mov
jmp
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
jz
push
mov
jmp
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
mov
jmp
xchg
cwde
sub
mov
xor
sbb
add
mov
cmp
mov
jmp
jb
mov
sbb
mov
xor
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
mov
ja
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
jmp
popf
dec
retn
pop
stosd
mov
xor
add
mov
jmp
and
mov
or
mov
xor
not
xor
sub
add
or
add
or
imul
adc
mov
sub
mov
and
sub
cmp
mov
ja
mov
mov
jmp
mov
mov
xor
xor
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
dec
push
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
mov
xor
add
mov
mov
mov
jmp
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
clc
push
add
jmp
imul
jmp
test
mov
pop
add
jo
imul
test
sbb
mov
retf
imul
adc
jecxz
xor
add
xchg
retf
sub
or
xchg
add
mov
sub
mov
out
add
jo
js
mov
sbb
imul
sti
dec
add
call
hlt
lodsd
pop
dec
jns
outsb
enter
xchg
xchg
mul
xor
add
nop
mov
xchg
xchg
cmpsd
repne
insd
pop
outsd
xchg
in
xor
daa
or
jbe
jbe
sbb
inc
insd
cmp
and
clc
hlt
jnb
or
push
jp
pop
aam
sbb
dec
cld
out
cmc
mov
xchg
dec
enter
fild
jnz
and
stosd
inc
cmp
jge
dec
cmpsb
test
jz
call
ja
daa
outsd
dec
les
sub
aaa
mov
leave
cmp
in
add
dec
add
dec
dec
scas
dec
pop
test
cld
jp
stc
fisubr
adc
sbb
push
rep
push
dec
mov
daa
jz
pop
dec
mov
hlt
sbb
sbb
sti
test
inc
jno
inc
inc
add
mov
mov
mov
xor
jmp
lodsd
imul
cld
fnstsw
jo
jg
jo
les
adc
mov
out
xchg
wait
imul
fisubr
dec
adc
push
dec
mov
and
dec
xor
outsd
sbb
mov
pop
insd
push
inc
xchg
pop
xor
and
jle
and
ja
test
wait
mov
jns
lock
push
retn
lock
push
dec
lds
pop
push
scasb
mov
or
sub
retn
mov
loop
xor
fild
dec
mov
xlat
jp
retf
push
sar
push
pop
loopne
dec
aam
retf
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
pop
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
sub
xor
push
call
test
jnz
add
xor
jmp
call
cdq
mov
cmp
jnz
cmp
jz
push
sub
call
add
test
mov
jnz
sub
push
xor
mov
or
mov
xor
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
lea
sub
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jb
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
call
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
add
push
mov
sbb
xor
sbb
push
xor
mov
adc
add
mov
mov
mov
cmp
mov
jz
mov
xor
sub
add
add
imul
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
sub
xor
add
mov
cmp
jnz
xor
push
sub
push
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
jmp
mov
mov
mov
mov
mov
and
mov
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
push
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jz
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
push
mov
push
add
mov
mov
push
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
push
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
xor
or
sub
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
sub
push
adc
push
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
jmp
push
jmp
stosb
mov
adc
add
sbb
mov
not
lea
xor
mov
mov
add
mov
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
add
mov
mov
lea
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
add
mov
sub
xor
add
add
neg
mov
mov
movzx
sbb
mov
mov
mov
mov
or
mov
add
movzx
add
mov
mov
jmp
mov
mov
xor
add
cmp
jnz
mov
mov
xor
add
cmp
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
jmp
mov
xor
lea
xor
sub
mov
movzx
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
jmp
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
scasd
inc
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
jmp
sub
imul
pop
mov
xchg
cmc
jo
xchg
jg
jo
xchg
cmp
scasb
out
jge
mov
pop
mov
repne
sbb
cmpsb
push
insb
loopne
stosb
jnb
out
xlat
in
daa
sti
add
add
or
popa
pop
mov
int
pop
or
stosb
scasb
mov
stc
stosb
rcl
cmp
jmp
sbb
wait
sub
cdq
in
jle
lahf
jnp
in
arpl
push
das
aad
js
sub
or
pop
mov
div
into
push
mov
sahf
retf
mov
mov
jmp
retn
mov
add
jmp
rep
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
jmp
retf
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
push
sbb
mov
sbb
mov
or
jmp
mov
add
and
xor
cmp
mov
jnz
mov
mov
movzx
xor
mov
add
xor
mov
mov
or
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
xor
push
jmp
adc
icebp
dec
pop
pop
or
push
les
jnp
jo
jb
jo
xor
rep
sub
cmp
push
mov
xor
jz
std
dec
aaa
lodsd
sti
in
cmpsd
aam
div
std
test
stc
and
inc
insb
test
xchg
nop
retn
mov
mov
add
jmp
push
dec
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
jmp
xor
jmp
add
leave
retn
push
mov
mov
mov
and
sub
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
jz
mov
mov
sub
xor
jmp
pop
cmp
jnz
mov
add
jmp
mov
xor
jmp
add
jmp
ja
and
dec
xchg
sbb
xor
jle
jo
std
mov
retf
push
aas
mov
dec
xor
xor
in
out
or
sti
and
hlt
fld
pop
neg
sub
rcl
std
dec
ja
add
or
adc
rcr
fst
sbb
fiadd
adc
adc
or
inc
fcomip
les
mov
cld
pop
sub
inc
xor
mov
cld
mov
xor
mov
nop
inc
stosd
daa
mov
movsd
retf
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
retn
push
mov
sub
mov
mov
mov
sub
and
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
xor
xor
add
sub
imul
mov
add
push
mov
sbb
xor
sbb
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbb
push
adc
push
adc
test
mov
jz
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
not
mov
neg
mov
movzx
add
mov
imul
jmp
cmc
cdq
mov
add
not
mov
or
mov
sub
xchg
sub
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
or
mov
adc
jmp
mov
mov
and
mov
and
xor
jmp
popf
and
xor
add
mov
mov
mov
jmp
jz
movzx
add
mov
or
xor
add
mov
cmp
jnz
push
adc
call
mov
add
mov
jmp
sbb
popa
push
neg
mov
inc
fcomp5
sahf
jo
dec
jge
jo
xchg
enter
popa
jnp
pushf
retn
xchg
retn
sub
sub
cmpsd
or
adc
cmpsb
cmpsb
jle
repne
mov
arpl
sahf
das
cmpsd
inc
stosd
and
not
and
call
mov
arpl
wait
mov
push
pop
or
imul
hlt
adc
and
lodsb
xchg
leave
rcl
mov
fst
or
dec
pop
fsubp
or
sbb
push
sbb
loop
test
das
inc
fdiv
add
push
loopne
insb
call
adc
dec
dec
aad
inc
ror
add
xchg
add
xchg
sal
clc
xor
push
cmp
retn
aas
and
sal
retf
mov
lodsd
inc
fisubr
inc
cmc
inc
jle
push
rcl
pop
and
in
mov
mov
mov
xor
mov
xor
xor
add
mov
cmp
mov
jz
push
adc
push
call
jmp
retn
rcr
popa
cdq
retn
mov
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
add
mov
mov
mov
add
jmp
xor
mov
mov
jmp
mov
add
lea
mov
push
push
push
call
mov
mov
jmp
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
mov
mov
mov
mov
mov
xor
add
jmp
pusha
or
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
jmp
test
jz
mov
jmp
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
retf
cmp
mov
jmp
xor
lea
mov
mov
jmp
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
jmp
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
mov
mov
mov
push
nop
mov
push
leave
iret
pop
push
mov
or
add
sub
int
jnz
add
sbb
mov
lea
push
enter
test
enter
neg
or
inc
push
mov
cld
push
pop
inc
stc
test
clc
test
cmp
pop
or
add
add
push
retf
dec
add
add
cmp
jz
mov
cld
rol
retn
push
lea
cwde
jnz
lodsb
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
inc
lodsb
inc
inc
mov
xchg
or
call
adc
or
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovnz
call
mov
call
leave
inc
adc
jnz
call
dec
inc
mov
add
mov
push
or
dec
xor
cmp
mov
pop
adc
retn
