push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
sub
mov
sub
mov
xor
mov
add
mov
sbb
mov
push
movzx
sbb
mov
push
mov
xor
push
or
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
mov
mov
mov
or
mov
mov
sub
xor
add
mov
sbb
mov
mov
mov
xor
xor
add
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
jmp
mov
xor
xor
neg
jmp
add
mov
mov
xor
sbb
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
xor
sbb
add
dec
mov
lea
mov
movzx
and
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
jmp
mov
jmp
mov
push
jo
adc
dec
push
push
mov
js
jle
jg
jle
cmpsd
retf
push
fcomi
jmp
dec
inc
pop
push
mov
lodsd
xchg
dec
xchg
cmp
setalc
sub
pop
mov
and
std
push
sub
pop
mov
retn
cmpsb
daa
cmc
mov
popa
jbe
sbb
outsd
xchg
dec
loop
or
jle
fnstsw
arpl
jge
xchg
stosd
enter
inc
inc
fiadd
jns
push
les
and
retf
dec
mov
test
mov
inc
pop
adc
sbb
pushf
cmpsb
push
sub
push
test
daa
fscale
imul
js
push
retf
fsub
js
into
mov
clc
jp
mov
mov
leave
call
std
mov
inc
mov
adc
js
inc
cdq
popa
arpl
iret
insb
mov
mov
xor
add
mov
mov
mov
xor
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
xchg
wait
jz
lea
push
mov
xor
add
jmp
push
mov
add
jmp
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
push
lds
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
rol
xor
add
cli
jg
jle
xchg
inc
rcl
outsb
mov
mov
pop
push
push
push
enter
dec
scasb
pop
push
and
into
out
enter
mov
int
sahf
push
mov
fidiv
push
stosb
adc
loope
mov
add
hlt
inc
test
xor
mov
popa
adc
movsd
movsd
and
push
mov
jnz
retn
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
test
jmp
push
jnp
or
push
adc
nop
dec
push
push
scasb
aas
or
jle
jg
jle
rcr
in
cmp
pop
popf
mov
out
out
jecxz
cmp
mov
lds
out
test
push
adc
inc
mov
rep
insb
loop
lds
mov
inc
retf
jmp
popa
dec
or
sbb
lahf
mov
push
jz
mov
mov
xchg
neg
push
sub
dec
loopne
cld
cwde
aaa
arpl
xor
idiv
push
in
or
jmp
mov
jnz
mov
xor
add
jmp
or
retf
icebp
jecxz
icebp
loop
mov
xchg
stosb
or
jle
insd
cmpsb
repne
retn
sub
jmp
push
test
add
xor
adc
lahf
mov
push
inc
jno
sub
fidiv
mov
and
cmpsb
scasb
mov
out
stosb
mov
sub
in
aam
lahf
fsubr
jmp
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
jmp
pop
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
jmp
jmp
mov
ror
fstp
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
push
pop
jmp
call
mov
mov
add
pop
jmp
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
push
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
not
mov
xor
mov
sbb
mov
mov
add
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
dec
mov
xor
mov
mov
sub
imul
mov
add
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbb
xor
add
not
mov
not
mov
mov
mov
adc
mov
adc
mov
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
jmp
push
pop
stc
mov
sbb
mov
sbb
xor
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
mov
sub
add
mov
cmp
mov
jz
mov
push
jmp
xor
mov
sub
mov
sub
xor
mov
xor
xor
mov
add
cmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
neg
xor
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jb
add
add
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
sub
cmp
mov
jbe
mov
mov
jmp
xor
jmp
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
jmp
sub
test
jmp
push
retf
lahf
xor
clc
pop
xchg
pop
sbb
mov
mov
enter
dec
pop
fucomp
adc
fist
inc
outsd
ror
jns
hlt
or
or
fidivr
mov
jl
pusha
xchg
add
jp
jle
shl
js
pop
dec
sub
hlt
mov
mov
push
xor
and
inc
aad
add
int
enter
jecxz
mov
ficomp
jmp
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
div
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
imul
mov
xor
sub
lea
jmp
retn
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
and
mov
xor
xor
not
add
jmp
adc
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
jz
mov
xor
xor
xor
lea
xor
cmp
jnz
mov
jmp
add
mov
xor
add
mov
mov
mov
mov
jmp
xor
neg
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
jmp
call
jmp
mov
leave
retn
push
mov
sub
push
call
mov
cmp
jnz
push
call
mov
cmp
mov
jnz
mov
mov
lea
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
movzx
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
sub
xor
adc
push
mov
add
mov
mov
mov
cmp
mov
mov
jz
or
mov
sbb
xor
add
sbb
imul
mov
mov
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
add
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbb
xor
adc
add
cmp
mov
jnz
sub
push
or
push
push
call
mov
mov
and
mov
mov
mov
or
mov
sub
mov
sub
mov
and
mov
dec
mov
mov
adc
xor
add
jmp
not
mov
xor
lea
push
mov
xor
lea
push
adc
mov
xor
push
call
mov
add
xor
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
retn
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
or
mov
sbb
mov
mov
jmp
xor
mov
sbb
add
add
mov
movzx
sbb
jmp
cmp
not
and
and
mov
mov
jmp
xor
mov
jmp
push
call
test
jmp
jz
leave
retn
push
mov
sub
and
mov
mov
or
jmp
mov
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
push
lea
mov
mov
jmp
push
sub
push
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
neg
jmp
xor
adc
mov
mov
xor
add
xor
and
add
neg
add
inc
div
mov
mov
mov
mov
cmp
jz
mov
mov
and
lea
xor
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
adc
mov
mov
movzx
or
mov
or
mov
mov
or
push
xor
xor
sub
push
mov
sub
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
neg
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
add
mov
add
lea
not
mov
mov
mov
and
mov
and
xor
add
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
mov
dec
mov
jmp
lea
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
inc
mov
or
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
mov
adc
mov
sbb
jmp
mov
xor
mov
adc
movzx
xor
add
not
mov
mov
or
mov
xor
add
cmp
jnz
dec
mov
mov
xor
add
cmp
jmp
wait
test
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
jmp
call
jmp
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
mov
add
mov
xor
xor
xor
mov
push
sub
mov
add
xor
mov
add
or
mov
mov
sub
mov
jmp
or
push
push
sbb
jmp
stc
test
mov
jz
mov
mov
sub
mov
mov
or
jmp
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
or
mov
jmp
mov
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
or
add
mov
mov
mov
mov
jz
mov
xor
sbb
add
mov
jmp
imul
jno
dec
test
pusha
stosb
das
retn
retf
inc
mov
leave
sar
sub
mov
insb
loopwne
xchg
mov
or
dec
int
das
wait
arpl
aad
popf
daa
aaa
cmp
add
setalc
cmp
mov
xlat
clc
push
sbb
push
jl
pop
arpl
lea
test
xor
cmp
mov
sub
add
mov
out
xor
ficom
scasb
lodsd
xchg
jl
and
jge
inc
pushf
push
xor
fsubrp
jle
or
cmp
inc
adc
xor
sub
jge
mov
in
cwde
jnb
repne
retf
and
push
mov
out
aad
int
push
call
add
sub
mov
nop
das
jp
cdq
jmp
jnb
mov
or
pop
and
mov
fcmovnb
cdq
xor
adc
test
xchg
jge
mov
add
insb
inc
inc
std
out
retn
pusha
test
leave
cmp
mov
jnz
adc
push
add
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
add
add
mov
cmp
mov
jz
add
push
xor
push
dec
call
movzx
sub
jmp
mov
mov
xor
mov
xor
adc
add
mov
jmp
dec
retn
xchg
push
nop
push
dec
retn
cmp
jz
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
adc
jmp
push
mov
or
mov
mov
mov
not
add
movzx
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
jmp
mov
mov
add
jmp
xlat
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
push
push
call
mov
mov
xor
add
cmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
jmp
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
jmp
jp
xchg
dec
mov
imul
sub
mov
jmp
retf
clc
mov
repne
add
dec
sbb
mov
les
jz
aaa
retf
adc
clc
insd
insb
stosb
in
push
jge
cmp
or
fcom
sub
inc
xor
in
inc
push
imul
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
jmp
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
mov
xor
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
jmp
sub
xchg
jmp
dec
mov
imul
add
xchg
jmp
sti
push
xor
mov
dec
jmp
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
not
push
mov
mov
mov
mov
push
mov
mov
mov
mov
push
not
mov
not
mov
mov
cmp
mov
jz
mov
mov
sub
xor
add
mov
cmp
mov
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
add
mov
mov
xor
add
push
push
push
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
add
jmp
cmp
jnz
mov
xor
jmp
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
xor
jmp
mov
sub
push
sub
push
or
mov
jmp
xor
adc
mov
xor
add
push
jmp
add
mov
mov
inc
xor
add
mov
mov
dec
add
mov
jmp
cmp
jnz
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
xor
and
mov
add
sub
xor
push
sbb
mov
mov
add
push
call
mov
inc
cmp
mov
jb
mov
jmp
mov
cmp
mov
jnz
movzx
and
mov
add
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
retn
aam
mul
popf
sub
cli
sbb
in
sbb
popf
pop
or
push
push
movsd
sbb
jns
pop
cmc
sahf
xchg
retf
ror
pop
into
add
das
in
add
clc
into
inc
rcr
pop
insd
mov
mov
jl
js
xlat
in
sbb
cmp
daa
mov
mov
or
xor
add
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
jmp
cwde
or
mov
mov
mov
jmp
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
jnz
mov
pop
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
mov
dec
mov
jmp
mov
push
mov
sbb
mov
mov
push
add
mov
adc
mov
jmp
dec
xor
sub
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
jmp
mov
pop
leave
retn
push
mov
push
push
inc
jmp
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
sub
sub
mov
mov
cmp
jz
cmp
jnz
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
jmp
cmc
cwde
mov
xor
mov
jmp
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
or
add
xor
movzx
and
mov
xor
xor
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
sub
xor
xor
sub
mov
movzx
sub
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
adc
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
sub
mov
push
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
jmp
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
jmp
push
stosd
sub
mov
and
or
jl
jle
test
outsd
retn
dec
add
adc
cmp
cdq
pop
mov
jl
int
dec
dec
jl
adc
inc
push
pusha
inc
push
pusha
aaa
mov
cmp
jg
jnb
cmc
sub
push
dec
push
daa
jmp
push
aaa
or
mov
popa
aam
lodsb
aam
sub
retn
cli
lock
pop
or
mov
and
sti
jbe
lodsb
mov
out
or
mov
or
bound
daa
cmpsd
jo
xlat
cld
add
iret
sub
xor
dec
setno
inc
jb
jbe
jl
mov
mov
test
mov
mov
jp
popa
jge
cmp
cmp
sbb
sbb
inc
fsub
call
dec
outsd
cmpsd
cmpsd
fist
mov
pushf
std
imul
aaa
mov
push
scasd
and
add
scasb
bound
push
lds
cwde
add
jmp
mov
mov
jmp
pop
cdq
pop
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jmp
jmp
mov
sal
sbb
frstor
add
jmp
mov
stosb
jz
mov
lea
mov
mov
add
mov
jmp
retn
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
jmp
mov
mov
mov
sub
add
xor
xor
mov
cmp
jnz
and
mov
mov
add
and
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
jmp
inc
add
jmp
mov
xor
add
leave
retn
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
jz
add
xor
add
add
retn
setalc
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidiv
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
jz
add
mov
add
add
add
add
mov
add
retf
retn
retf
pop
add
imul
add
retf
retf
retn
jns
retn
dec
cmp
dec
jp
cmp
dec
dec
add
dec
retn
dec
push
push
pop
push
cmp
dec
retn
dec
xor
retn
dec
push
jb
jnb
or
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
sbb
setnb
nop
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
retn
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
retn
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
retn
dec
push
retn
retf
retf
xchg
mov
idiv
scasd
int
pop
push
nop
test
add
pop
mov
mov
sub
cmp
pop
mov
adc
sub
lea
xchg
xor
push
dec
push
mov
jp
mov
popf
or
sub
movsd
aam
or
inc
push
cli
cmp
jmp
push
retn
jle
not
mov
cmp
cli
mov
aad
sub
aam
out
add
push
sbb
pushf
imul
or
push
wait
cmp
cdq
adc
retf
dec
jmp
jno
retf
test
inc
sbb
int
dec
rcl
add
add
retn
mov
mov
jecxz
add
mov
add
add
shl
mov
inc
das
dec
pushf
push
inc
retf
xchg
cmp
sbb
cmp
inc
pushf
leave
sub
sub
test
retn
test
imul
mov
retn
fiadd
retn
push
retn
inc
jmp
xor
pusha
retf
aas
daa
push
cld
push
std
jmp
and
dec
retf
push
sbb
jmp
clc
neg
pop
jle
pop
cmp
test
inc
mov
xchg
xchg
cmp
mov
dec
cld
and
push
jnp
fcompp
xchg
fisttp
mov
jbe
cld
jz
add
loopne
inc
dec
mov
add
dec
jnp
pop
inc
mov
dec
pop
pop
nop
cmpsd
std
sbb
sub
jmp
jnp
pop
cmpsd
fidivr
loope
pusha
inc
xor
nop
cmp
out
mov
inc
jp
movsb
dec
nop
stosb
xchg
repne
jmp
dec
mov
add
adc
or
clc
insd
mov
or
jb
sbb
mov
idiv
push
retf
or
jmp
imul
push
jnp
sbb
push
xor
push
inc
push
xchg
add
retn
inc
push
in
inc
add
and
xor
mov
movsb
retn
pop
push
nop
push
sahf
rcr
pop
adc
retf
jmp
adc
sbb
pop
jo
mov
add
add
pusha
mov
fcomp5
imul
retf
xchg
dec
jo
std
or
arpl
test
inc
mov
push
mov
and
sti
aad
rol
cdq
or
or
fbld
dec
pushf
pop
adc
cmp
jbe
mov
adc
pop
test
adc
mov
mov
inc
lahf
jmp
jge
lahf
setalc
mov
xchg
call
enter
out
add
out
sahf
idiv
rol
mov
lahf
icebp
neg
push
or
sar
xchg
enter
mov
fsubr
pop
and
insd
lahf
loopne
and
out
inc
dec
outsd
xor
dec
sbb
in
xchg
xlat
repne
lahf
mov
cmpsb
dec
retn
retf
mov
xlat
push
aaa
pop
setalc
inc
jo
adc
add
add
adc
or
dec
push
setalc
xchg
retn
mul
mov
dec
inc
fnstcw
mov
pop
pop
sbb
mov
cmp
push
out
stc
mov
rep
mov
mov
mov
mov
xor
retf
retn
sub
scasd
fdivr
fnstcw
jecxz
test
ja
add
add
mov
retf
in
aas
jnb
cmp
dec
xchg
insb
sub
pop
cmp
mov
stosd
add
dec
or
and
add
push
into
sub
mov
mov
fistp
in
hlt
das
outsb
cmp
or
call
int
mov
aam
call
jz
inc
js
aad
xor
dec
movsb
lock
mov
stc
out
xor
mov
mov
dec
sahf
retf
sub
call
add
xchg
lock
retn
or
mov
and
sub
add
aad
xchg
mov
daa
test
mov
xchg
nop
inc
sub
xor
xor
retf
dec
rol
retf
push
mov
fcom
inc
xor
iret
cld
retf
push
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
pop
or
add
retf
mov
retn
