push
mov
sub
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbb
push
sbb
jmp
retn
aas
retn
push
xor
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
retn
push
add
mov
sub
add
and
mov
sub
jmp
lea
sbb
mov
jmp
mov
mov
and
xor
or
add
xor
add
mov
add
mov
mov
mov
xor
mov
lea
and
mov
mov
mov
or
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
sub
mov
mov
and
xor
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
add
add
jmp
retn
mov
retn
pusha
sbb
adc
les
jle
or
jle
idiv
cmp
mul
retn
cmp
fadd
mov
retn
into
fadd
in
fstp1
xchg
fild
fsubr
int
into
shr
xlat
cmp
cmp
icebp
cmp
out
fdiv
aam
out
or
in
and
xor
mov
hlt
inc
loope
clc
loop
jmp
mov
ror
into
stc
das
setalc
repne
ror
clc
aad
out
idiv
add
loop
xchg
in
mov
aam
aad
sar
fcmovnbe
fcos
cli
loopne
sub
mov
sal
loopne
int
aam
setalc
jecxz
mov
std
xor
clc
retn
fcompp
clc
jmp
in
mov
setalc
iret
fldl2e
mov
adc
mov
add
mov
mov
mov
mov
adc
movzx
and
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
cmp
jmp
jnz
mov
mov
xor
add
cmp
jnz
mov
mov
jmp
retn
rcr
retf
mov
retn
xor
add
mov
mov
mov
jmp
leave
retn
xor
jmp
mov
sub
add
mov
mov
jmp
rcl
rcl
enter
push
retn
retf
mov
jmp
retf
movzx
add
mov
jmp
retn
mov
mov
xor
add
jmp
xor
xor
sub
mov
jmp
movzx
sub
cmp
mov
movzx
jg
xor
jmp
fcmovnb
stc
sub
sub
mov
jmp
xor
jmp
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
jmp
cmp
jz
jmp
ror
fxch4
aad
fld
sbb
or
jle
cmc
cmc
clc
test
retn
lock
clc
mov
mov
jmp
mov
mov
jmp
retn
fincstp
lea
add
mov
mov
mov
jmp
neg
mov
jmp
setalc
enter
retn
xor
shr
jle
out
mov
xor
jmp
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
jmp
ror
mov
mov
add
jmp
retn
fcmovne
retf
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
jmp
retn
aad
retn
mov
mov
mov
mov
push
call
mov
jmp
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
mov
mov
mov
movzx
xor
mov
jmp
sub
mov
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
mov
xor
xor
cmp
jz
mov
mov
sub
add
mov
and
mov
sub
and
xor
jmp
cmp
mov
jnz
mov
sub
jmp
retn
add
mov
jmp
mov
inc
xor
jmp
add
mov
jmp
retn
leave
retf
mov
jmp
cmp
xor
add
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
jmp
aas
mov
retf
pop
retn
push
mov
mov
xor
mov
jmp
div
mov
and
or
jmp
retn
retn
mov
pop
retn
push
mov
jmp
retf
aam
sub
sbb
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
sbb
jmp
retn
mov
adc
xor
mov
adc
add
jmp
movzx
mov
and
mov
lea
mov
jmp
cmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
mov
mov
xor
add
sub
mov
sbb
mov
not
mov
and
mov
mov
push
jmp
xor
dec
mov
mov
add
jmp
mov
mov
mov
mov
inc
jmp
retn
xlat
rcl
retf
cmp
mov
jb
dec
jmp
mov
sbb
mov
add
jmp
xor
add
mov
cmp
mov
jmp
aas
ror
rcl
retn
clc
jz
adc
jmp
push
and
xor
xor
inc
mov
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
mov
mov
jmp
retn
fcmovnu
xor
mov
add
movzx
mov
jmp
mov
movzx
xor
add
jmp
retn
mov
mov
jmp
ror
mov
jmp
retn
retf
xchg
inc
jmp
cmp
jnz
pop
jmp
pop
jmp
retn
mov
mov
jmp
xor
add
mov
mov
xor
add
jmp
mov
mov
jmp
retn
mov
mov
cmp
jmp
jz
mov
mov
mov
jmp
cmp
jmp
ror
enter
retf
add
jmp
jnz
mov
mov
movsx
xor
add
jmp
cmp
jz
mov
lea
jmp
mov
mov
add
jmp
mov
mov
xor
lea
jmp
enter
fsub
dec
pop
add
jle
adc
jle
xlat
retn
rol
xchg
jmp
rep
loop
xlat
std
clc
xor
cmp
cmp
xchg
hlt
xlat
rol
mov
leave
in
out
fld
leave
out
xor
aas
lock
loop
test
aad
add
in
int
xchg
rep
icebp
xlat
shl
hlt
out
cld
cmp
fmulp
into
clc
rcr
fimul
fiadd
xchg
rcr
out
sub
loope
fsubp
cld
stc
std
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
push
jmp
jg
xchg
ror
jle
xchg
loop
mov
mov
add
jmp
mov
and
xor
add
inc
mov
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
and
mov
jmp
icebp
mov
mov
adc
push
inc
mov
mov
jmp
mov
jmp
cmp
xor
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
xor
mov
add
add
imul
mov
cmp
jmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
mov
mov
jmp
xor
xor
add
add
imul
jmp
sar
retn
mov
cmp
jmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
push
push
mov
mov
mov
not
jmp
mov
mov
mov
cmp
mov
jmp
jnz
and
jmp
retf
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
jmp
aam
aas
retn
retf
mov
xor
mov
add
mov
movzx
jmp
idiv
not
and
jmp
aam
enter
aad
mov
and
aad
retn
jle
sbb
jle
retf
out
std
rol
jmp
fcomip
retf
mov
mov
jmp
xor
mov
jmp
push
call
test
jz
leave
retn
push
mov
sub
mov
mov
inc
mov
add
jmp
rcr
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
adc
lea
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
test
mov
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
xor
xor
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
or
mov
jmp
xor
mov
adc
xor
adc
xor
adc
add
add
div
mov
mov
cmp
jmp
retf
fnstenv
int
jz
mov
lea
jmp
mov
mov
mov
jmp
retf
retn
imul
mov
mov
cmp
jz
jmp
mov
or
mov
xor
add
jmp
mov
retf
retf
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
jmp
mov
jmp
mov
jmp
fadd
setalc
retf
setalc
fstp
aad
mov
cmp
xor
aas
cld
dec
jle
retn
clc
xchg
into
sti
xchg
xchg
rol
xor
lds
icebp
leave
jmp
xor
mov
add
cmp
jz
mov
xor
jmp
add
jmp
mov
leave
fld
jp
pop
shl
leave
add
jle
retn
rol
stc
cld
in
into
xor
stc
cld
aam
fucom
repne
mov
jmp
retf
leave
int
aam
aad
fnstcw
ficomp
dec
add
push
jle
retn
retn
retf
mov
jmp
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
jmp
mov
mov
jmp
xor
add
imul
sub
jmp
mov
jmp
mov
mov
jmp
xor
cmp
jmp
jz
mov
jmp
add
jmp
mov
jmp
retn
cmp
jz
jmp
mov
jmp
push
mov
jmp
sub
jmp
mov
push
dec
push
jmp
mov
retn
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
call
jmp
adc
jmp
xor
jmp
mov
adc
add
jmp
push
not
mov
xor
mov
adc
xor
mov
jmp
retf
mov
add
mov
jmp
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
not
jmp
rol
retf
mov
jmp
cmp
jmp
jnz
sbb
and
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jb
xor
jmp
retn
mov
or
sub
push
or
jmp
mov
sbb
add
push
call
inc
jmp
retn
cmp
jb
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
jmp
sar
retn
xor
add
mov
lea
mov
mov
xor
add
jmp
retn
fstp
retn
mov
lea
push
mov
xor
jmp
add
push
jmp
mov
retf
mov
push
push
call
jmp
jmp
cmp
jnz
jmp
mov
xor
add
jmp
mov
mov
jmp
rcl
retf
mov
mov
mov
mov
mov
push
jmp
pop
jmp
sub
add
mov
mov
xor
lea
jmp
rcl
cmp
jnz
mov
pop
jmp
ror
retn
xor
jmp
retn
fstp1
retn
pop
add
jmp
pop
leave
retn
push
mov
sub
xor
jmp
retf
push
or
mov
add
mov
mov
inc
jmp
sub
mov
mov
mov
mov
sub
xor
mov
add
jmp
mov
movzx
or
mov
xor
mov
movzx
or
mov
add
mov
mov
dec
xor
add
sub
mov
xor
add
adc
jmp
clc
mov
xor
or
sub
jmp
retf
fucomip
retf
mov
or
mov
movzx
xor
mov
mov
add
mov
mov
mov
mov
adc
mov
mov
sub
xor
mov
add
jmp
retf
aas
retn
add
mov
cmp
mov
jz
push
mov
jmp
mov
mov
and
sub
or
mov
xor
add
jmp
mov
fcmovnbe
lodsd
pop
mov
cmp
retn
cmp
jmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
xor
xor
xor
add
adc
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
or
retf
sub
cmp
mov
jmp
rcl
retn
ja
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
mov
or
xor
add
mov
jmp
mov
not
mov
xor
xor
add
add
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sub
add
add
imul
jmp
retn
aad
retn
mov
add
jmp
cld
mov
neg
jmp
sub
cmp
mov
ja
mov
mov
jmp
mov
adc
mov
mov
mov
jmp
xor
xor
xor
jmp
rcr
fcom
retn
pop
fdiv
inc
retn
add
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
mov
ja
mov
jmp
xor
jmp
retf
fstp
fstp1
popa
test
jmp
mov
mov
movzx
sub
mov
xor
xor
jmp
add
adc
add
jmp
aad
retn
imul
xor
xor
sub
mov
mov
jmp
mov
sub
cmp
jmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
xor
xor
add
jmp
add
jmp
enter
fstp
int
sal
scasb
imul
daa
adc
and
jg
fiadd
jle
retf
retf
test
iret
retf
xlat
idiv
cmp
cmp
in
stc
clc
loop
lock
mov
in
mov
sbb
mov
int
retf
imul
jmp
retf
mov
mov
sub
cmp
mov
jbe
jmp
retf
retn
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
retn
mov
jmp
xor
jmp
retf
add
jmp
jmp
retf
setalc
fstp1
fst
mov
aas
rcl
jg
fiadd
jle
retn
cmp
fld
int
rep
or
fisttp
rcl
div
hlt
in
setalc
xor
out
in
aaa
loopne
sti
fdiv
test
sti
test
iret
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
retn
cli
mov
mov
mov
jmp
retf
retn
mov
mov
jmp
leave
aas
retn
xor
jmp
retn
retf
retn
add
mov
jmp
mov
mov
mov
jmp
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
retf
add
jmp
mov
mov
mov
mov
xor
add
jmp
aam
retf
imul
mov
xor
sub
mov
mov
jmp
retn
retn
retn
retn
xor
jmp
add
imul
mov
xor
sub
jmp
retn
fmul
retn
lea
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
jmp
add
mov
lea
mov
mov
jmp
xor
jmp
retn
mov
jmp
sub
jmp
add
jmp
mov
mov
xor
add
jmp
retn
imul
jmp
rol
retf
retf
cmp
jbe
jmp
mov
retf
retf
pop
jmp
pop
leave
retn
push
mov
sub
add
push
and
push
add
push
push
add
push
call
mov
and
test
mov
jz
and
lea
push
and
push
xor
call
add
push
add
call
mov
test
jz
mov
mov
jmp
mov
mov
jmp
push
push
push
mov
call
mov
mov
mov
mov
cmp
mov
jnz
push
push
adc
push
push
or
call
inc
mov
cmp
jb
mov
inc
mov
cmp
jb
sbb
push
call
or
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
mov
mov
sub
sub
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
lea
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
inc
mov
xor
xor
mov
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jb
add
mov
mov
mov
cmp
mov
mov
mov
mov
jz
mov
xor
xor
sub
add
imul
mov
mov
mov
jmp
mov
adc
xor
and
add
or
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jb
mov
add
xor
add
add
movzx
and
mov
or
mov
xor
mov
adc
xor
xor
add
cmp
jnz
sub
push
or
push
and
push
call
xor
mov
not
mov
mov
neg
mov
mov
or
mov
mov
sub
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
or
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
movzx
xor
lea
mov
mov
neg
mov
add
mov
adc
mov
sbb
mov
or
mov
dec
mov
xor
or
add
mov
cmp
mov
jz
xor
mov
xor
add
sub
mov
sbb
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
mov
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jz
mov
jmp
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
mov
mov
mov
mov
xor
mov
mov
add
cmp
jz
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
push
lea
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
fmul
retn
retf
push
push
mov
mov
mov
push
jmp
mov
jmp
mov
push
not
jmp
retn
mov
mov
mov
jmp
cmp
mov
jmp
jz
mov
mov
inc
xor
add
mov
cmp
mov
jz
jmp
retf
rcr
fstp
fisttp
inc
mov
sbb
jle
add
mov
fsub
adc
fmul
retn
clc
fcmove
test
call
mov
xor
fcmovb
mov
sub
xor
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
add
add
or
push
xor
jmp
retf
push
push
mov
jmp
aad
int
retf
call
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
retf
mov
jmp
aaa
xor
add
cmp
jnz
jmp
mov
xor
jmp
retn
aam
add
mov
mov
jmp
retn
xor
add
mov
push
push
call
mov
jmp
retn
retf
xor
jmp
pop
add
jmp
pop
leave
retn
push
mov
push
mov
mov
mov
add
or
xor
mov
jmp
fxam
cmp
mov
jnz
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
retn
fcmovnu
fisttp
mov
adc
push
jle
add
aam
call
retf
mov
aas
clc
fptan
fstp
mov
xor
xor
push
or
mov
mov
add
mov
cmp
pop
mov
jz
mov
jmp
jmp
retf
xlat
retf
mov
jmp
retf
xor
add
jmp
mov
xor
add
leave
retn
push
mov
push
or
jmp
retn
retn
mov
mov
xor
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jmp
jz
or
mov
xor
jmp
xor
jmp
retf
lea
or
jmp
xor
cmp
jnz
jmp
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
xor
jmp
aad
retf
enter
fcmovnu
push
icebp
retn
add
mov
mov
xor
jmp
retf
xor
jmp
aas
retf
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
pop
test
jz
jmp
push
push
mov
push
mov
call
jmp
jmp
retf
rcr
retf
mov
leave
retn
push
mov
sub
dec
mov
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
sbb
jmp
push
sub
jmp
mov
xor
adc
mov
and
add
sbb
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
jmp
adc
mov
push
add
push
test
jz
mov
mov
xor
mov
sbb
jmp
mov
mov
sbb
imul
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sub
mov
add
add
sbb
jmp
mov
mov
sbb
jmp
rol
xlat
retf
mov
xchg
adc
sub
xor
sbb
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
movzx
add
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xor
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
call
cmp
jnz
mov
inc
mov
jmp
jmp
retf
add
movzx
mov
mov
mov
jz
mov
cmp
jz
cmp
jnz
push
push
call
xor
add
dec
mov
jmp
adc
mov
xor
dec
jmp
add
mov
cmp
mov
jnz
and
push
xor
call
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
jz
push
push
call
jmp
aam
fadd
fst
aam
add
jle
nop
adc
retf
cld
mov
retn
xlat
fst
cmp
in
aas
mov
out
in
or
sub
in
rcl
loopne
adc
test
clc
fucom
sti
inc
mov
mov
mov
xor
add
jmp
cmp
cmp
jz
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
mov
mov
jmp
add
jmp
lea
mov
push
push
push
call
jmp
retf
mov
jmp
mov
xor
jmp
retn
add
cmp
jmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
mov
mov
mov
mov
mov
jmp
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
jmp
rcr
pop
xchg
jmp
sub
xchg
dec
jmp
setalc
retf
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
retf
imul
mov
jmp
xor
mov
lea
jmp
cmp
jmp
retn
xlat
fmul
fmul
rcr
test
mov
add
add
std
rcr
xchg
mov
fimul
aad
xor
mov
icebp
fxch4
retf
jz
mov
jmp
mov
mov
mov
jmp
retf
mov
jmp
mov
xor
jmp
retn
xor
mov
add
jmp
div
mov
jmp
xor
jmp
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
retf
retn
rcl
fcmovbe
retf
mov
jmp
xor
add
jmp
retn
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
jmp
rcl
retn
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
jmp
xlat
aas
retf
pop
inc
xchg
sub
jmp
fdiv
xchg
dec
jmp
mov
imul
add
xchg
jmp
push
xor
mov
dec
inc
add
dec
jmp
retf
xor
add
pop
mov
pop
pop
pop
leave
retn
