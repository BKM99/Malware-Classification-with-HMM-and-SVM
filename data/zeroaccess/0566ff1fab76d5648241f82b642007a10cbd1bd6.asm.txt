push
mov
sub
xor
jmp
mov
xor
mov
mov
or
mov
mov
mov
mov
push
or
push
add
mov
and
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
jmp
mov
dec
add
xor
mov
adc
lea
or
mov
xor
mov
neg
mov
xor
jmp
retn
retn
leave
retf
retn
add
mov
sbb
mov
lea
jmp
xlat
retn
push
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
mov
sbb
mov
dec
xor
add
mov
movzx
and
mov
mov
mov
adc
mov
xor
mov
mov
movzx
jmp
retf
add
xor
add
and
mov
mov
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
jmp
rcl
retn
add
js
jle
js
movsd
mov
mov
dec
xchg
scasd
icebp
shr
cli
add
in
mul
xor
sub
bound
adc
pop
or
xor
and
rcl
bound
icebp
inc
xchg
adc
out
fsubr
dec
mov
mov
xchg
sti
dec
adc
nop
mov
jmp
xor
and
add
cmp
jnz
mov
mov
sbb
xor
add
jmp
cmp
jnz
mov
mov
xor
add
mov
jmp
aas
retf
retn
aas
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
lea
xor
sub
mov
movzx
cmp
mov
movzx
jg
xor
jmp
retn
fmul
sub
jmp
retn
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
jmp
mov
mov
jmp
cmpsb
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
jmp
add
xor
cmp
jz
jmp
mov
mov
xor
add
mov
jmp
jmp
retf
retf
js
jle
js
add
loop
test
or
push
mov
mov
movsb
mov
push
and
cmp
dec
add
repne
wait
xor
sal
push
cmp
ja
lodsd
jnz
or
push
cli
inc
cmp
outsb
push
sub
outsb
push
inc
rcl
aad
stosd
sar
ja
jnb
int
jp
pusha
mov
dec
cld
loope
jl
xor
mov
iret
mov
cwde
nop
jp
fstp
xchg
push
xor
pop
sahf
inc
fdivr
mov
mov
lahf
and
pop
icebp
stosd
and
out
add
pop
sub
or
mov
jecxz
imul
jmp
out
inc
or
xor
add
scasd
setalc
cwde
shr
retn
xchg
xor
jmp
mov
mov
mov
jmp
enter
fxch
mov
scasd
cmp
js
jle
js
jo
mov
jnb
repne
mov
lodsd
sub
inc
push
les
jo
movsb
and
push
insd
pop
imul
dec
mov
fld
mov
sbb
neg
fnsave
sub
sbb
int
push
lea
shr
inc
pop
stc
xor
adc
sti
cdq
jnz
push
inc
xor
jns
call
daa
xor
pop
fst
mov
sti
push
out
loop
mov
fadd
dec
cmp
cmp
mov
sub
imul
xchg
into
xchg
mov
in
in
mov
xchg
jp
mov
push
or
out
add
sub
js
sbb
int
and
push
jge
mov
mov
push
arpl
mov
ja
pop
xor
loope
dec
in
pop
cmp
leave
cli
or
aas
movsd
sti
mov
call
movsd
pop
ja
jge
lodsb
or
imul
insb
retf
shr
daa
mov
xor
add
mov
xor
jl
add
push
sbb
retf
sahf
jge
pop
or
sbb
call
adc
inc
add
xchg
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
push
mov
add
push
xor
mov
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
dec
mov
mov
not
jmp
rol
retf
leave
retf
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
call
jmp
xor
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
sub
mov
jmp
movsd
push
mov
add
cmp
jz
mov
mov
xor
jmp
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
mov
jmp
sbb
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
retf
retn
shr
push
js
jle
js
jmp
xchg
scasd
in
jns
jecxz
mov
mov
jno
loopne
push
dec
xchg
push
retn
adc
test
imul
pushf
add
stc
xor
dec
popf
inc
dec
sub
push
ja
mov
jno
and
inc
mov
mov
mov
mov
mov
and
retf
aaa
test
cmp
scasb
add
retf
stosd
add
cmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
mov
jmp
xor
jmp
mov
jmp
push
div
mov
jmp
mov
retn
and
or
mov
jmp
pop
retn
push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
mov
adc
xor
sub
mov
xor
jmp
add
sbb
movzx
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
mov
lea
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
jmp
mov
mov
or
mov
xor
sub
sbb
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
jmp
cmp
cmp
retn
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
jmp
ror
retf
cmp
jnz
pop
pop
mov
mov
jmp
retf
retn
xor
add
mov
mov
xor
add
mov
mov
jmp
retn
inc
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jz
mov
jmp
lea
mov
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
jmp
enter
retn
mov
pop
leave
retn
push
mov
push
xor
push
jmp
mov
mov
mov
add
push
mov
mov
add
mov
mov
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
add
inc
mov
jmp
mov
xor
mov
mov
or
add
add
xor
imul
mov
jmp
cmp
retf
cmp
mov
jnz
jmp
retf
mov
add
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
retf
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
jmp
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
xor
jmp
mov
sbb
mov
xor
and
mov
add
neg
mov
or
movzx
sbb
not
xor
and
jmp
retn
sti
and
mov
mov
jmp
xor
mov
push
call
test
jz
leave
retn
push
mov
sub
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
mov
sub
xor
mov
mov
xor
or
sub
imul
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
retn
lea
and
mov
sub
mov
or
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
lea
mov
mov
sub
and
mov
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
mov
jmp
mov
mov
mov
mov
xor
mov
jmp
stosd
mov
xor
xor
add
add
div
mov
mov
cmp
jz
mov
lea
mov
mov
jmp
mov
imul
mov
mov
jmp
cmp
jmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
jmp
leave
xlat
retn
cmp
jz
mov
and
jmp
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
jmp
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
jmp
mov
mov
mov
jmp
popa
cmpsb
xor
add
movzx
mov
xor
lea
add
jmp
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
jmp
cmp
jmp
jz
mov
jmp
push
mov
sub
sbb
mov
xor
jmp
inc
push
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
call
jmp
mov
movzx
xor
mov
xor
or
mov
adc
add
sub
push
mov
adc
mov
neg
xor
jmp
retf
mov
mov
and
add
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
leave
retn
cmp
mov
jnz
and
jmp
and
mov
sbb
mov
mov
xor
sub
or
push
adc
mov
jmp
enter
setalc
retn
add
add
push
adc
call
mov
inc
cmp
mov
jb
mov
jmp
cmp
jnz
sbb
mov
mov
mov
mov
mov
movzx
and
mov
adc
xor
jmp
add
mov
not
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
xor
add
push
jmp
mov
retf
mov
push
push
call
jmp
cmp
jnz
mov
jmp
sar
ror
leave
mov
cwde
add
js
mov
imul
push
jge
popa
and
push
rcr
inc
stc
fisub
cmpsb
stosd
xor
inc
dec
aaa
add
jo
pop
retn
xchg
cmp
fcmovne
and
pop
pop
jmp
in
insb
mov
xchg
dec
cmpsd
cli
jmp
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
sub
push
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
jmp
mov
or
mov
mov
xor
add
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
add
mov
xor
jmp
retf
ror
leave
retf
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
and
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
and
xor
jmp
retf
retn
add
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
mov
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
mov
sub
mov
and
mov
or
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
call
xor
or
dec
mov
jmp
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
call
jmp
dec
mov
mov
jmp
retn
add
cmp
mov
jmp
retn
retn
fstp1
retf
retn
jz
push
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
rol
leave
retf
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
pop
retn
cmpsd
add
jmp
retn
imul
mov
mov
jmp
cmp
retn
sub
cmp
jmp
fcmovnu
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
retf
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
add
jmp
add
imul
jmp
aas
xlat
xlat
retf
xlat
retf
mov
mov
sub
cmp
ja
jmp
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
sub
cmp
mov
jbe
jmp
mov
mov
xor
xor
jmp
dec
add
add
imul
mov
mov
mov
mov
add
mov
jmp
retn
mov
jmp
xchg
mov
mov
jmp
mov
xor
add
jmp
mov
xor
add
jmp
scasd
xchg
mov
mov
jmp
cmpsd
mov
mov
xor
add
mov
mov
mov
mov
jmp
mov
xor
add
mov
mov
mov
mov
xor
jmp
retn
retn
add
mov
mov
jmp
mov
mov
xor
xor
add
add
jmp
retn
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
retf
sub
mov
mov
xor
add
jmp
imul
mov
jmp
xor
jmp
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
lodsd
push
dec
imul
mov
jmp
retf
retn
fcmovnu
retn
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
and
xor
add
imul
cmp
jmp
retf
jbe
pop
pop
leave
retn
push
mov
sub
movzx
xor
push
and
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbb
call
mov
inc
mov
cmp
jb
mov
inc
mov
lea
inc
mov
and
lea
xor
mov
or
mov
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
and
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzx
cmp
mov
mov
mov
mov
jz
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
mov
xor
xor
add
add
imul
mov
mov
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
xor
mov
xor
add
and
mov
neg
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
not
add
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
add
mov
mov
xor
xor
add
mov
cmp
mov
jnz
mov
push
sub
push
push
sub
call
mov
mov
mov
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
or
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
adc
mov
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
and
mov
add
xor
xor
xor
add
mov
xor
or
xor
add
lea
mov
mov
mov
cmp
ja
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sbb
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
push
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
jmp
retf
xlat
fcmovnbe
retf
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
mov
mov
xor
sub
add
cmp
jz
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
push
push
mov
add
jmp
retn
leave
leave
leave
retf
call
mov
mov
jmp
retn
mov
mov
jmp
jmp
mov
jmp
retn
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
jmp
stosb
pop
add
mov
jmp
retn
das
push
push
call
mov
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
dec
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
mov
mov
add
xor
cmp
jnz
mov
mov
jmp
add
jmp
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
jmp
inc
xor
add
leave
retn
push
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
adc
mov
inc
mov
and
xor
or
add
mov
mov
not
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
jmp
retn
retn
leave
retf
mov
xor
xor
lea
xor
jmp
cmp
jnz
jmp
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
jmp
xchg
push
mov
jmp
retf
retn
retn
retf
setalc
xor
stosd
push
icebp
and
jmp
retn
imul
or
mov
mov
pop
in
mov
rcl
stosb
jg
pop
outsd
mov
push
jmp
retf
xor
mov
mov
mov
cmp
in
nop
jb
mov
stosd
push
icebp
push
mov
leave
dec
add
outsd
jnp
inc
rep
rcr
aaa
ja
sar
xchg
inc
adc
test
mov
movsb
js
pop
neg
pop
push
mov
jmp
retf
call
jmp
mov
leave
retn
push
mov
sub
jmp
rcl
retn
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
adc
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
mov
and
push
add
mov
and
xor
movzx
adc
mov
adc
add
inc
mov
mov
push
mov
push
test
mov
jz
jmp
retf
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
not
xchg
add
jmp
sub
adc
xor
xor
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adc
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
add
mov
mov
jmp
mov
jz
inc
mov
xor
sbb
add
mov
cmp
mov
jmp
jnz
add
push
or
call
and
mov
jmp
mov
mov
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
mov
mov
xor
add
cmp
mov
jz
push
sub
push
call
jmp
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
jmp
retf
cmp
rcr
leave
mov
and
retn
lodsb
cwde
add
jmp
mov
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
jmp
pop
push
dec
pop
jmp
xchg
sub
jmp
retn
xchg
jmp
dec
mov
jmp
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
pop
xor
add
jmp
imul
mov
jmp
xor
jmp
mov
jmp
lea
cmp
jnz
mov
jmp
mov
mov
jmp
dec
and
xor
add
jmp
test
mov
jmp
retn
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
push
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
retn
leave
aad
and
pop
aas
mov
idiv
adc
js
add
mov
jp
jo
movsd
jo
cwde
pop
fst
sub
stc
mov
sbb
xor
and
and
mov
pop
jmp
pop
leave
retn
retf
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
cld
mov
push
push
retf
push
push
inc
push
retn
