jmp
push
dec
sub
inc
dec
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
inc
dec
push
or
add
push
dec
jmp
push
inc
jmp
push
inc
jmp
push
inc
jmp
push
inc
jmp
jmp
inc
imul
jmp
push
inc
jmp
push
imul
cmp
dec
cmp
jmp
cmp
cmp
das
cmp
das
das
push
jmp
jmp
das
cmp
das
das
push
jmp
xor
das
push
jmp
xor
cmp
das
das
push
jmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
cmp
cmp
cmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
jmp
jmp
cmp
jmp
jmp
cmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
jmp
jmp
cmp
jmp
cmp
jmp
cmp
cmp
sub
jmp
cmp
cmp
jmp
jmp
cmp
cmp
jmp
jmp
xor
jmp
xor
xor
sub
jmp
jmp
xor
sub
jmp
jmp
sub
cmp
cmp
sub
jmp
jmp
aaa
jmp
cmp
cmp
sub
push
jmp
push
jmp
sub
sub
sub
sub
sub
sub
sub
sub
push
jmp
sub
xor
sub
jmp
jmp
sub
jmp
sub
xor
xor
xor
sub
sub
push
sub
sub
xor
xor
sub
sub
push
sub
sub
xor
xor
sub
sub
push
sub
sub
xor
xor
sub
sub
push
sub
sub
xor
xor
sub
sub
push
sub
sub
xor
xor
sub
sub
push
sub
sub
cmp
cmp
cmp
sub
jmp
jmp
pop
jmp
imul
jge
mov
imul
jmp
dec
imul
imul
jge
mov
imul
jmp
dec
imul
imul
jge
mov
imul
jmp
dec
imul
imul
jge
mov
imul
jmp
mov
mov
mov
imul
jmp
mov
mov
mov
imul
jmp
mov
mov
mov
imul
jmp
cmp
inc
cmp
xor
xor
cmp
call
inc
push
call
push
dec
push
pop
jmp
aaa
jmp
cmp
jmp
dec
pop
jmp
jmp
jmp
jmp
inc
push
xchg
dec
jg
dec
cmp
aas
xor
cmp
aaa
jmp
jmp
js
imul
jnb
call
cmp
push
xor
aaa
pop
outsd
aaa
aaa
jmp
js
test
pop
push
imul
dec
jmp
outsd
aaa
aaa
jmp
jmp
jnz
test
test
test
jmp
dec
push
push
cmp
aas
cmp
cmp
cmp
jmp
jmp
sub
jmp
aaa
aaa
jmp
test
jmp
push
dec
jmp
mov
mov
call
pop
jmp
jmp
aaa
aaa
jmp
push
pop
aaa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
aaa
jmp
jmp
aaa
aaa
jmp
mov
stc
jmp
mov
jmp
pop
outsd
aaa
pop
outsd
aaa
aaa
jmp
cmp
jmp
outsd
push
jmp
jmp
xor
jmp
aaa
jmp
jmp
aaa
aaa
jmp
aaa
aaa
jmp
jmp
jmp
dec
push
push
cmp
aas
cmp
cmp
cmp
jmp
jmp
aaa
jmp
dec
xor
jmp
jmp
jmp
jmp
jmp
push
xor
pop
aaa
jmp
aaa
jmp
aaa
jmp
jmp
jmp
jmp
sub
push
jmp
aaa
jmp
pop
std
jmp
jmp
aaa
jmp
aaa
jmp
cmp
sub
arpl
jmp
jmp
xor
cmp
imul
sub
jmp
jmp
cmp
aas
xor
cmp
aaa
jmp
jmp
aaa
jmp
aaa
jmp
aaa
jmp
jmp
jmp
jmp
jmp
cmp
cmp
jmp
aaa
jmp
inc
aaa
jmp
jmp
aaa
jmp
aaa
jmp
jmp
jmp
jmp
jmp
sub
push
jmp
aaa
jmp
sbb
jmp
aaa
jmp
aaa
jmp
inc
cmp
jl
sub
pop
jmp
jmp
jmp
add
add
push
cmp
jmp
jmp
aaa
jmp
jmp
aaa
jmp
aaa
jmp
push
jmp
jmp
jmp
imul
jmp
aaa
jmp
jmp
jmp
push
xchg
dec
jg
dec
cmp
aas
xor
cmp
aaa
jmp
jmp
aaa
pop
outsd
aaa
aaa
jmp
jmp
jmp
inc
dec
sub
sub
jmp
sub
push
jmp
dec
push
push
cmp
aas
cmp
cmp
cmp
jmp
xor
sbb
and
jmp
sub
push
daa
adc
adc
jmp
jmp
dec
pusha
jmp
jmp
aaa
aaa
jmp
outsd
push
outsd
outsd
pop
aaa
pop
outsd
pop
pop
call
aaa
pop
outsd
aaa
aaa
jmp
push
jmp
aaa
jmp
add
push
inc
add
call
inc
push
xchg
dec
jg
dec
cmp
aas
xor
cmp
aaa
jmp
jmp
test
jmp
aaa
jmp
aaa
aaa
jmp
jmp
jmp
jmp
aaa
jmp
jmp
xor
push
jmp
aaa
aaa
jmp
test
test
xor
jmp
aaa
aaa
jmp
inc
push
xchg
dec
jg
dec
cmp
aas
xor
cmp
aaa
jmp
jmp
test
jmp
jmp
jmp
push
push
cmp
aas
cmp
cmp
cmp
jmp
jmp
jmp
dec
push
aaa
jmp
jmp
pop
call
aaa
pop
jo
aaa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
xor
jmp
jmp
jmp
aas
xor
cmp
aaa
jmp
jmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
jmp
jmp
jmp
push
jmp
xor
cmp
cmp
cmp
jmp
mov
xor
push
jmp
jmp
jmp
jmp
jmp
xor
jmp
jmp
inc
jmp
cld
jmp
cmp
jmp
jmp
jmp
aas
xor
cmp
aaa
jmp
jmp
xor
xchg
mov
jmp
imul
jmp
jmp
jmp
and
adc
jmp
push
jmp
xor
jmp
jmp
jmp
jmp
jz
pop
push
push
push
jmp
jmp
jmp
test
xor
cmp
imul
sub
jmp
jmp
jmp
jmp
jmp
inc
js
test
js
test
test
test
jmp
jmp
js
test
jmp
lock
jmp
sub
push
jmp
jmp
jmp
jmp
js
test
push
pop
cmp
xor
dec
jmp
cmp
jmp
jmp
imul
jmp
jmp
cmp
xor
cmp
aaa
jmp
jmp
jmp
jmp
sbb
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
cmp
cmp
jmp
jmp
jmp
jmp
jmp
das
das
cmp
das
das
jmp
jmp
push
dec
dec
pop
inc
pop
call
pop
jmp
cmp
cmp
cmp
cmp
inc
cmp
jmp
test
push
jmp
aaa
sub
jmp
jmp
push
jmp
jmp
sub
cmp
aaa
sub
jmp
jmp
imul
push
js
cmp
jmp
xor
add
cmp
sub
inc
push
mov
jmp
cmp
push
sub
pop
jmp
push
jmp
inc
add
xor
dec
cmp
sub
xor
push
jmp
jmp
imul
sub
inc
dec
jmp
jmp
aaa
jmp
xor
cmp
jmp
jmp
jmp
imul
pop
ja
push
pop
call
xor
jmp
jmp
test
xor
dec
imul
sub
imul
pop
jmp
sub
sub
inc
dec
jmp
jmp
jmp
jmp
cmp
jmp
jmp
jmp
cwde
push
stc
cmp
aas
aaa
xor
jmp
jmp
pop
jmp
jmp
jmp
aas
inc
sub
jmp
jmp
push
pop
call
pop
push
push
push
pop
call
jmp
cmp
das
das
push
jmp
jmp
jmp
push
push
jmp
jo
jl
cmp
pop
inc
xor
jmp
inc
js
test
outsd
jns
call
xlat
retf
inc
jmp
js
test
test
test
test
jmp
popa
jl
push
inc
push
pop
push
dec
xor
xor
jmp
jmp
test
js
js
test
js
test
test
pusha
jo
jo
sub
dec
pop
push
dec
xor
jz
pop
test
test
test
jz
call
pop
mov
popf
xchg
dec
jmp
pop
popa
dec
dec
dec
mov
push
jmp
push
pop
call
jno
jno
jno
push
pop
jno
pop
pop
jmp
jmp
pop
mov
mov
push
push
jno
inc
pop
jmp
jnb
dec
cmp
dec
xor
xor
jmp
jmp
cmp
cmp
cmp
cmp
jmp
jmp
cmp
cmp
cmp
cmp
jmp
jmp
jmp
cmp
cmp
cmp
jmp
jmp
sub
push
retf
mov
xor
jmp
andps
or
inc
push
fld
retn
cmp
jmp
inc
cmp
call
inc
xchg
mov
sub
xchg
push
jmp
inc
retf
push
fist
add
movsb
mov
xor
mov
cmpsd
clc
jmp
xor
cmpsb
scasb
inc
sahf
bound
inc
daa
retn
retn
or
push
mov
lds
mov
retn
mov
mov
xchg
sbb
cmp
sub
xchg
push
test
retf
jmp
jp
retf
iret
fdiv
xor
ror
imul
jmp
and
and
insd
adc
push
push
aad
inc
add
dec
shr
aam
mov
mov
cmc
jle
das
pusha
leave
loopne
sbb
cmpsd
into
sti
repne
rep
mov
outsd
loope
repne
pop
cmc
push
mov
cli
loopne
pop
out
shrd
sub
cld
setalc
mov
fimul
in
movsd
jecxz
xchg
in
pushf
test
mov
dec
sbb
mov
stosb
push
mov
outsd
sbb
add
in
mov
adc
or
dec
xchg
pushf
lea
test
or
aaa
leave
push
arpl
ja
hlt
add
jmp
cmpsd
popf
sbb
insd
rcl
dec
loop
icebp
xchg
push
xchg
pusha
stosd
xchg
fiadd
dec
rol
insb
pusha
inc
stosb
mov
jnp
push
sub
xchg
mov
ja
aaa
call
mov
stosb
leave
movsd
test
ja
iret
call
movsd
jo
or
daa
xchg
and
retf
inc
sbb
xchg
xchg
xor
pop
mov
cmc
dec
setalc
and
insd
jnz
mov
lock
sahf
test
dec
sti
sbb
add
sub
xchg
xor
sbb
fstp
test
sub
mov
div
jl
cmp
mov
retf
test
xchg
push
jnb
inc
sbb
stosb
mov
sti
push
imul
push
or
jge
sub
push
sub
insd
sub
mov
cmpsb
push
add
stc
in
and
or
cmc
enter
out
pushf
cmp
inc
xor
cmpsb
pop
lodsb
jbe
rcl
xor
xor
movsb
dec
mov
aaa
out
wait
dec
xchg
push
rcr
dec
mov
and
scasd
aad
aam
xor
test
sti
inc
adc
and
daa
fist
loopne
cmp
xor
dec
dec
rcl
sbb
mov
mov
jle
mov
not
cmc
retf
leave
inc
push
loope
test
ja
insb
movsx
sub
retf
sub
dec
cmp
dec
or
sbb
xchg
retn
pop
fsubr
retf
or
leave
jmp
retn
add
push
jecxz
enter
lodsb
sbb
mov
mov
daa
dec
mov
retf
popf
shr
clc
cmp
sub
mov
sar
sal
pusha
inc
jmp
xchg
xor
mov
retf
mov
retf
cli
xchg
jmp
xor
lds
dec
dec
aam
sub
retf
fcomip
retn
retf
mov
nop
mov
retn
mov
ror
pop
lea
setalc
retn
test
retf
adc
pop
and
sti
retn
adc
retf
cmp
retn
xchg
sub
jmp
retn
sbb
inc
retn
retn
xchg
dec
rcr
shr
and
retn
pushf
or
push
retn
or
stosb
retn
retn
retn
pop
sub
retn
push
retf
pop
inc
sbb
ror
retn
stosb
lea
cmc
mov
retf
test
aas
push
jnp
xor
sub
movsb
jns
sub
lahf
xor
or
dec
xchg
sahf
dec
dec
push
add
scasd
mov
jmp
sbb
push
lahf
outsd
sbb
shl
sub
jmp
std
mov
sub
pandn
mov
mov
cmp
xor
xchg
aam
mov
sbb
jle
nop
xchg
rep
fst
or
cdq
jle
test
mov
in
int
dec
xlat
mov
test
lodsb
sbb
movsd
cmc
and
jmp
sahf
push
sbb
push
jecxz
jmp
rcr
pop
mov
rcl
add
dec
out
stosd
xchg
pusha
mov
xor
mov
aad
mov
dec
test
loopne
sti
int
inc
shl
in
push
xor
clc
insd
cmp
push
dec
fist
sahf
sbb
xor
inc
sub
jecxz
insd
into
xchg
jbe
insb
hlt
jecxz
shl
dec
jmp
pop
icebp
sbb
sar
mov
stosb
inc
cwde
xor
jb
mov
cmp
add
mov
mov
fxch4
lodsd
pushf
sbb
and
sbb
pop
jmp
mov
imul
pop
retf
jmp
fmul
retf
and
jmp
pop
test
jecxz
dec
push
cwde
jmp
inc
pop
xchg
cmp
loopne
lock
or
mov
retn
push
adc
in
mov
in
xchg
nop
dec
xchg
xor
sar
and
fld
setalc
movsd
sti
sbb
push
sahf
pusha
enter
pop
cmpsb
test
int
cmpsb
xchg
pusha
retf
mov
scasb
mov
push
clc
push
pop
and
push
push
std
retn
sbb
cdq
pop
scasb
inc
or
retn
xchg
retf
mov
jmp
add
clc
dec
push
xlat
stc
pop
inc
test
cmp
jns
in
repne
jmp
dec
rep
mov
sbb
xchg
sal
add
rcl
or
jnp
and
stosd
stosd
movsb
ja
cmp
inc
loope
xchg
pop
mov
xor
shl
and
sar
pop
bound
mov
jge
jge
mov
dec
add
cmp
and
int
mov
jmp
test
add
inc
mov
dec
xchg
and
jno
sub
sbb
inc
mov
push
icebp
or
pop
test
dec
aad
loope
and
push
sar
retf
scasd
leave
mov
or
mov
jmp
jmp
dec
mov
pop
call
cld
pop
lds
mov
sbb
imul
scasd
out
movsd
xchg
retf
add
push
rcr
inc
call
aas
retf
cld
rep
sub
retf
jmp
mov
jge
push
retn
xchg
aam
xor
aaa
inc
movsb
test
rep
mov
cmp
add
and
cwde
out
xor
jmp
push
add
mov
mov
mov
cmc
dec
mov
cmps
push
push
sub
mov
mov
inc
pop
cld
retf
jmp
popf
cmpsd
les
push
and
inc
shr
push
pop
mov
mov
call
xchg
cmp
push
js
push
sbb
loop
aas
add
retn
daa
imul
mov
repne
rcr
push
add
jmp
sub
sub
inc
sbb
jo
xchg
or
jle
pop
retf
lahf
push
test
setalc
out
jp
mov
mov
leave
and
push
stosb
mov
popf
xchg
insb
cdq
pop
sbb
hlt
retf
retn
das
retf
push
inc
pushf
xor
xor
mov
push
and
fistp
retf
inc
xchg
add
push
aaa
int
aad
mov
mov
adc
or
retf
jmp
retn
jb
wait
lea
pusha
pop
jmp
inc
outsb
popf
lahf
mov
les
pusha
pushf
jle
popf
xchg
and
jmp
xor
pop
and
dec
jmp
push
and
inc
test
and
pop
les
and
cmp
iret
adc
loopne
retn
xchg
insd
sbb
neg
pop
pop
jb
xchg
cwde
xor
dec
jnb
pop
sub
popf
xor
shr
push
inc
or
push
insd
dec
idiv
repne
outsb
setalc
mov
sub
mov
mov
mov
dec
cmp
or
loopne
stosd
mov
in
stosb
jmp
xor
retf
mov
or
jg
push
mov
movsx
pop
push
inc
jb
aad
retf
sbb
mov
pop
dec
push
push
xor
jmp
retn
retf
adc
loop
lea
xchg
mov
dec
cmp
jnz
inc
lahf
test
iret
mov
cmp
mov
mov
retf
mov
cmp
retn
and
sub
mov
jz
retn
add
jnb
cmp
cld
or
mov
enter
sbb
shr
adc
xchg
js
or
dec
fsub
daa
adc
rcr
inc
sbb
jmp
or
leave
mov
dec
insd
xor
push
jz
bound
outsd
adc
and
in
scasb
xchg
lahf
adc
jmp
retn
retn
retn
retn
retf
retn
scasd
imul
rcr
popf
sbb
mov
mov
dec
xchg
retn
jbe
retn
popf
lahf
push
cli
jmp
mov
mov
mov
and
add
lahf
retn
xchg
and
adc
enter
cmc
jg
out
setalc
mov
lahf
and
les
push
test
mov
mov
ficomp
xor
retf
sub
aaa
dec
sbb
dec
ror
xchg
xor
add
mov
div
rcr
retf
push
or
cmpsb
mov
movsb
retf
retn
sbb
push
retn
sti
dec
jmp
adc
xchg
push
aam
fdivr
mov
stc
cmp
pop
jmp
retf
dec
retn
jmp
mov
jmp
rcl
fistp
sub
add
jecxz
xor
pop
mov
dec
and
scasd
pop
adc
scasd
inc
fadd
movsb
xor
mov
sub
jp
daa
retf
sbb
dec
jnz
add
xchg
xor
sbb
push
pop
or
js
xor
insd
push
xor
mov
aam
and
int
jo
inc
js
popf
adc
or
arpl
dec
shr
jnb
mov
lds
stc
int
sub
enter
retn
and
sbb
pushf
inc
mov
mov
or
mov
in
das
adc
pop
sub
cmc
pusha
imul
in
sub
sbb
setalc
cwde
sub
setalc
add
xchg
dec
leave
pop
push
add
xchg
cmpsd
pop
icebp
movsd
cwde
test
cdq
sbb
xchg
jnp
dec
cld
jbe
scasb
pop
test
in
rcr
jz
or
adc
and
cli
mov
popa
imul
mov
call
insb
dec
mov
dec
movsd
push
in
test
mov
cdq
cmp
mov
or
insd
or
movsd
mov
push
fist
or
pop
pop
retf
xor
add
sbb
jle
push
aaa
scasd
cmp
jg
mov
loop
mov
xchg
xor
dec
cmp
jmp
mov
jmp
mov
jmp
sbb
rcr
xor
mov
sub
rcr
retf
push
inc
test
retf
jmp
test
jmp
fist
test
jmp
cmp
xchg
js
push
add
inc
pop
pop
dec
xchg
ja
lahf
scasb
add
test
test
imul
das
mov
icebp
test
scasd
adc
retn
retf
sbb
pop
push
aad
retn
cmc
jno
dec
sub
dec
stosd
retn
mov
icebp
mov
adc
and
popa
les
adc
retf
test
mov
retf
inc
pop
rol
retf
cwde
retf
fild
jle
push
mov
retn
mov
sahf
mov
sahf
inc
std
retf
inc
push
mov
and
movsd
ja
mov
add
lahf
cmpsd
mov
push
push
pushf
push
and
jnb
xchg
mov
int
xchg
and
jl
imul
das
pop
retf
retn
mov
jmp
and
sub
retf
retf
pop
jnp
sub
ja
call
sub
pop
cmp
mov
rcr
or
pop
loope
push
pop
xchg
int
mov
ja
xlat
scasd
jecxz
and
jmp
push
movsb
sal
pushf
or
jns
sbb
mov
push
repne
push
jmp
into
xchg
aas
mov
xchg
clc
and
add
sbb
call
insd
std
jl
bound
adc
daa
xchg
sbb
cdq
ficomp
jb
jns
add
push
inc
mov
inc
pop
scasd
add
or
jno
wait
jl
xchg
mov
stosb
outsb
pop
mov
mov
sub
xchg
das
sbb
inc
sti
dec
test
add
cmp
pop
stc
mov
retn
mov
pop
movsd
lodsb
sub
jmp
test
rcl
nop
jmp
or
pop
out
add
sub
mov
test
aam
jb
icebp
push
pop
lahf
xor
mov
xchg
sal
mov
aam
or
pop
leave
and
sub
aaa
or
retn
dec
cmpsd
aam
popf
fsubr
pop
jmp
dec
cmp
xor
imul
xlat
cdq
xor
mov
not
cli
push
push
stosb
dec
mov
push
sbb
cmc
sbb
sbb
jbe
and
sbb
and
retf
xlat
inc
call
xor
das
int
cdq
das
shr
pop
jns
dec
ja
mov
sub
jnp
out
push
and
cmp
pop
push
retf
xlat
jge
aam
rcr
mov
cmp
xlat
xor
add
lahf
xor
movsb
cmpsb
mov
mov
jb
retn
inc
in
jz
cmp
fld
aas
and
mov
jnz
lock
stosd
push
xchg
adc
fsub
scasd
mov
sbb
ja
retf
add
adc
pop
pushf
jnz
jnp
cmp
dec
push
xor
push
inc
out
push
add
loop
mov
scasd
loop
scasd
pop
xchg
cld
add
mov
xor
popa
shl
cwde
mov
loopne
movsd
arpl
repne
call
mov
jnb
add
xchg
jbe
and
inc
xchg
dec
sbb
mov
rol
test
inc
push
das
adc
cmc
mov
add
cmp
dec
rol
fstp
out
dec
into
mov
mov
jno
bound
outsb
pop
and
push
dec
jmp
setalc
retn
retn
or
jns
jbe
imul
pop
imul
dec
or
or
xchg
adc
fisttp
dec
adc
mov
cli
or
lea
cmc
mov
lahf
mov
sahf
pop
pushf
imul
cmp
stosb
sbb
pop
jns
add
push
jo
retn
pop
sub
cli
sti
aam
push
push
std
or
jnz
insd
push
jg
jmp
inc
or
dec
xor
and
pop
fist
lds
mov
add
or
push
pop
clc
mov
mov
or
push
enter
push
xor
sub
mov
loope
and
inc
mov
xchg
mov
inc
in
sbb
div
adc
sub
loopne
retf
cld
dec
push
aam
xchg
retn
retf
in
push
add
into
mov
inc
mul
adc
push
retn
push
sti
retn
retf
xchg
retn
scasd
test
jmp
jl
jnz
cli
mov
stc
xchg
stc
or
aaa
cwde
add
shl
scasd
retn
cli
cmp
and
imul
test
xchg
push
xor
adc
inc
cld
mov
push
add
inc
and
dec
push
jmp
sub
fldenv
jbe
mov
mov
jecxz
test
jb
xor
and
jnz
call
adc
fxch7
and
adc
les
dec
and
retn
jp
lodsb
pushf
lds
bound
fimul
test
dec
wait
sti
mov
push
js
retn
or
setalc
pop
pop
dec
fistp
nop
cwde
inc
or
dec
lahf
mov
mov
retn
das
mov
mov
adc
shr
dec
or
cmc
retn
jl
dec
mov
and
stc
stos
inc
lahf
mov
imul
and
hlt
popf
nop
out
test
mov
push
icebp
das
sbb
lodsd
mov
push
mov
pop
lodsb
mov
mov
das
add
scasd
retf
daa
and
inc
add
cmp
mov
fst
retn
retf
jl
lodsd
retn
xchg
test
aam
mov
mov
test
pop
jmp
push
push
retn
push
test
jg
dec
sahf
sbb
jp
xchg
sbb
into
and
push
ja
outsb
popa
fisttp
mov
push
jmp
into
int
add
jnb
stosb
lodsb
icebp
test
push
mov
or
jl
and
repne
mov
mov
shr
sal
daa
jbe
fcom
mov
lock
push
cdq
scasb
pop
inc
imul
xor
mov
jecxz
xor
mov
cli
insb
jns
icebp
ja
popf
xlat
push
dec
rep
stc
movsd
xchg
pop
xchg
mov
mov
retn
retf
jnb
mov
pushf
mov
hlt
retn
cmp
push
retf
pop
sahf
shr
aas
push
popa
cmp
retf
jo
pop
retn
jns
rcr
retn
xchg
retf
mov
push
jmp
pop
xor
jbe
jmp
clc
jmp
mov
arpl
xchg
adc
pop
sahf
and
cwde
inc
in
int
cli
push
pop
mov
lock
mov
pop
bound
adc
dec
inc
mov
adc
cmp
or
xchg
call
mov
imul
retn
sub
pop
push
call
cli
pop
jnz
lahf
push
cmp
jmp
std
daa
sbb
xchg
sub
setalc
aaa
inc
and
cdq
and
pop
jnz
mov
test
jl
jp
setalc
xchg
jbe
push
and
push
jnb
sbb
xchg
jbe
pusha
nop
mov
fsubr
sbb
out
jnb
xchg
xchg
mov
push
repne
test
inc
dec
xor
add
cmp
and
ror
push
lea
sal
in
adc
jecxz
rcl
mov
sbb
stosb
xchg
xchg
fsub
mov
adc
dec
pop
mov
jnb
sal
aad
inc
jbe
into
pusha
call
fild
pop
xchg
pusha
jecxz
loop
test
inc
out
hlt
xchg
add
mov
add
insd
add
pop
rcl
xor
pop
xchg
mov
out
jg
pop
jnz
mov
stosb
mov
jmp
dec
lds
dec
push
retn
adc
pop
lodsd
mov
mov
cld
xchg
fsub
inc
inc
sbb
jle
pop
wait
jge
adc
das
stosb
ror
aad
push
jp
retn
inc
sahf
retn
mov
xchg
mov
inc
mov
jmp
retn
push
inc
mov
jno
and
sub
retn
icebp
and
jl
in
imul
fcmovnu
add
mov
add
push
adc
pop
call
fmulp
sbb
inc
mov
pop
dec
imul
inc
or
dec
repne
in
jecxz
mov
jl
stosb
push
xchg
jno
pop
mov
adc
sbb
adc
sub
mov
or
or
in
out
inc
inc
rol
push
push
retf
xchg
cmp
xchg
retf
cmp
retn
jmp
inc
adc
jmp
mov
dec
scasb
retf
lds
mov
pop
sub
mov
aad
mov
pusha
mov
mov
test
int
stosb
sbb
inc
jecxz
pusha
adc
jnz
wait
in
pusha
loope
jge
out
fnstcw
add
sbb
setalc
mov
or
or
mov
fnsave
test
push
das
popf
or
inc
pop
xchg
mov
cli
push
aas
cmpsb
push
sub
std
test
push
cmp
outsb
rcl
movsd
sub
pop
fistp
cld
push
pop
hlt
inc
test
movsb
wait
add
stc
pushf
enter
and
retf
adc
mov
add
aas
cmp
retf
mov
push
xor
inc
add
or
xchg
pop
sahf
mov
cmp
retf
sbb
xor
retf
inc
test
retf
sub
and
dec
cmp
stosb
add
cmp
retf
push
scasd
int
push
retn
fnstsw
cmp
mov
sub
cmp
cmp
xor
retf
retf
inc
sub
sub
push
inc
inc
mov
jp
lahf
retf
mov
nop
xchg
and
ffreep
hlt
fidivr
clc
fbstp
push
jo
mov
cmp
inc
fbstp
test
push
mov
cmovnz
popf
mov
jecxz
add
cmp
retn
loopne
retn
stosb
mov
xchg
retn
push
pushf
adc
shl
neg
mov
jmp
cmpsd
iret
retn
retf
mov
jz
aaa
sub
mov
cmp
mov
les
sub
retf
leave
retf
fmulp
mov
stc
xor
retn
sbb
or
xchg
sub
retf
retn
pop
or
retf
retf
jmp
div
pop
pop
push
or
cmp
test
lds
inc
xor
jecxz
xchg
aaa
mov
adc
and
pop
dec
int
sub
jg
fisttp
jle
mov
in
push
dec
xor
ror
sbb
sal
stc
sbb
adc
mov
lds
sub
jg
scasb
add
cmp
push
popa
mov
lea
arpl
xchg
jz
mov
sub
pushf
jmp
aaa
or
xor
stosb
aas
mov
or
jns
mov
inc
retn
sahf
sbb
insb
xor
mov
jnz
pop
push
jmp
clc
outsb
xor
xor
or
shr
push
sahf
inc
in
sub
and
popf
mov
xor
sub
push
pop
adc
out
sar
cmp
add
icebp
aad
push
lodsb
mov
lodsb
retf
push
aad
popa
rcr
pop
lea
insb
cmp
adc
in
mov
loope
fsubr
icebp
enter
xchg
mov
xlat
sbb
fld
sal
sub
inc
rol
cmps
push
push
test
pop
jmp
and
ficom
fmul
retn
or
frstor
aaa
retn
test
retn
adc
or
push
stc
adc
cld
mov
add
sbb
adc
and
cmp
inc
sbb
retn
das
mov
mov
cmpsb
mov
pop
retn
add
jmp
mov
xchg
mov
loope
into
pushf
sub
push
pushf
mov
push
jno
xchg
daa
or
arpl
mov
retn
mov
add
retf
idiv
mov
movsb
pop
in
push
cdq
inc
insb
wait
and
cmpsb
push
push
push
shr
jz
or
or
insb
fisttp
hlt
inc
aas
fistp
and
scasb
icebp
pop
jnz
or
pop
sbb
call
mov
sbb
pop
mov
call
out
dec
cmpsb
sbb
retn
mov
imul
retf
retf
shr
retf
scasd
enter
push
sahf
xchg
mov
xor
and
mov
leave
xchg
retf
or
stosd
retn
xchg
retn
fimul
adc
retn
aaa
cmc
mov
sbb
xor
fimul
xor
popa
or
cmp
inc
sub
retn
lodsb
sbb
retf
retn
cmp
retf
mov
retn
imul
retf
or
scasb
push
mov
mov
popf
aas
or
pusha
xor
sub
movsb
std
stosb
cmp
sub
add
mov
dec
retn
jmp
retn
setalc
cmp
mov
inc
mov
adc
xchg
dec
fninit
not
daa
mov
dec
fild
retf
shl
jnp
lahf
adc
lock
mov
and
cmp
call
daa
or
push
mov
aad
or
xchg
test
add
push
ja
inc
push
add
outsd
int
sub
mov
aas
sub
pop
mov
cwde
xchg
setalc
mov
inc
aad
adc
mov
jnp
xor
jb
imul
movsb
dec
jz
inc
xor
leave
repne
mov
mov
mov
pop
in
cmp
jge
sbb
mov
pop
adc
cld
pop
mov
out
mov
jg
dec
shr
dec
jmp
xchg
sbb
stosb
into
mov
int
fcomp5
stc
jns
test
mov
daa
loop
xor
cmpsb
and
std
mov
out
pop
sub
fbld
out
sbb
inc
in
inc
movsd
pop
pushf
iret
inc
in
mov
das
in
not
push
retn
cdq
retf
mov
cmp
fcomp5
or
sahf
jecxz
fdiv
sbb
or
wait
sub
pop
pop
or
mov
mov
retf
mov
std
jo
ja
dec
cld
jno
fisttp
rep
add
insb
inc
cmp
jbe
stosd
hlt
add
mov
xor
cmp
jg
and
mov
inc
imul
add
push
push
imul
cmc
jns
cmp
jnp
test
or
push
wait
sub
mov
push
retn
imul
insb
imul
and
scasb
lahf
jnb
sub
retn
pop
imul
dec
dec
jns
add
test
or
ja
jecxz
adc
pusha
and
mov
icebp
sbb
hlt
pop
or
rep
pusha
cdq
cmpsd
icebp
push
push
jz
mov
cli
sahf
les
dec
movsb
sbb
mov
jge
fdivr
xor
int
setalc
icebp
out
dec
push
jns
test
xor
xor
daa
sal
or
outsd
cmp
out
mov
jns
shl
jbe
loopne
stosb
xor
cmc
mov
test
scasb
mov
loopne
push
cwde
sti
imul
retf
adc
xor
wait
outsd
jmp
retf
add
adc
test
push
popa
xchg
aaa
pop
loop
dec
mov
or
shl
retn
jmp
lock
rep
mov
mov
popf
or
mov
aas
push
aam
add
add
push
inc
dec
jns
mov
mov
lodsd
fisub
clc
aam
jle
and
sbb
xlat
mov
fisttp
imul
cdq
iret
das
pop
pushf
cmp
pop
or
jbe
out
and
xchg
xchg
sub
in
pushf
mov
pop
jecxz
jg
xchg
inc
push
setalc
dec
into
imul
cmp
xchg
loop
bound
clc
jmp
or
add
mov
cwde
loopne
pop
inc
add
mov
push
test
cmp
jz
inc
std
adc
retf
arpl
push
in
sbb
xor
sbb
mov
inc
xor
jmp
test
popf
push
test
cmp
lods
outsd
ficomp
sbb
retn
add
jb
inc
popf
sahf
sub
fdiv
rol
retf
ror
popf
cwde
add
dec
hlt
iret
and
jns
add
pop
or
idiv
xchg
mov
or
aas
inc
mov
retn
leave
pop
mov
cmp
retf
xchg
push
dec
and
mov
or
jnz
xchg
jmp
and
xor
fsubrp
mov
add
jmp
aaa
fsub
mov
retf
mov
retf
retf
cmpsd
sub
adc
scasd
movsd
pop
and
add
adc
sbb
add
inc
retn
wait
and
xor
push
lahf
inc
cmp
setalc
sub
icebp
sub
inc
pop
dec
shr
jbe
mov
fistp
pop
adc
test
push
or
xor
xchg
fisubr
sub
lock
shl
xchg
clc
retf
mov
aaa
mov
push
pop
push
sbb
add
retf
retn
push
dec
jbe
push
xor
xor
jp
popf
sub
jo
push
mov
push
dec
xchg
sub
sbb
dec
aas
dec
stc
fisub
rcl
clc
stosb
mov
call
jp
dec
ffreep
aaa
pusha
mov
and
pop
inc
and
fcomi
cmpsd
mov
clc
xchg
xlat
dec
cmc
inc
pop
int
clc
sub
mov
retn
mov
cli
mov
and
out
outsb
xor
jecxz
test
mul
xor
aaa
cmp
jo
cld
inc
and
lock
jnz
xor
jmp
sbb
dec
inc
icebp
jmp
enter
pop
pop
inc
jmp
mov
enter
loopne
push
jle
adc
mov
jle
xchg
lock
sbb
mov
retn
xchg
jmp
pushf
pop
mov
inc
stosb
ror
adc
and
mov
loopne
scasb
hlt
test
adc
pop
cmp
scasb
mov
dec
adc
mov
sub
mov
dec
ror
push
fucomi
jecxz
mov
xchg
retf
dec
lodsd
jge
cmp
cld
not
mov
in
sbb
pop
ror
mov
inc
dec
ffree
lea
les
xchg
cmpsb
push
mov
adc
out
pop
and
dec
sti
push
mov
outsd
out
mov
add
sub
insb
retf
retn
mov
retf
retn
mov
mov
pop
mov
retf
retf
jle
xchg
mov
jmp
pushf
sbb
int
mov
sub
push
add
jnp
lds
cld
sbb
popf
mov
sbb
lock
mov
imul
rep
sbb
or
stosb
fcomp
xchg
mov
mov
ja
in
push
scasb
push
clc
adc
push
fcomip
retf
mov
push
aad
xor
retn
xor
loopne
and
jns
mov
push
iret
push
sbb
jnp
popa
push
mov
fistp
add
clc
add
minps
jmp
retn
pop
shr
mov
retf
retf
retf
adc
rol
push
adc
add
mov
retf
sahf
adc
xor
inc
mov
lds
jmp
mov
sbb
mov
retf
retn
cmp
retf
jmp
xchg
retf
add
jle
add
sub
nop
cwde
push
sbb
retn
cmc
inc
call
inc
stc
rcr
adc
xchg
sal
out
fild
mov
inc
aas
lea
xor
call
xchg
enter
sar
add
das
stc
leave
cmp
adc
fsubr
call
mov
jnp
out
imul
fcomp
jnz
add
loopne
inc
jnp
loopne
and
sbb
lss
dec
jmp
jns
sub
pop
insd
into
push
push
scasd
xchg
std
call
lodsb
test
cmpsb
hlt
lock
inc
outsd
sub
push
sub
fld
xchg
retn
aaa
or
sub
jnz
sbb
mov
and
push
movsb
adc
shr
push
jge
std
fidiv
repne
retn
lds
xchg
cmc
icebp
sub
cli
mov
cmp
dec
js
mov
stc
add
cmp
mov
sub
push
push
loope
fld
in
xchg
push
inc
imul
push
test
sub
add
dec
int
clc
mov
mov
inc
add
fmulp
cmp
stosb
jb
imul
mov
mov
mov
jno
hlt
mov
lock
mov
add
mov
aas
add
test
and
mov
sub
movs
sbb
int
jbe
pop
bound
inc
mov
stc
bound
setalc
int
or
idiv
test
jb
fnstcw
mov
dec
jnb
and
js
retf
mov
stc
inc
cmp
sbb
mov
rep
pop
shl
mov
pop
imul
std
jmp
lahf
or
mov
add
add
sub
retf
dec
mov
les
xor
retn
xchg
retn
or
test
icebp
test
push
rol
retf
das
dec
push
or
test
cli
imul
push
jmp
test
retn
mov
cmp
fst
call
pop
add
jge
add
outsd
hlt
cmpsb
rep
inc
retn
push
out
push
loope
mov
mov
pop
adc
or
push
mov
adc
pushf
shr
ffree
ficomp
jl
xor
mov
cmpsb
in
fst
arpl
and
fsubp
das
xlat
insd
xchg
in
xor
pop
mov
cmc
in
mov
jl
cmc
mov
fcmove
adc
rep
retf
mov
mov
retn
stosd
or
add
retf
les
jge
lea
cdq
inc
add
mov
xchg
fisttp
lds
sar
adc
and
mov
pop
retn
sub
cmp
push
pop
dec
xor
adc
sbb
retn
mov
xchg
aad
push
xchg
retn
retf
sahf
push
cwde
inc
pusha
enter
mov
xor
push
mov
mov
or
adc
pop
daa
inc
mov
push
mov
xchg
dec
mov
lodsd
push
jb
mov
push
mov
inc
sub
inc
mov
out
xlat
neg
enter
scasb
mov
sahf
fmul
test
rol
retf
retf
test
test
lea
mov
retf
pop
movsd
retn
add
push
push
sti
pop
retn
mov
mov
and
pop
retf
movsb
pop
shr
jmp
sti
cmp
mov
test
aam
sub
inc
push
xchg
jmp
movsd
cld
mov
and
out
lodsb
sahf
sbb
jg
inc
in
aas
fstp
fsubr
mov
mov
aad
jnz
lds
push
retn
cmp
out
outsd
mov
mov
jmp
jmp
xor
cmpsb
imul
add
int
push
retf
retf
adc
pop
sbb
mov
retf
inc
retn
and
retf
retn
retn
cld
mov
leave
jmp
fdiv
inc
pushf
inc
push
mov
insb
sub
jecxz
push
mov
daa
jg
or
add
cmp
sbb
dec
xlat
mov
test
int
xchg
int
bound
adc
cmp
pop
arpl
cmp
cmp
pop
push
test
call
scasb
neg
sub
in
jmp
pusha
popa
sar
inc
jecxz
jg
xchg
popf
mov
retn
out
stosd
xor
imul
cmp
retn
sub
push
jmp
xor
cmc
lahf
retn
lahf
retn
fsub
jmp
mov
jnz
sub
xchg
dec
adc
mov
pop
in
xor
dec
das
pusha
sbb
mov
loopne
in
jecxz
setalc
inc
in
movsd
cld
sbb
test
inc
retn
inc
retn
retf
retf
fstp
mov
retf
mov
loop
lodsb
popa
in
dec
retn
inc
scasd
stosb
retf
mov
cmp
aad
cli
retn
imul
or
retn
retn
retf
adc
adc
lahf
push
add
sub
cld
retn
shr
retf
mov
cwde
jno
aas
retn
stosd
jz
push
mov
retf
scasb
xlat
pop
dec
cwde
push
pop
cmp
sub
push
mov
sti
push
aas
loopne
adc
xor
mov
wait
and
sahf
mov
push
and
mov
fidiv
jecxz
fild
imul
add
xchg
pop
xor
xor
mov
lea
inc
xchg
cmpsd
scasd
sbb
mov
jnz
and
xor
and
imul
retf
mov
inc
fimul
jno
mov
xchg
mov
xchg
jmp
mov
in
jno
and
xchg
sal
iret
push
stc
pop
jo
mov
wait
sar
xor
inc
setalc
retn
imul
mov
push
test
scasd
cmp
jo
mov
sbb
pop
mov
out
retn
push
mov
test
push
push
mov
jnb
fisttp
retf
dec
dec
xchg
jle
rol
pop
add
sub
sbb
jle
setalc
call
daa
rcl
xchg
adc
sal
sbb
movsb
cmp
imul
cld
push
mov
pcmpgtb
add
xlat
cwde
xor
xor
push
les
xor
pop
movsd
out
movsb
xor
or
lodsd
pop
jg
push
lodsb
jns
pushf
sbb
push
loope
mov
adc
xchg
jmp
std
mov
popf
sti
movsd
pop
into
dec
lodsd
mov
pop
dec
daa
pop
jo
lodsd
ja
dec
jmp
retf
jl
inc
cmovle
mov
pop
mov
inc
icebp
inc
inc
jnz
and
scasd
iret
imul
retf
inc
mov
fidiv
xor
sub
mov
jmp
sbb
rol
jge
push
push
popf
retn
or
pop
scasb
xchg
dec
shl
sbb
add
sub
xor
jns
lea
sub
mov
dec
test
jl
hlt
clc
aad
iret
push
outsd
dec
push
insd
inc
adc
stosb
sbb
outsd
cmpsd
cmpsb
retn
les
mov
loopne
test
mov
xchg
std
shl
out
mov
cmp
sahf
sbb
cwde
retn
mov
dec
jnp
xchg
jmp
jl
inc
mov
fcom
lahf
inc
or
mov
and
push
retn
mov
movsb
add
push
iret
sub
into
pop
imul
and
mov
or
sal
retf
cli
retn
retn
inc
mov
add
mov
std
dec
sar
push
mov
sti
nop
xchg
mov
aaa
adc
jmp
push
push
popa
test
nop
jecxz
mov
mov
pop
xor
sbb
arpl
clc
rcr
out
int
int
push
adc
mov
bound
sahf
loop
sbb
fidivr
sbb
stc
cmp
ficom
sahf
cmp
mov
retf
retn
dec
popf
push
dec
cmp
cmp
cmc
retf
rcr
sub
mov
fisttp
sub
inc
or
retn
mov
jmp
mov
push
sbb
dec
sbb
pop
test
mov
hlt
outsd
aam
cmc
sbb
adc
jo
dec
mov
mov
popa
aaa
setalc
xchg
int
sal
in
mov
push
pop
inc
and
retf
and
sbb
sub
retn
sbb
retf
retn
push
add
inc
or
pop
lodsb
retf
xchg
push
push
cmpsd
pop
xor
cmp
retn
push
test
retn
retf
xor
retn
and
xor
daa
cmp
retn
sahf
retn
pop
stosb
jmp
add
nop
adc
cmc
retf
jmp
pop
daa
mov
cmp
daa
aas
enter
pop
and
sub
add
imul
and
dec
js
dec
adc
adc
xchg
retf
mov
mov
retf
xor
cmp
or
adc
xchg
cwde
add
into
daa
mov
sbb
test
inc
and
retn
sbb
retf
push
jmp
push
jns
stosb
cmpsb
jmp
and
and
push
test
lea
jbe
cmp
mov
aas
mov
adc
pop
pushf
das
and
cmc
fistp
push
in
mov
sbb
inc
std
sti
adc
jp
cmp
inc
js
xor
adc
xor
lodsb
jnp
jz
sub
aam
add
jz
lds
sahf
ja
aad
cmp
or
and
int
cmp
dec
pop
or
retf
mul
sbb
jmp
sub
retn
pop
and
stosb
push
rcl
xchg
sub
and
lodsb
retf
mov
xor
jmp
or
mov
xchg
retf
pop
or
jmp
sub
jge
sub
push
push
rcl
test
cmp
mov
loopne
or
push
xlat
push
mov
imul
fstp
lodsb
mov
movsb
std
adc
fcom
and
pop
or
mov
adc
jo
and
adc
jecxz
out
clc
popf
clc
bound
loopne
pxor
sar
out
arpl
lock
sub
inc
inc
jp
fstp
jp
jns
lahf
shr
push
call
movsb
dec
in
mov
repne
loop
retf
inc
into
mov
test
sbb
mov
test
inc
jnb
icebp
or
test
arpl
sub
push
int
xchg
loopne
mov
call
loop
out
dec
xor
sub
iret
cwde
push
retn
popa
xor
pop
lahf
retn
fdivr
push
inc
jnb
xchg
cmc
out
xchg
sub
mov
daa
retn
retf
ror
pop
retn
jmp
add
retf
mov
retf
retn
jo
retn
fimul
mov
mov
in
mov
mov
mov
fbstp
rcr
xor
push
jmp
stosd
dec
stc
test
retf
cld
cmp
sbb
mov
wait
dec
jo
test
rcr
adc
xchg
clc
mov
push
retf
mov
or
xor
call
jl
mov
push
mov
mov
push
sti
jecxz
mov
pop
mov
inc
pusha
xor
sbb
out
pop
cli
pop
retf
dec
dec
lodsb
and
adc
retf
dec
retf
or
push
push
lodsd
and
aas
push
retf
cmp
dec
push
xlat
xchg
retf
pop
setalc
mov
push
sbb
retf
retn
xor
mov
int
push
retn
fidiv
mov
jmp
or
inc
inc
retf
aaa
or
or
arpl
xor
push
stc
add
sbb
scasb
inc
mov
mov
mov
rcl
sti
sal
jmp
and
sub
jmp
dec
and
retn
adc
popf
sub
cmpsb
xor
pop
jmp
inc
xchg
jmp
sbb
sbb
retf
jnb
fcmovnb
push
pop
push
retn
mov
push
push
mov
retf
retn
xor
aad
std
xchg
retf
and
push
adc
fst
test
push
xlat
fcmovb
retf
retn
add
xchg
add
scasb
xor
icebp
push
jmp
mov
mov
mov
push
push
rol
in
fcom
mov
push
mov
repne
retf
lahf
cmp
scasb
and
retn
jo
retn
stosb
dec
xor
loope
int
inc
jnb
jge
retf
mov
sal
pop
fmul
xor
xor
test
sti
test
hlt
les
jnp
mov
call
mov
out
xor
daa
jz
mov
xor
and
pop
sbb
jbe
sub
ror
fstp
adc
stc
pop
sbb
fbld
lfs
xor
div
sar
jge
sar
outsb
adc
shr
or
mov
adc
dec
xor
out
fimul
push
pushf
insb
inc
sbb
movsd
imul
sbb
sbb
xor
adc
outsb
cmc
call
wait
xchg
out
pushf
mov
mov
sbb
lodsb
dec
xor
and
jl
rcl
jz
mov
insb
mov
adc
fistp
sbb
pop
mov
pop
and
xchg
pop
jb
cmp
in
mov
and
popf
pop
das
fild
imul
jbe
insb
loop
popf
pop
sti
cmc
add
loop
retn
cmpsd
push
jb
setalc
wait
jmp
lods
setalc
pop
xchg
push
jle
mov
in
or
adc
mov
enter
scasb
out
adc
iret
mov
aam
or
push
sal
xor
cwde
jz
xor
mov
mov
in
push
insb
mov
jnb
mov
sbb
xchg
jmp
sbb
retn
and
enter
or
enter
cmp
retf
push
retf
retn
lds
retf
adc
jno
cli
xor
sal
mov
sbb
mov
cmp
jmp
jnb
setalc
pop
dec
cmp
jl
out
outsd
movsd
or
mov
mov
call
fst
mov
add
lds
call
aaa
dec
push
push
retn
sub
pop
xor
rcr
pop
stc
leave
and
in
in
lodsb
xchg
adc
jp
lodsb
js
mov
in
jnb
movs
aad
adc
push
pop
cmp
test
setz
add
inc
xlat
shr
test
retn
mov
loope
int
pushf
shl
mov
out
setalc
adc
add
iret
jle
and
jno
mov
adc
lea
pop
mov
push
dec
and
rol
test
neg
or
dec
aam
push
sbb
mov
and
test
stosb
xchg
mov
test
retf
adc
xchg
push
retf
lahf
retf
sti
jmp
retf
retn
xor
ror
push
mov
retn
retf
sub
mov
retf
mov
jmp
cmp
xchg
daa
mov
retn
retn
push
mov
btr
stosb
inc
mov
adc
jmp
and
push
xchg
retn
retn
or
retf
add
push
sbb
stosb
dec
retf
inc
retf
xor
mov
mov
fmul
mov
retf
retf
retf
retf
adc
mov
fbstp
fidiv
retf
retn
stosb
push
pop
stosd
pop
std
lodsb
mov
retf
push
retf
sbb
retf
xchg
adc
mov
int
wait
push
retf
or
fadd
nop
retn
retf
lodsb
cmpsb
jnp
wait
cmp
shr
inc
or
jge
movsb
jno
adc
inc
pop
mov
adc
inc
cmp
xchg
cmp
retf
inc
xchg
test
or
jo
xchg
xor
lock
jmp
mov
push
dec
dec
retf
sar
cdq
retn
fimul
sbb
stosd
fisub
setalc
xor
sbb
sub
lodsd
mov
jmp
retn
sbb
jnz
xchg
mov
lahf
mov
xlat
inc
pushf
retn
cli
clc
mov
jp
fistp
mov
sbb
test
or
retf
ror
ficom
popf
xor
aad
pop
int
rep
pop
pop
pusha
packssdw
xor
jp
aaa
adc
add
mov
daa
dec
lahf
dec
fstp
sbb
dec
popa
sbb
xchg
mov
lds
sti
xchg
test
pop
mov
mov
cmp
jno
push
leave
retn
retf
retn
sbb
cwde
dec
retf
pusha
stc
fldenv
jl
sbb
sbb
mov
or
cld
inc
or
das
jns
mov
jnz
jnb
mov
scasd
enter
or
xor
cdq
adc
jl
xlat
mov
imul
push
aam
daa
popf
push
aam
in
xchg
jb
sbb
pop
push
sbb
adc
mov
scasb
cwde
lodsb
xchg
sbb
jle
fcomip
mov
add
fcomi
fiadd
pop
in
popf
std
mov
mov
mov
sub
std
jns
inc
jnp
leave
pop
cmp
pop
and
fcom
outsd
insb
pop
in
xchg
lea
cdq
cmpsb
pop
fstp
pop
setalc
int
adc
adc
loop
mov
cmpsb
aaa
popa
in
popa
cmp
stosb
sbb
cmc
or
mov
mov
cmp
cdq
pop
wait
cld
cmp
test
test
std
and
jnz
scasb
push
ficom
aad
scasd
add
cmp
retf
add
retf
retn
adc
mov
push
dec
dec
jge
xchg
call
retn
retn
and
mov
sub
pop
cmp
andps
pop
and
xor
mov
xlat
lodsd
les
fdivr
scasd
nop
retf
scasd
push
jmp
inc
or
rcr
insb
inc
push
jbe
retn
xchg
jecxz
jmp
lodsd
or
fsubr
jno
adc
cdq
and
sub
enter
mov
and
xchg
dec
mov
and
push
bound
push
inc
rep
mov
imul
movsb
jo
sbb
or
bound
setalc
mov
rep
or
inc
setalc
aam
sar
mov
xor
or
sub
imul
stosd
push
mov
and
sub
loope
adc
add
adc
and
sahf
mov
jno
outsd
fidiv
xchg
bound
push
adc
xor
mov
mov
jz
retf
or
retf
retf
jmp
sbb
sal
push
push
retf
jnb
mov
add
mov
sub
cli
pop
jmp
int
jp
push
mov
xchg
pop
pop
mov
dec
sbb
daa
or
mov
stc
and
out
out
lock
sti
xor
mov
sub
jo
in
cmp
fisttp
sti
lodsd
adc
sbb
clc
sbb
aad
in
mov
mov
rol
pop
cld
push
add
js
das
cli
add
pushf
out
cmp
adc
sub
jno
xor
adc
mov
xchg
lodsb
wait
cdq
dec
pop
imul
insd
pop
aad
push
popf
cmp
dec
pop
inc
movsb
retn
push
scasd
mov
add
jbe
cmc
rcr
aas
scasb
push
pinsrw
daa
imul
mov
js
jge
dec
lodsb
movsb
clc
popa
push
cmp
outsd
xchg
push
imul
push
sti
in
insb
push
mov
stc
cmp
jge
loope
xchg
add
das
jl
movsd
push
inc
mov
aaa
clc
mov
jns
xchg
xchg
mov
shr
xchg
push
rcl
sbb
mov
pop
sbb
mov
pop
loop
movsd
sti
dec
pushf
cmp
adc
adc
add
rcr
pop
mov
jns
cmp
or
and
mov
jmp
xlat
pusha
and
scasd
add
lds
add
mov
hlt
pop
push
imul
mov
xchg
retn
icebp
fcmovu
popa
mov
push
wait
jnb
retn
xlat
cmp
adc
dec
and
sbb
xor
retn
push
retn
or
jl
jmp
dec
or
jnp
lock
js
push
xchg
retf
outsb
cmp
jbe
jno
cmc
nop
add
push
add
push
xor
jmp
xchg
leave
retf
not
test
or
dec
inc
cmp
retn
adc
jmp
out
add
retn
fnstenv
or
retf
retf
push
jno
xor
pusha
mov
jmp
mov
retn
retn
mov
dec
mov
sub
loope
cli
mov
retf
xchg
std
retn
jmp
retn
js
les
ficom
mov
retn
inc
jb
sub
bsf
or
push
arpl
stosb
lahf
inc
adc
and
nop
mov
stosb
add
push
xor
dec
wait
mov
dec
sbb
jmp
cdq
stosd
and
retf
cmpsb
aas
ror
lds
push
fidiv
sbb
retf
stosd
nop
mov
jl
mov
mov
pop
sub
lodsb
push
retn
into
lds
in
pusha
add
cmc
jno
and
add
add
test
xor
cmp
jle
pop
jnb
std
loop
lodsb
lodsb
push
fist
pop
repne
push
add
sbb
and
adc
mov
add
sbb
sub
lahf
rep
shr
and
mov
pop
mov
mov
mov
jle
pop
or
push
insb
movsd
jb
jb
sbb
or
mov
jnp
lds
add
pusha
movsb
xchg
xchg
add
arpl
and
mov
out
inc
sbb
add
jl
fsub
setalc
xor
pop
push
mov
push
sub
sub
sub
cmpsb
test
retn
aam
call
scasd
cld
out
mov
in
wait
jg
retn
enter
sub
add
or
shl
jb
test
jno
pop
fcmovne
call
sbb
or
or
cmpsd
retf
jns
jmp
xor
test
mov
sbb
hlt
pusha
shl
pop
push
aam
aas
loopne
wait
jmp
pop
lahf
push
jl
wait
and
inc
loope
mov
mov
cmp
or
jecxz
mov
pop
ja
test
mov
add
stosd
dec
mov
inc
xor
pop
outsb
or
sbb
jbe
xor
pop
pop
mov
int
js
dec
jle
cmpsd
push
sub
lodsb
or
jp
stosd
adc
cmp
pop
xor
cmp
xor
iret
and
push
mov
movsb
mov
mov
out
pop
or
and
jbe
sub
sbb
rcl
fcom
inc
mov
insd
jns
bound
nop
inc
pusha
aam
and
cmp
cmp
sub
xchg
imul
enter
sub
stosd
lodsd
lahf
xor
push
add
outsb
neg
add
add
jecxz
repne
xchg
mov
insd
movsb
inc
rcl
add
cmp
mov
loopne
das
push
push
inc
cmp
sbb
cwde
out
sub
iret
push
mov
fdiv
imul
or
fbstp
out
ja
setalc
jbe
sub
push
pop
sbb
imul
push
mov
dec
int
pop
dec
mov
fadd
and
or
jbe
jp
rep
mov
sub
xchg
jle
nop
out
mov
lahf
adc
jns
cmc
fild
jg
les
dec
pop
dec
out
pop
aas
fidiv
sbb
add
cmpsd
jle
stc
inc
dec
hlt
icebp
outsd
inc
mov
mov
xchg
std
fldenv
fisttp
mov
pop
xchg
mov
inc
or
sbb
cmp
ja
leave
lahf
jns
or
movsb
mov
sti
push
sub
dec
stosd
xchg
push
cdq
xor
popa
jbe
xor
sar
stosb
dec
mov
nop
shr
push
xchg
ficomp
sar
add
fdivr
in
mov
mov
cmpsb
and
sub
mov
or
mov
ror
les
adc
bound
into
mov
lea
sub
mov
push
cmp
pop
aas
or
push
sbb
dec
xchg
mov
cmp
pushf
cmp
nop
rcl
sub
sub
or
loop
add
pop
popf
dec
ror
shl
pop
sahf
fcmovnu
les
xor
sub
lodsd
push
inc
hlt
lodsb
bound
pop
jmp
and
retn
xor
and
dec
sahf
cdq
push
mov
retn
pop
cmpsb
setalc
xor
retn
lodsd
xor
retf
clc
inc
lodsd
push
sar
sbb
retf
retf
retf
test
add
mov
fnstcw
mov
retf
push
fcmovne
dec
retn
shl
jno
or
retf
fldenv
pop
push
stosd
adc
dec
aad
rep
pop
jnz
aam
std
mov
or
sub
or
retf
test
sahf
wait
retf
loopne
pusha
jnz
pop
retf
push
stosd
iret
les
push
sub
mov
cmp
add
mov
cmp
and
jo
adc
das
xor
jmp
pop
mov
fsub
imul
mov
imul
pop
sbb
and
pop
adc
push
jnb
sbb
loopne
mov
retf
pop
dec
push
cmp
or
icebp
pop
sbb
or
lodsb
test
add
retn
scasb
or
dec
and
pop
rcr
or
mov
inc
movsb
push
cmp
pushf
test
sbb
push
retn
mov
cli
or
adc
mov
push
retf
sbb
or
jmp
ror
or
pop
retn
xchg
retn
mov
inc
xchg
push
rcl
out
sahf
xlat
jmp
retf
sahf
retf
inc
xlat
cmp
dec
loope
jnp
inc
xor
dec
dec
stosd
sbb
out
loop
xchg
aas
jnp
push
sbb
iret
hlt
outsd
adc
imul
or
cwde
mov
jb
sal
outsb
sub
or
loop
mov
mov
jmp
jz
cmp
jle
ror
pop
sbb
cmp
rol
les
jnz
inc
dec
cli
xchg
pop
push
push
sbb
mov
adc
sbb
pop
adc
or
cmp
into
xchg
retf
adc
sbb
mov
dec
push
jecxz
sbb
add
and
sahf
xchg
or
ficom
pop
mov
mov
int
dec
push
cmpsd
out
lodsb
dec
stc
out
aas
and
or
imul
cld
pop
adc
sub
fstp1
sub
push
cmp
mov
jo
add
adc
lea
aas
test
scasd
mov
push
push
jnb
mov
fist
mov
pop
sub
lea
test
xor
wait
cmp
or
loopne
rol
sar
into
sbb
call
sti
adc
lock
inc
xchg
repne
push
setalc
int
in
shr
movsb
mov
ror
imul
mov
inc
lock
fld
in
push
ror
lea
adc
mov
push
cdq
mov
pop
xchg
sbb
popf
psubq
in
sbb
stosb
std
outsd
push
dec
and
sub
enter
xchg
dec
movsd
cmp
retf
pop
jmp
pop
aas
retn
xchg
push
dec
sbb
stosb
pop
test
xor
retf
sbb
ror
sbb
add
add
retn
or
sahf
retf
movsb
retf
mov
retf
fucomp
jo
clc
retn
fimul
and
xor
inc
mov
jo
stosb
mov
into
mov
mov
mov
push
insb
jmp
or
and
adc
fstp
add
fnstcw
mov
fbstp
mov
xchg
aad
add
or
retn
setalc
retf
retf
mov
or
rcl
scasb
dec
mov
mov
shr
retn
cmp
adc
cmpsb
retn
wait
retf
mov
pusha
rcr
retf
sahf
jp
cli
xchg
icebp
and
mov
js
retn
xchg
repne
push
jg
jmp
cli
daa
push
bound
push
add
mov
and
sub
test
xor
ficom
jg
mov
in
and
retf
jns
out
jnb
cmp
popa
mov
sal
mov
imul
dec
fldenv
fnstenv
daa
lahf
or
mov
jg
loopne
mov
inc
jbe
mov
xor
movsb
xchg
aad
mov
fist
adc
xlat
mov
mov
jle
adc
retn
dec
retn
retn
cdq
sub
lodsb
jmp
push
retn
retf
xchg
fstp
aas
push
dec
retf
jb
setalc
fbstp
pop
ja
dec
sti
ror
xchg
imul
dec
fdivr
or
scas
arpl
cmp
daa
inc
cmp
mov
div
cmpsb
mov
jmp
adc
and
js
retf
retf
mov
xor
push
popf
div
cli
mov
call
arpl
mov
adc
mov
sub
fisttp
mov
inc
rep
jnp
cld
aas
scasd
in
or
add
jb
mov
cmp
icebp
repne
out
dec
jo
les
inc
stc
mov
sub
or
xchg
enter
or
mov
xor
cmp
push
scasb
or
cmp
fmul
retn
retn
or
cmp
ja
push
retf
fnstsw
inc
aad
lea
jecxz
lodsd
cdq
add
push
adc
mov
stosb
js
clc
jmp
push
fsubr
cmp
enter
mov
xchg
fstp
jl
enter
mov
mov
wait
cmp
push
mov
in
sub
pop
popa
cmpsd
hlt
or
movsd
xor
push
scasd
out
mov
clc
call
fnstenv
xchg
jns
pushf
std
fild
xor
mov
or
and
lahf
out
add
iret
hlt
sbb
mov
dec
wait
mov
retf
push
and
mov
aad
jmp
mov
dec
in
into
imul
cmp
mov
leave
loopne
add
adc
dec
mov
jb
stosd
daa
mov
pop
or
mov
cmc
sbb
inc
jo
clc
retf
lahf
or
retf
pop
pop
rcl
jp
in
xor
repne
push
lock
fisttp
loop
fild
xchg
dec
lodsb
mov
loope
insd
imul
retf
wait
out
cmp
dec
mov
test
jge
rep
push
jnp
jp
cmp
or
cwde
mov
stc
cmpsb
stosd
fstp
movsb
push
xchg
pop
out
mov
mov
mov
add
add
scasb
mov
push
mov
and
imul
mov
loop
js
inc
in
sub
clc
xchg
inc
sahf
jz
cli
push
wait
cwde
fild
lodsb
cwde
rcl
rol
sub
xor
out
neg
sub
push
or
mov
fucomp
test
loope
pop
test
cmp
pop
shl
pop
jmp
les
add
pop
add
mov
mov
repne
jb
adc
daa
mov
push
stosb
imul
loope
inc
dec
push
jnb
pop
test
dec
xchg
jnz
mov
out
std
mov
push
imul
rcl
mov
or
mov
std
push
out
retn
rcr
push
mov
dec
fistp
inc
mov
add
xchg
out
xchg
and
push
lodsb
cmp
and
dec
retn
movsb
adc
push
mov
sti
mov
mov
sal
sub
shl
dec
or
retf
pop
sub
mov
aas
movsb
lodsb
sbb
xor
sub
aam
retf
retn
mov
pop
fst
mov
jmp
pop
jmp
popa
retf
sub
inc
jmp
retf
dec
aaa
add
and
mov
popa
pop
add
retn
xchg
mov
pop
sahf
or
add
retf
push
push
mov
cmp
push
xchg
retf
retn
retn
jmp
retn
mov
jle
retf
retf
rcr
in
xchg
xchg
inc
sti
pop
push
fcomi
pop
fild
xlat
jz
out
add
outsb
out
jge
bound
inc
sbb
add
cmpsd
push
les
stosd
wait
retn
scasb
dec
add
fiadd
or
cwde
imul
outsd
xor
xor
mov
pop
xchg
adc
call
rcl
sal
test
jge
dec
test
push
mov
jno
pop
push
popf
mov
lock
adc
mov
sbb
add
jb
int
mov
mov
cmp
push
ja
mov
pop
insd
jno
jge
sbb
insb
jecxz
rep
lodsd
mov
retf
and
xor
jnp
aam
xor
das
cdq
or
js
sbb
jge
mov
cmpsb
retf
sbb
inc
inc
mov
add
push
inc
cmovp
add
pop
inc
push
insb
pop
push
jmp
test
retn
leave
push
cmp
mov
mov
dec
and
nop
xor
retn
add
retn
retn
retf
retf
cli
mov
cmp
or
adc
scasb
pop
and
dec
test
mov
divps
retn
retf
fnsave
jz
push
imul
or
cmc
cld
and
retf
pop
dec
pop
mov
daa
dec
xor
cmp
fisubr
pop
daa
iret
sal
fstp
movsd
add
arpl
adc
jnp
push
mov
jo
jmp
xchg
cmc
out
cmp
jb
bound
shr
shr
or
sub
and
iret
cmp
pop
jnb
mov
mov
movsb
sub
mov
mov
xchg
mov
cmp
nop
add
nop
xchg
mov
mov
pop
mov
jnp
adc
xor
not
or
sbb
sub
cmp
adc
ror
mov
cmp
retf
aad
inc
in
jge
jecxz
mov
shr
pmaxsw
in
mov
xchg
mov
jno
push
push
wait
mov
int
and
fdiv
cli
sub
jb
or
push
sub
jle
cmp
fstp8
mov
cmp
and
das
iret
or
pop
jnb
dec
inc
jnp
pop
sbb
jnp
pushf
mov
add
adc
repne
jmp
xchg
scasd
sub
lea
mov
retn
mov
cdq
shr
fldcw
xchg
or
jmp
icebp
retn
adc
mov
mov
leave
xchg
retf
test
mov
or
push
test
retf
xchg
mov
sbb
jle
jmp
mov
and
in
mov
mov
mov
mov
pusha
mov
xor
cmp
cmp
loopne
mov
enter
das
jno
xchg
push
push
out
jg
ja
lodsd
push
jb
pop
xchg
xchg
mov
in
adc
daa
pop
call
mov
fisub
scasd
jb
lodsb
sub
push
dec
call
jmp
inc
xchg
retn
in
out
lahf
pop
jge
jb
jecxz
push
retf
lea
push
popa
lodsd
retn
xor
or
mov
jb
mov
xchg
pop
lds
mov
aam
mov
sbb
sahf
iret
inc
jnz
sub
stos
std
add
xchg
inc
pop
cmp
js
pop
mov
mov
mov
cmp
add
cmp
add
retn
icebp
fucomip
test
push
jmp
daa
int
and
sbb
jle
sbb
scasb
mov
jecxz
push
add
adc
int
fmul
inc
aam
cmc
jl
jb
outsb
movsb
loop
fist
into
jmp
jnp
cmp
lodsd
mov
cmpsd
les
push
adc
cmp
or
fsubr
cdq
jnz
jnz
pop
adc
inc
xor
in
sbb
mov
push
add
rcl
test
jmp
and
std
cmc
pop
xchg
push
mov
cmp
retf
xchg
sbb
retf
fld
sar
jecxz
sub
sal
sar
mov
cwde
nop
retn
pop
dec
mov
call
pop
retf
xor
sar
mov
dec
dec
fcomp
sti
retn
retf
daa
sbb
retn
pop
mov
inc
mov
mov
jmp
aas
int
sub
jbe
loopne
jle
xor
jns
dec
out
sub
xor
leave
cmp
mov
or
cwde
mov
out
out
test
inc
or
or
sub
sub
mov
into
stosd
xchg
or
into
stosb
aam
xchg
cdq
test
push
lodsd
cmp
leave
call
jns
jbe
sbb
insb
add
loopne
in
aad
js
cli
int
mov
adc
sal
stosd
cmc
or
cmp
jmp
cmpsb
xlat
mov
pop
fnstenv
dec
clc
fmul
retf
adc
sbb
push
cmp
and
retn
retn
jnz
pop
retn
xor
cwde
cmc
push
int
call
xchg
mov
sbb
xor
mov
cmovge
cwde
dec
pop
icebp
imul
pushf
popf
retn
pop
inc
or
icebp
lahf
inc
xchg
push
cmp
aad
pop
and
push
popa
jo
test
pop
mov
xor
adc
xor
and
push
mov
and
aad
ja
pushf
daa
xchg
adc
mov
pop
loop
mov
xchg
pmaddwd
jns
ror
sub
cmp
mov
adc
aad
pop
fisubr
mov
sti
xor
push
fadd
loope
out
sbb
sub
push
cmc
dec
mov
movsd
outsd
das
in
dec
mov
pop
fmulp
jmp
mov
jp
jmp
lea
nop
push
in
mov
inc
les
push
lea
jbe
inc
jecxz
fild
mov
mov
clc
out
push
inc
das
ja
pop
jmp
pop
or
fsub
int
or
jnp
jp
mov
jbe
cmpsd
and
scasb
cmc
mov
sbb
jns
call
jecxz
push
in
push
inc
out
push
insd
cli
std
cld
jnb
mov
dec
xlat
pushf
loop
jmp
adc
add
xchg
mov
lodsb
sub
retn
sbb
sub
test
or
and
jnb
mov
test
mov
jp
test
jmp
add
scasd
jle
wait
dec
push
and
into
lea
das
xor
dec
sbb
fdivr
cdq
mov
jmp
lodsb
mov
xor
dec
mov
mov
mov
inc
in
xor
add
sub
out
retn
sub
fistp
retn
add
xor
lahf
scasb
mov
in
in
push
stosb
mov
jle
pop
cmc
sub
js
push
outsd
pop
retn
mov
jns
retf
add
imul
call
push
mov
pop
ja
out
xor
lahf
jo
insb
mov
out
xlat
push
jz
pop
fld
nop
xor
int
movsd
and
ror
movzx
aas
aad
out
sar
jmp
jnz
jge
jmp
setnz
mov
or
mov
push
mov
cdq
cwde
xor
stosb
icebp
xchg
enter
cmp
inc
outsb
jbe
movsd
into
adc
cmc
in
dec
movsb
in
movsd
or
push
stosb
fst
mov
test
dec
sub
cwde
enter
mov
lahf
mov
repne
mov
setalc
cmovno
adc
das
div
sti
retf
and
mov
dec
mov
push
js
retf
inc
add
jmp
retf
pop
retn
pop
retn
or
mov
stc
jl
retf
out
loop
ficom
sub
xor
xchg
mov
add
arpl
fiadd
in
mov
int
dec
mov
not
inc
pop
and
movsd
push
mov
in
and
inc
aad
sbb
dec
xchg
push
dec
fistp
inc
adc
pop
inc
pop
popa
ja
and
mov
rcl
xlat
cmovb
movsd
jecxz
scasb
inc
mov
pop
sbb
pop
jmp
mov
call
pushf
pop
mov
sub
pop
inc
sbb
pop
fstp
out
scasd
dec
or
shr
arpl
mov
mov
out
xchg
add
pop
cmpsb
stosb
shr
jg
retn
retn
jmp
xchg
and
add
dec
out
xor
call
xchg
or
int
mov
jnb
dec
imul
dec
inc
sbb
xor
retf
lds
fmul
mov
xchg
dec
push
push
leave
mov
push
fdiv
fcom
pop
aaa
ja
sti
xor
push
cmc
adc
sub
inc
push
jge
ja
and
mov
pusha
add
inc
jnz
cli
push
xor
fisubr
pop
pop
mov
sbb
cli
loope
jz
mov
mov
fmul
iret
push
insd
mov
cmp
mov
cmp
mov
push
popa
mov
push
push
mov
sti
and
retn
adc
fst
leave
dec
std
wait
xchg
cli
mov
jmp
lodsd
mul
retf
adc
retn
mov
cmc
retn
adc
out
push
sub
sub
push
and
inc
push
push
or
in
sbb
cmp
mov
and
push
cmp
retn
fidivr
jecxz
out
insb
lodsd
sub
mov
xchg
jecxz
fnstsw
mov
cld
cdq
jge
push
out
sbb
dec
mov
rep
sbb
int
adc
jmp
cmp
mov
cmp
retf
movsb
fcom
and
retn
fsubr
retf
pop
dec
fcomp
not
retf
fld
neg
xor
mov
out
int
jno
xor
repne
push
xchg
mov
movsb
les
insb
int
enter
in
sbb
or
add
mov
mov
dec
jmp
outsb
cmpsd
dec
mov
add
mov
sar
sbb
retn
insd
nop
xchg
jecxz
retf
jo
out
push
cmp
insb
or
and
in
inc
pushf
push
jo
cld
pushf
out
out
cmp
jo
inc
xor
cmp
cmp
setalc
push
jnz
mov
loop
stosd
pop
adc
cmp
adc
test
nop
inc
fcmovnu
movsb
adc
cmc
das
inc
js
and
out
pop
pop
xchg
pop
out
mov
push
push
push
int
lea
mov
mov
lodsd
push
outsb
jnb
jns
fild
fist
clc
mov
xor
mov
pop
ja
bound
xor
fsubr
ja
dec
movsd
adc
lodsd
adc
lock
jmp
fstp
sbb
and
push
test
cwde
fld
jmp
add
sbb
retn
pop
and
scasb
jmp
sbb
or
loop
pop
loope
lodsb
adc
mov
aad
sbb
add
cmpsd
mov
inc
pop
xor
mov
pop
xlat
push
outsd
daa
int
push
mov
outsd
jno
iret
dec
xchg
xchg
retn
icebp
inc
jmp
loopne
clc
out
jle
mov
add
adc
mov
fisub
xor
iret
sahf
and
pop
mov
inc
xchg
cdq
mov
or
clc
test
pop
dec
les
jmp
push
add
inc
fimul
add
mov
cld
cld
cmp
stosb
movsd
rcl
inc
xor
sti
mov
xor
mov
push
test
cmc
mov
sub
mov
inc
cmp
stosd
retn
retf
jl
and
retn
pop
and
mov
cmp
mov
and
xor
sub
jle
xor
movsd
mov
retn
inc
inc
jp
sub
mov
pusha
push
cmpsb
sub
loopne
call
test
jb
cwde
cmpsb
push
xor
cmp
fld
pop
dec
and
sbb
and
fcom
jmp
rcr
xchg
les
jg
jns
cdq
dec
leave
dec
adc
and
cmpsb
dec
mov
dec
inc
sub
add
pop
movsd
inc
push
xchg
int
rcr
xchg
dec
ror
in
lodsb
leave
xchg
xor
loope
jg
add
leave
fldenv
std
mov
xor
sub
cmp
test
mul
lahf
aad
mov
jz
fadd
fstp
loop
sbb
rep
inc
push
sub
xor
adc
aaa
inc
cmp
mov
adc
or
xor
sti
mov
jnz
test
mov
insb
fstp9
in
les
add
mul
sbb
jnp
outsd
lock
movsd
adc
fnstsw
retn
retf
rcr
sub
or
pop
jb
push
inc
mov
jmp
retf
lahf
mov
aas
retn
jmp
retf
arpl
fxch7
mov
iret
retn
sbb
retn
xor
dec
ja
rol
xchg
sti
inc
sbb
mov
retn
inc
leave
std
dec
xchg
jecxz
sbb
pop
cmp
hlt
pop
xchg
popf
dec
loopne
setalc
nop
jbe
js
mov
push
push
xlat
pop
jle
aam
jecxz
jmp
mov
retn
mov
sbb
pop
add
sahf
push
mov
xchg
mov
xchg
movsb
test
mov
and
jns
cmp
jmp
retn
enter
cmp
push
pop
leave
jp
sbb
mov
das
xor
loop
jmp
sbb
frstor
mov
aaa
xchg
and
jl
sub
or
jecxz
test
sti
jns
xchg
sbb
icebp
retf
cli
wait
das
xchg
and
fst
fisubr
dec
inc
test
daa
mov
mov
fdiv
call
mov
pop
rcr
out
scasb
sbb
and
jp
cmp
cmc
into
lodsd
xlat
aaa
jz
sub
fidivr
pop
rol
xchg
xchg
inc
setalc
mov
in
nop
fld
mov
stc
add
push
sti
xchg
mov
jecxz
mov
sbb
sub
nop
mov
mov
daa
xlat
in
das
and
jmp
outsb
cmpsd
adc
dec
aaa
jg
pop
or
das
mov
xor
insd
dec
mov
adc
xchg
ja
inc
cdq
cmp
cld
add
jg
mov
mov
bound
inc
cwde
int
dec
fimul
repne
retn
retn
retf
retn
push
add
add
add
test
pushf
cmpsd
retf
test
pop
inc
fld
mov
jmp
xchg
stosb
retn
or
retf
jbe
rep
lock
add
enter
les
jz
retn
jnp
or
or
and
pushf
jb
das
pusha
out
and
mov
sub
lodsb
pop
leave
mov
sub
mov
jz
ficom
fcomp
mov
call
push
popa
jmp
retn
stosd
xchg
xor
mov
jmp
jbe
fisubr
jg
call
loopne
aas
sub
cmp
and
dec
add
cdq
adc
loope
loopne
push
in
jnz
mov
mov
adc
cmpsd
and
cmp
adc
xor
mov
inc
add
lahf
retf
retn
sbb
stosd
inc
mov
dec
xor
dec
xlat
push
idiv
inc
pop
lock
sbb
cmp
sub
xchg
clc
popa
jg
test
repne
fcomp
imul
fcomp5
or
pop
retf
lodsb
xor
insb
test
rol
sub
retf
xor
retn
mov
jns
fimul
retf
lodsb
and
pushf
loopne
and
stc
inc
or
repne
pop
loop
fldcw
adc
adc
clc
pushf
repne
jmp
add
lahf
mov
mov
out
inc
jmp
jnz
inc
mov
mov
mov
push
into
setalc
popf
sub
lodsb
test
sal
and
rcr
mul
mov
pop
xor
das
pop
push
rep
add
bound
add
hlt
rol
adc
xor
mov
out
xor
mov
add
in
cld
dec
mov
cwde
cmp
push
mov
mov
or
mov
insb
sub
std
dec
jbe
cwde
push
mov
pushf
fnstsw
mov
scasb
not
mov
xchg
imul
add
mov
xchg
adc
lds
cmp
or
and
movsd
int
loop
mov
xchg
add
and
aam
sahf
mov
sti
aas
in
std
ror
setalc
test
out
sub
and
sbb
xor
iret
fld
retn
mov
sar
retn
sub
fnsave
cmp
mov
lea
scasb
mov
xor
lodsb
stosd
jmp
scasd
xchg
jz
add
jnp
or
sbb
cmp
pop
mov
push
mov
retn
mov
lodsb
xor
call
pop
test
sub
shr
sbb
daa
das
sahf
adc
push
pop
setalc
push
ror
mov
test
imul
mov
leave
mov
add
add
inc
ja
fisttp
ror
into
mov
retn
cmp
test
retf
sub
jmp
sti
dec
call
retn
neg
mov
nop
test
retf
mov
int
mov
inc
mov
cdq
jb
fst
and
push
pop
cmp
and
push
retn
or
mov
dec
mov
xor
sbb
mov
test
pop
xchg
jg
pop
movsd
inc
pop
pop
shr
jnb
cdq
jz
mov
push
xchg
out
sub
popf
inc
rep
sbb
int
in
jz
mov
cmp
cmp
xor
rol
push
pop
shl
cmp
jns
inc
sbb
add
wait
push
inc
out
xchg
pop
or
popf
add
inc
push
adc
rol
xchg
nop
mov
pusha
push
push
or
rcr
or
insb
adc
jmp
retf
add
lodsd
push
stosd
cdq
stosd
add
sbb
mov
rcr
add
sub
scasd
retn
retf
mov
retf
mov
retn
pop
sub
push
sbb
retn
jmp
mov
retn
xor
aas
mov
jl
out
xchg
aam
cmp
dec
xor
fldcw
push
or
mov
icebp
cld
movsb
jl
push
mov
hlt
int
ja
mov
retf
aad
jle
sbb
icebp
mov
push
mov
lock
cmp
test
mov
mov
sub
dec
inc
lahf
mov
scasd
cmc
push
pmaddwd
cdq
pop
movsb
push
scasb
setnle
fstp
lodsb
and
retn
and
and
jecxz
sti
push
add
icebp
adc
clc
fld
retf
add
scasb
adc
fmul
outsb
jecxz
outsb
xchg
and
mov
dec
dec
mov
pop
cmp
dec
adc
adc
out
std
mov
xlat
hlt
out
in
dec
loope
sbb
lahf
mov
enter
push
fistp
pushf
dec
mov
xchg
add
jg
retf
scasb
retn
jb
adc
btr
not
mov
mov
retn
inc
retn
jno
mov
test
and
and
mov
in
xor
add
pop
not
pop
fstp9
push
pushf
mov
mov
out
adc
retn
jnz
push
dec
pushf
sar
xor
push
mov
mov
sub
add
mov
inc
push
push
jnp
lds
test
adc
xchg
push
jl
lahf
push
sub
wait
xchg
outsd
rcl
ror
aad
outsb
test
adc
leave
cmpsb
aam
iret
pop
push
dec
adc
nop
push
inc
mov
fsub
xchg
xchg
push
add
arpl
push
or
out
outsb
jnp
fcompp
inc
in
push
repne
dec
pop
xor
push
jmp
les
imul
ja
or
and
cdq
push
xchg
div
adc
jb
jz
push
fnsave
push
jmp
pop
cmpsb
mov
inc
pop
pop
mov
dec
mov
sbb
int
xchg
rcr
cmp
arpl
push
pop
leave
inc
sub
test
xor
and
sbb
xchg
pop
fcom
pop
stosd
and
test
cmp
or
push
call
sti
push
jl
mov
loopne
test
pop
shr
nop
inc
lea
lds
in
cmp
sub
in
leave
int
test
and
or
add
popa
int
cmp
call
repne
cdq
jmp
xlat
inc
xor
retn
pop
retn
adc
cmp
popf
retn
retn
push
popa
lock
mov
lds
stc
sbb
push
sub
cdq
outsb
or
test
mul
jle
test
out
push
jo
aam
inc
sbb
js
cmp
mov
sub
add
add
pop
push
mov
push
retf
sal
jecxz
in
mov
mov
adc
popa
dec
push
xchg
push
nop
fnstcw
and
jge
lodsb
imul
cmp
add
adc
lock
imul
jns
ror
jb
and
aas
xchg
aam
stosb
insd
imul
xchg
pop
xchg
mov
loope
push
or
aam
jo
add
pop
mov
cmp
push
xchg
div
jbe
inc
mov
jmp
retf
retn
mov
mov
mov
aam
xor
lahf
mov
xor
and
mov
jnb
movsd
and
ror
retf
sahf
sub
lodsb
or
mov
adc
and
and
dec
pop
mov
sbb
int
std
pop
inc
jz
dec
wait
aaa
stosd
cwde
cmp
xor
jmp
adc
sbb
enter
stosd
sub
pop
int
ja
sub
test
retn
std
dec
xlat
sbb
retf
stosb
xchg
inc
nop
xor
cmc
retn
mov
push
mov
push
clc
jmp
not
loope
retn
lds
retf
push
sub
rol
cmp
jmp
cmp
retf
retf
daa
inc
retn
retn
xor
dec
inc
pushf
xchg
mov
inc
sub
mov
aad
mov
mov
retn
retf
retn
imul
mov
mov
retf
rcl
clc
cmp
dec
mov
rol
setalc
xlat
aaa
scasb
xor
push
jmp
jbe
cmp
out
or
dec
popa
mov
xchg
movsd
add
mov
xor
inc
sub
push
sbb
out
xlat
sub
or
mov
retf
stosd
xchg
aad
sbb
retf
xor
retn
cmp
jmp
xchg
xchg
pop
inc
jo
xlat
jge
pop
in
lar
or
jz
mov
lodsb
fdiv
or
jmp
mov
pop
retn
enter
retf
sbb
pop
sub
retn
retf
push
retn
fadd
fidiv
jmp
in
pushf
dec
retf
mov
retn
fild
push
retn
push
aaa
dec
cmc
retn
mov
movsd
push
or
retf
retn
shl
daa
fimul
clc
retn
retf
xor
push
jmp
xchg
dec
xchg
rcl
xor
jmp
mov
daa
inc
jmp
jbe
cmp
js
mov
call
sahf
add
push
or
dec
retf
inc
jnz
inc
setalc
add
or
clc
shl
dec
adc
jp
and
mov
push
inc
sahf
push
and
mov
mov
dec
not
inc
lodsb
and
xor
icebp
inc
xor
xor
cmp
mul
nop
or
popa
clc
or
xor
aas
aaa
adc
lodsd
sbb
jmp
cwde
clc
ror
retf
test
mov
fild
imul
xchg
cmp
sbb
retf
retf
aad
test
jp
and
pop
jle
loope
popa
pop
lodsd
inc
sbb
sti
outsb
out
mov
and
aas
sbb
mov
dec
lock
add
inc
out
clc
push
pop
pop
jle
dec
wait
inc
dec
fsubr
jno
sub
scasd
jl
cmc
mov
dec
in
cwde
lock
sbb
jno
pop
push
arpl
enter
out
aad
mov
in
neg
jmp
cld
mov
push
jmp
mov
mov
dec
retf
xchg
retf
mov
inc
enter
retf
jnb
or
sbb
jle
mov
rcl
mov
test
mov
retn
push
pop
imul
in
lea
retf
pusha
aad
sub
lodsd
cmp
sti
mov
aaa
adc
jmp
retf
mov
fild
retn
sub
pop
shr
jmp
jle
stosd
pop
js
pop
cmp
push
pop
push
sets
push
xor
sub
rcr
fsubr
in
sub
cmpsb
out
jg
pop
cmp
dec
sbb
xor
pop
rcr
cdq
retn
retn
retf
add
stosd
fsub
mov
cmp
push
mov
in
add
mov
mov
icebp
sub
jb
cmpsd
jns
lds
push
push
in
adc
cli
cmp
mov
fcomp
popaw
retf
and
mov
jmp
retf
jnz
mov
jnp
popa
push
insb
push
mov
pop
mov
lodsd
das
cld
jl
sahf
push
jno
or
cmp
mov
insb
inc
fisub
add
xor
bound
outsb
ror
mov
mov
pop
inc
mov
jl
xchg
sbb
into
in
adc
setalc
mov
mov
push
mov
sahf
call
inc
push
mov
jnb
inc
mov
xor
pop
mov
test
adc
jb
xchg
wait
nop
cmp
xchg
aad
call
push
cdq
in
inc
push
and
xor
std
test
stosd
aaa
bound
jnz
paddusb
retf
mov
xchg
mov
test
clc
inc
dec
daa
dec
cwde
mov
dec
dec
pop
hlt
dec
dec
cmp
adc
mov
lds
cmp
rol
push
out
pusha
fxch7
scasb
and
call
sub
adc
pop
xchg
ffreep
adc
pop
pop
pop
mov
push
push
mov
xor
push
mov
retn
pushf
jno
or
punpckldq
mov
sub
xor
ja
pop
imul
xchg
mov
and
pusha
and
retn
pop
test
retf
jnb
xchg
jle
retn
retf
mov
mov
cmp
jl
mov
mov
and
bt
jnb
inc
jmp
inc
cmp
enter
pop
pop
retn
mov
lea
mov
call
mov
xchg
lea
mov
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
out
jmp
jmp
enter
pop
pop
pop
retn
push
mov
xor
push
xor
inc
jnz
mov
call
mov
call
mov
call
mov
pop
adc
add
xor
pop
pop
pop
adc
inc
add
add
scasb
stc
mov
jmp
add
jmp
add
jmp
jmp
add
add
inc
call
leave
inc
add
retf
push
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
jmp
pop
add
jmp
push
inc
add
jmp
jmp
add
add
jnb
add
retn
mov
retn
adc
mov
add
fild
mov
retn
push
mov
push
bound
cmp
jz
mov
pop
pop
xor
call
test
jz
push
cld
test
jz
push
push
call
test
jnz
cmp
jnz
mov
jmp
cmp
jnz
mov
rcr
dec
add
retn
jz
mov
retn
enter
push
mov
push
push
pmovmskb
push
push
call
cmp
pextrw
retn
push
mov
push
dec
inc
or
retf
mov
pop
pop
pop
pop
pop
retn
lea
nop
mov
jmp
mov
mov
test
cmp
stc
inc
pop
retn
xor
pop
retn
enter
mov
pop
retn
inc
inc
pop
xor
retn
pop
push
push
mov
mov
mov
inc
add
mov
jz
add
mov
mov
call
mov
mov
call
mov
mov
call
nop
mov
mov
push
or
add
cli
call
pop
retn
mov
jnz
mov
inc
inc
clc
mov
add
add
mov
mov
cld
call
mov
jmp
mov
add
bound
add
push
mov
push
fstp
cmp
jz
dec
inc
pop
sub
jb
jz
jmp
cmp
jz
mov
and
mov
cmp
sub
nop
mov
add
add
mov
mov
cmp
sub
dec
cld
jmp
mov
pop
push
dec
add
pop
pop
push
mov
cmp
push
push
mov
mov
clc
mov
cmp
jz
mov
mov
call
test
jz
xor
pop
add
pop
mov
pop
retn
push
mov
push
pop
push
mov
mov
xor
dec
inc
or
nop
mov
cmp
sub
mov
test
push
sbb
mov
push
mov
mov
call
mov
pop
hlt
div
jmp
mov
cmp
jnz
mov
push
retf
mov
call
or
pop
nop
mov
pop
pop
pop
pop
retn
nop
mov
add
push
mov
cli
mov
mov
cmc
lock
mov
xor
hlt
cld
call
jmp
xor
mov
call
jmp
dec
inc
cld
mov
mov
call
pop
pop
nop
mov
pop
retn
mov
push
mov
mov
call
mov
mov
and
inc
inc
add
push
cmp
jz
mov
mov
inc
inc
inc
add
push
retn
push
push
sub
adc
jz
mov
call
retn
pop
push
push
mov
mov
inc
inc
sbb
jz
mov
jmp
mov
cmp
jle
mov
jmp
test
jge
xor
sbb
imul
imul
add
jz
mov
sbb
retn
inc
add
or
push
mov
sub
shr
std
add
dec
adc
push
dec
cmp
jz
mov
mov
call
movzx
push
mov
push
dec
out
mov
mov
call
pop
pop
pop
xchg
lea
push
push
mov
pop
push
xor
repne
sbb
ror
loopne
dec
add
shr
add
ror
push
add
add
jnz
xor
dec
inc
xor
retn
push
push
cmp
push
cmp
inc
add
add
inc
add
retf
dec
dec
add
adc
mov
call
retn
mov
mov
xor
retn
push
mov
push
nop
mov
mov
add
cmp
cmc
sbb
push
or
movzx
mov
push
mov
mov
add
mov
add
nop
mov
call
push
call
mov
jle
push
mov
mov
push
mov
mov
sbb
test
fisttp
push
or
mov
call
push
call
or
cmp
jle
add
inc
cmp
push
movzx
lea
mov
nop
mov
mov
call
push
call
mov
cmp
jle
push
mov
mov
nop
mov
movzx
lea
hlt
fisttp
push
mov
mov
call
push
call
push
mov
mov
call
push
mov
mov
sbb
test
fisttp
push
or
mov
call
push
call
pusha
pop
pop
retn
push
mov
and
push
push
push
mov
pop
push
sti
mov
lea
mov
xor
mov
loopne
mov
cmp
or
mov
jge
sbb
jz
mov
mov
mov
call
mov
mov
std
clc
mov
mov
test
xor
mov
adc
inc
ficomp
add
mov
add
call
push
mov
push
lea
push
mov
push
mov
call
push
mov
mov
call
or
mov
mov
call
xor
mov
or
call
add
inc
cld
mov
call
xor
pop
pop
pop
adc
inc
add
jz
inc
in
jnp
nop
mov
cmp
jg
mov
call
mov
or
add
pop
retn
push
mov
cmp
jz
mov
test
jz
mov
call
pop
sbb
ror
add
or
pop
retn
mov
nop
mov
mov
mov
call
pop
retn
dec
inc
cld
mov
retn
pop
pop
retn
dec
inc
cld
dec
retn
retf
push
mov
cmp
mov
mov
dec
inc
clc
mov
mov
xor
push
push
push
mov
mov
cld
mov
pop
push
jo
inc
clc
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
mov
mov
retn
add
jmp
push
mov
xor
push
xor
mov
inc
lock
mov
mov
mov
cld
xor
push
push
push
mov
and
mov
mov
push
adc
rcl
retf
inc
add
and
retf
jmp
mov
push
mov
add
push
sbb
mov
jmp
stc
jmp
add
pop
pop
pop
pop
retn
push
mov
mov
mov
mov
push
push
adc
retn
add
mov
mov
mov
cli
cmp
ror
add
cmp
jz
mov
mov
call
cmp
jz
mov
call
cmp
jnz
mov
fadd
add
retn
push
mov
cmp
call
mov
sti
mov
mov
inc
inc
sbb
jnz
mov
mov
mov
call
adc
rcl
iret
push
mov
mov
adc
retn
push
mov
push
pop
push
push
mov
mov
cmp
jz
xor
push
push
push
mov
push
cld
mov
fadd
pop
pop
pop
pop
enter
push
push
push
mov
xchg
push
mov
push
pop
push
mov
mov
mov
cld
call
xor
push
aaa
xor
mov
xlat
ror
add
cld
xor
mov
mov
xor
xchg
nop
jo
xor
push
push
dec
add
mov
cld
mov
fcmovnbe
mov
call
mov
cmp
jz
mov
cmp
jle
mov
test
jz
mov
mov
mov
clc
or
cmp
xor
mov
mov
push
mov
mov
push
mov
jnz
push
xchg
add
push
call
aad
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
add
add
sub
mov
mov
push
push
mov
test
push
call
mov
mov
add
add
cwde
dec
lahf
sti
dec
retn
push
mov
cmp
push
push
push
mov
mov
jnz
push
mov
fdiv
jmp
pop
push
mov
cmp
jnz
mov
mov
push
pop
mov
mov
mov
cmp
jz
xor
pop
pop
retn
mov
pusha
pop
retn
fdiv
jmp
add
pop
pop
pop
pop
retn
push
mov
push
xor
push
push
push
mov
xor
cmp
jnz
mov
call
pop
pop
xchg
lea
push
mov
push
pop
push
mov
mov
mov
dec
inc
or
iret
push
mov
xor
push
push
push
mov
mov
cld
mov
mov
cmp
jg
jz
add
sub
jb
sub
jz
dec
jz
jmp
sub
jz
dec
jz
jmp
jmp
mov
and
jz
mov
mov
jmp
jmp
sti
jmp
add
retn
cmp
imul
xor
mov
mov
call
push
xor
mov
mov
call
push
xor
cmp
inc
cld
pop
push
jp
jmp
xor
add
jp
jmp
push
mov
mov
mov
nop
mov
mov
mov
add
mov
mov
mov
push
mov
mov
cld
mov
nop
mov
mov
mov
add
add
mov
stc
dec
jmp
push
mov
push
dec
inc
cld
mov
cmp
jnz
mov
cld
mov
xor
push
push
push
mov
mov
cld
cmp
jz
dec
inc
cld
mov
test
pop
adc
mov
xor
inc
cld
mov
push
jmp
mov
mov
cld
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
dec
loop
add
inc
add
bound
nop
push
push
mov
mov
mov
cmp
jz
mov
pop
pop
retn
cmp
jz
mov
mov
sub
jz
sub
jz
xor
jmp
mov
mov
call
dec
inc
sbb
jnz
mov
mov
retn
pop
push
push
add
mov
inc
cmp
movsd
movsd
movsd
movsd
mov
mov
add
retn
dec
inc
mov
adc
pop
retn
cmp
add
add
jnz
mov
dec
jnz
xor
pop
pop
pop
retn
pop
push
push
push
push
mov
mov
xor
mov
push
mov
call
push
mov
add
clc
mov
call
mov
mov
xor
fcmovnbe
mov
call
cmp
jnz
mov
dec
inc
dec
jnz
mov
adc
cmp
add
jl
inc
xor
mov
mov
call
call
inc
dec
jnz
mov
inc
inc
pop
mov
call
dec
inc
add
jmp
mov
xor
retn
retn
add
lea
push
push
mov
cmc
lock
jb
cmp
jnz
xor
jnz
push
add
add
test
jnz
mov
call
mov
mov
cmp
jz
cmp
jnz
cmp
jnz
mov
call
mov
mov
call
test
or
mov
call
cmp
jnz
mov
retf
pop
enter
push
push
push
push
in
call
push
mov
xor
push
push
push
xor
mov
lock
mov
xor
insd
push
jmp
dec
add
add
or
add
jnz
test
jz
mov
call
test
jz
mov
mov
call
mov
enter
mov
push
dec
inc
cmp
jz
mov
call
test
jz
add
xchg
mov
push
call
jmp
cmp
jz
mov
mov
and
sldt
mov
call
xor
pop
pop
imul
xchg
lea
call
retn
mov
retn
cmp
setnz
retn
push
mov
mov
mov
pop
pop
retn
and
add
adc
add
push
inc
add
add
jmp
clc
xor
add
add
add
mov
nop
mov
add
dec
xor
inc
dec
push
mov
mov
mov
mov
call
inc
or
mov
dec
dec
jnz
add
pop
arpl
retn
jmp
or
jnz
or
mov
sub
jz
sub
jnz
mov
add
add
jmp
mov
add
sub
jnb
mov
lea
mov
call
mov
and
mov
mov
or
jnb
cmp
jnz
test
sbb
jz
or
add
retn
jns
pop
or
mov
push
add
or
jmp
xchg
add
or
mov
test
jz
or
test
or
or
test
jz
or
inc
add
jnz
mov
mov
pop
arpl
retn
push
mov
adc
push
push
into
leave
mov
fstp
xor
push
push
push
mov
sar
cmpxchg
inc
sbb
jnz
mov
mov
test
or
add
xchg
dec
inc
mov
call
mov
mov
mov
call
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
mov
mov
inc
inc
sbb
div
lea
sub
push
mov
push
push
push
push
mov
mov
cmp
jnz
cmp
adc
mov
mov
jmp
xor
mov
mov
mov
mov
std
clc
or
mov
std
clc
or
mov
fcom
call
mov
mov
mov
xor
call
int
mov
stc
inc
or
mov
mov
mov
mov
call
std
clc
or
mov
aam
xor
call
jmp
mov
inc
inc
push
and
test
add
mov
or
pop
push
cld
mov
xor
push
aaa
xor
mov
mov
cmp
jz
test
jz
call
mov
mov
xor
mov
mov
mov
call
test
jnz
call
jmp
mov
mov
mov
call
mov
call
test
or
js
stc
dec
add
add
jnz
mov
mov
cmp
jz
jmp
retn
mov
sti
div
mov
dec
inc
cld
mov
not
and
dec
inc
cld
mov
retn
mov
pop
pop
pop
bound
add
retn
jmp
not
and
mov
jmp
add
pop
retn
add
call
jmp
mov
mov
or
add
pusha
pop
retn
push
mov
push
dec
inc
cld
mov
mov
push
push
lock
mov
mov
call
mov
mul
sbb
jnz
push
call
pop
pop
pop
retn
push
mov
push
push
push
push
mov
xor
insd
push
jmp
cmpsb
mov
call
jmp
xor
pop
pop
pop
mov
fdivp
inc
add
dec
stc
inc
jmp
cmpsb
mov
call
jmp
add
mov
and
cmp
jz
cmp
jnz
dec
inc
sbb
jnz
cmp
jz
mov
mov
call
pop
enter
push
push
mov
fstp
mov
dec
jz
in
call
ja
in
call
push
call
test
jz
mov
add
nop
mov
call
in
call
test
push
or
sub
add
jmp
mov
mov
mov
mov
push
push
lock
pop
retn
jz
mov
mov
mov
retn
pop
pop
retn
push
mov
push
fstp
xor
test
jz
dec
inc
or
nop
mov
mov
mov
or
jbe
inc
inc
or
or
mov
call
pop
pop
xchg
lea
push
push
mov
loopne
cmp
jnz
cmp
jz
mov
jmp
retn
mov
pop
pop
xchg
lea
push
mov
push
fstp
cmp
jnz
mov
mov
mov
jmp
pop
add
mov
mov
call
pop
pop
retn
jmp
cmp
jnz
mov
mov
call
xor
pop
pop
pop
pusha
pop
mov
pop
retn
push
mov
push
nop
mov
mov
mov
add
sub
cdq
xor
sub
pop
push
or
pop
add
add
sub
cmp
pop
pop
pop
retn
push
push
mov
dec
inc
sbb
jnz
mov
retn
mov
xor
retn
and
pop
pop
retn
test
push
call
test
shufps
xchg
and
add
leave
jmp
push
xor
inc
inc
or
add
retn
push
mov
cmp
push
push
push
xor
mov
clc
mov
xor
push
inc
or
push
retf
inc
cld
sub
sar
jns
adc
mov
call
mov
sub
sar
jns
adc
loopne
jge
xor
test
pop
add
ror
push
mov
mov
push
mov
mov
mov
mov
call
mov
cmp
mov
inc
in
inc
inc
mov
push
call
push
mov
call
push
call
jmp
push
push
push
mov
mov
mov
push
call
jmp
add
stc
jmp
xor
pop
pop
pop
mov
sub
inc
add
hlt
add
add
out
jmp
pop
pop
pop
pop
pop
pop
retn
retn
retf
mov
call
retn
push
mov
push
nop
mov
cmp
jz
cmp
jz
mov
mov
mov
dec
add
call
dec
inc
cld
xor
push
push
push
mov
push
cld
mov
push
or
rcr
mov
push
mov
call
retn
add
and
pop
pusha
pop
retn
push
mov
cmp
push
push
push
mov
xor
call
retn
push
mov
push
push
mov
xor
push
push
push
and
add
add
cmp
nop
mov
mov
call
push
mov
and
push
push
xor
mov
mov
xor
push
push
push
and
jmp
mov
mov
mov
mov
mov
xor
and
xchg
cli
jmp
jmp
cmpsb
mov
call
jmp
mov
call
mov
mov
cmp
jle
mov
call
mov
std
clc
or
mov
fcmovnbe
mov
mov
cli
cmpsb
mov
xor
push
push
js
jge
add
inc
in
call
mov
mov
mov
and
retn
push
mov
push
pop
push
push
mov
mov
cmp
push
push
mov
call
mov
dec
test
jl
inc
xor
mov
mov
call
mov
dec
inc
push
xor
add
retn
retn
les
stc
inc
sal
or
retn
call
pop
push
dec
jnz
pop
pop
pop
pop
enter
push
mov
push
pop
push
mov
test
pop
push
cmp
jz
mov
mov
pop
pop
bound
nop
cmp
adc
or
call
retn
push
mov
push
nop
mov
test
jz
mov
mov
enter
xor
jmp
mov
pop
pop
pop
xchg
lea
push
mov
push
pop
push
push
mov
mov
cmp
bound
inc
cld
call
mov
dec
test
jl
inc
xor
mov
mov
call
mov
cmp
jz
mov
push
mov
call
pop
test
jnz
mov
sbb
call
test
jz
mov
call
pop
test
jz
mov
jmp
inc
dec
jnz
xor
pop
pop
pop
retn
push
mov
push
nop
mov
test
jz
mov
mov
enter
xor
jmp
mov
pop
pop
pop
xchg
lea
push
mov
push
pop
push
push
mov
mov
cmp
bound
inc
cld
call
mov
dec
test
jl
inc
xor
mov
mov
call
mov
cmp
jz
mov
push
mov
call
pop
test
jnz
mov
sbb
call
test
jz
mov
call
pop
test
jz
mov
jmp
inc
dec
jnz
xor
pop
pop
pop
retn
push
mov
push
nop
mov
mov
mov
lock
add
push
or
fstp
xor
mov
mov
mov
call
mov
mov
test
inc
jmp
inc
dec
jnz
xor
pop
pop
pop
retn
add
cld
test
add
add
xchg
pop
add
add
xor
inc
cld
mov
test
jz
cmp
push
clc
enter
out
push
dec
inc
call
ror
xor
jmp
mov
dec
inc
test
push
mov
push
pop
push
mov
mov
bound
cmp
jz
push
push
mov
push
mov
dec
push
push
push
test
and
add
test
retn
loope
nop
mov
push
enter
cwde
sbb
jmp
jmp
pop
pop
retn
push
mov
push
pop
push
test
jz
add
call
mov
mov
push
xor
mov
loopne
add
xor
mov
call
mov
mov
call
mov
mov
call
mov
mov
fcom
int
dec
add
xor
add
add
mov
pop
pop
bound
nop
push
mov
cmp
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
dec
jnz
mov
call
mov
inc
lea
xor
call
mov
call
push
mov
hlt
call
mov
call
mov
call
test
jle
mov
mov
mov
sub
jz
or
jnz
mov
dec
dec
inc
dec
jnz
mov
retf
push
mov
cmp
push
push
push
mov
cmp
movsd
mov
mov
call
test
dec
inc
or
xchg
add
pop
pop
pop
pop
retn
pop
push
mov
mov
mov
enter
xchg
push
and
jnz
cmp
jnz
mov
pop
pop
retn
mov
call
mov
cmp
jnz
mov
int
mov
mov
jmp
adc
mov
nop
mov
push
push
push
mov
push
push
push
mov
mov
push
lock
mov
adc
jz
sub
jnz
mov
mov
mov
call
jnb
mov
call
mov
inc
lea
xlat
shr
jge
stc
dec
das
stc
call
inc
cld
call
aad
mov
pop
call
mov
call
test
jle
mov
mov
mov
sbb
sub
jz
out
jmp
jnz
mov
mov
call
mov
mov
mov
mov
mov
mov
enter
inc
jz
pop
push
pop
stc
jmp
add
mov
pop
pop
pop
retn
