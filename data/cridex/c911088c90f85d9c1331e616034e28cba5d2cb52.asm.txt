or
pop
inc
mov
cld
leave
jmp
rol
xor
fcom
push
pop
retn
fcmovb
push
aam
fimul
xor
mov
add
pop
sub
xchg
and
stosb
and
push
or
jb
dec
js
and
dec
lds
test
push
pushf
and
jnb
fcomp
mov
sar
jl
dec
jg
idiv
les
jmp
or
cdq
pop
jmp
mov
retn
sbb
push
movsd
dec
and
mov
jmp
lock
cmc
lahf
push
cmp
add
rcl
push
out
mov
adc
mov
add
jmp
push
xlat
dec
mov
out
int
jz
rcr
in
js
mov
insb
xor
push
mov
push
or
sub
sub
adc
wait
jb
inc
mov
add
cmp
xor
aas
sahf
fcom
and
test
movsb
stosd
fadd
jbe
mov
push
retn
cmp
add
popa
add
push
push
jnz
mov
adc
sbb
xor
les
jecxz
push
add
add
fsubr
imul
and
stc
lea
push
push
jp
js
mov
dec
neg
sbb
push
jmp
les
or
imul
mov
cld
movsb
rcl
lea
jle
iret
or
add
sbb
jge
push
call
jnz
sbb
lodsb
fdivr
mov
out
sbb
mov
movsd
lodsb
aam
sub
adc
neg
push
jmp
cmp
push
xchg
push
jmp
imul
fidiv
sbb
or
sbb
mov
jz
or
sub
push
aam
cmpsd
sub
adc
test
aas
mov
mul
inc
jecxz
cmpsd
sbb
mov
les
dec
shrd
adc
add
lahf
pop
jns
pushf
fadd
inc
in
inc
adc
pop
ja
str
sub
push
inc
jns
pushf
sbb
mov
or
push
mov
mov
mov
rep
lahf
fadd
loop
pop
hlt
push
add
inc
lahf
or
enter
sub
mov
pop
nop
mov
mov
fadd
in
daa
lahf
js
fisubr
repne
mov
or
rep
rep
cmp
dec
push
pop
mov
dec
loopne
dec
lahf
shl
int
inc
mov
mov
add
jmp
jz
sub
pop
jmp
or
jg
call
or
loopne
sbb
inc
inc
movsd
pop
stosb
xor
out
pop
jno
push
add
inc
nop
call
rcl
cmp
jz
lodsd
mov
sbb
fisttp
and
jle
add
icebp
jz
cmp
int
or
mov
and
stosd
pop
inc
mov
inc
add
cld
enter
push
push
jg
cwde
adc
div
push
fadd
cmp
popa
iret
fcom
jnz
push
fcomp
retf
cmp
dec
mov
shl
xchg
or
xor
xor
call
adc
push
imul
push
add
add
inc
lock
cmp
pop
xor
dec
mov
sbb
jl
inc
int
cmp
jmp
aaa
mov
int
jmp
lodsb
jmp
fimul
mov
test
push
icebp
sbb
inc
jl
mov
fmul
jnz
pop
mov
das
xchg
retf
add
xchg
push
imul
retf
adc
retn
jz
retn
mul
sub
adc
adc
and
sbb
xor
das
pop
ja
out
pop
cld
iret
sbb
mov
jmp
jmp
pusha
mov
lea
push
jmp
mov
inc
mov
inc
add
jnz
mov
sub
adc
jb
mov
add
jnz
mov
sub
adc
adc
add
jnb
jnz
mov
sub
adc
jb
dec
add
jnz
mov
sub
adc
adc
jmp
add
jnz
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
jz
sar
mov
jmp
add
jnz
mov
sub
adc
jb
inc
add
jnz
mov
sub
adc
jb
add
jnz
mov
sub
adc
adc
add
jnb
jnz
mov
sub
adc
jnb
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jnz
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jnz
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
jz
mov
lea
add
push
add
call
xchg
mov
inc
or
jz
mov
push
dec
repne
push
call
or
jz
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jnz
sub
jmp
