retf
or
xlat
add
or
and
add
mov
add
movsd
mov
or
fbstp
add
mov
add
cmp
scasd
add
fild
add
retn
or
lodsb
sti
retn
aad
aam
retf
mov
adc
inc
mov
push
sbb
cmp
leave
retf
mov
sbb
retn
or
or
svts
push
and
retn
test
mov
and
sti
dec
and
jns
xchg
cld
das
lds
retf
push
pop
jnb
dec
out
cmpsd
mov
jns
add
lock
or
mov
adc
jnz
jle
out
pop
and
das
insd
aad
sbb
mov
out
mov
mov
mov
imul
sbb
dec
in
lahf
and
test
cmp
hlt
in
xor
loope
das
test
pop
cmp
sub
test
div
fsub
pop
insd
pop
pop
aaa
inc
insd
cwde
mov
outsb
cld
jmp
fnstsw
mov
cmp
sbb
les
sbb
enter
retf
ror
add
retn
push
retf
adc
xor
add
xor
mov
adc
xor
int
xor
xor
retf
cld
aas
or
sbb
or
sbb
or
cld
fimul
retn
xchg
add
mov
jmp
mov
jmp
or
sub
push
std
inc
retn
retn
retf
push
inc
cld
mov
push
jmp
sti
adc
pop
push
add
jns
adc
jb
jmp
cli
out
aas
add
xchg
mov
in
jnb
add
and
jo
mov
fstp
adc
add
setalc
add
test
leave
jnb
jb
mov
add
retn
push
ror
shl
push
rol
retn
fild
add
pop
pop
retn
add
retn
adc
mov
retf
pop
cwde
mov
adc
xor
or
jmp
sbb
fcomp5
jmp
adc
retf
or
retn
sal
retf
sbb
xor
mov
pusha
retn
retf
retn
xor
inc
clc
aam
sti
inc
inc
push
sti
adc
icebp
retn
mov
xlat
add
jmp
retf
fdiv
dec
and
jo
imul
aam
xchg
pop
push
inc
or
retn
pop
push
jz
js
jz
insb
dec
dec
jle
add
std
mov
mov
add
test
jnz
iret
push
les
or
aas
cdq
dec
retn
mov
ja
pop
mov
fisttp
fld
push
push
mov
inc
sbb
push
jmp
add
add
clc
test
mov
inc
cmc
in
ror
mov
mov
test
lds
xlat
add
or
sbb
std
and
aaa
sbb
push
stosb
jnb
push
mov
clc
popf
out
clc
aas
add
jg
idiv
and
sub
jle
jmp
mov
xor
push
retn
test
test
icebp
stc
jz
loope
push
push
outsb
cmp
in
cmp
or
cld
dec
add
add
in
mov
call
jb
jmp
inc
add
aad
jnz
clc
pop
jmp
or
mov
pop
cmp
and
retn
jns
cmovo
retf
mov
retf
sar
cld
pop
and
retn
pop
mov
jb
xchg
pop
retn
xlat
add
retn
xlat
add
call
iret
test
add
jmp
inc
sbb
cld
and
adc
inc
xchg
push
cmc
push
nop
push
movsd
push
retn
cmp
jl
daa
imul
icebp
xchg
retf
lodsd
mov
jmp
and
jmp
push
push
jmp
fistp
push
jmp
adc
mov
add
and
lahf
mov
retn
cmp
push
stc
mov
dec
add
inc
cwde
inc
retf
xchg
xor
mov
add
lea
jmp
clc
push
cmp
add
cwde
enter
arpl
sal
retn
add
sahf
push
dec
push
inc
and
and
and
push
rcl
sbb
retn
xor
xchg
retf
cmp
cld
retf
mov
stc
aad
and
mov
retn
pop
jp
cmp
dec
pushf
leave
cmp
test
sbb
dec
add
push
sub
movsd
adc
std
inc
stc
mov
rcl
and
adc
push
or
add
retn
retn
retf
wait
xchg
mov
or
add
adc
idiv
retn
add
imul
jb
retf
add
or
jns
add
test
mov
add
retf
pop
cld
lea
in
push
stc
inc
fnstsw
clc
jg
fistp
scasd
cmp
mov
sub
pop
and
adc
mov
lodsd
pop
xchg
mov
sub
or
movsb
fiadd
add
retn
jz
add
std
pop
or
arpl
retn
retf
and
retn
pop
enter
jmp
mov
cmp
push
xchg
test
mov
cmpsb
xchg
dec
mov
xchg
xchg
cld
retn
mov
xchg
adc
popf
aam
adc
or
jnp
mov
jns
cmp
pop
jno
retn
cld
test
mov
mov
mov
retn
aaa
ror
dec
aam
inc
jz
mov
pop
add
pop
retn
add
xchg
xchg
xchg
cdq
xchg
adc
dec
sub
push
push
cmp
int
jg
or
mov
movsd
stosb
inc
add
jge
add
jl
sbb
jp
add
add
lea
shl
int
dec
imul
jbe
add
pop
xor
aas
pop
rol
push
retn
mov
clc
dec
xchg
mov
aam
mov
or
or
sbb
wait
retf
add
cmc
and
and
sbb
retf
or
shl
cmp
pop
sbb
retn
retf
retn
jp
retf
aas
mov
idiv
push
add
jmp
dec
adc
retf
das
xchg
jge
and
stc
adc
dec
enter
into
mov
rol
jp
inc
pop
sub
push
add
jb
push
retf
dec
sahf
mov
sbb
xor
sub
jle
retn
repne
xchg
xchg
mov
retn
jnp
mov
add
jecxz
xchg
add
jmp
jmp
test
xchg
sub
sbb
adc
and
out
dec
sbb
add
hlt
cli
icebp
cmp
ror
jo
adc
setalc
shl
inc
sbb
adc
adc
clc
out
jp
test
mov
test
xchg
fidiv
inc
int
xor
jp
mov
retn
cld
adc
out
aas
jmp
adc
jmp
daa
pushf
pusha
inc
or
push
sub
retn
jle
dec
in
push
fdivr
mov
aas
add
mov
sub
jmp
retn
push
cld
push
mov
push
xor
div
mov
adc
xor
jmp
push
jmp
retn
rol
push
retn
enter
adc
pop
retn
retn
mov
mov
or
xchg
rol
retn
cdq
add
add
cmp
cmp
retn
retf
imul
push
fdivr
pop
icebp
pop
jmp
mov
jnp
xchg
jle
out
jg
sti
push
adc
cmc
adc
jnp
pop
xor
loopne
in
fimul
js
or
lock
pushf
mov
shr
js
inc
or
mov
dec
inc
aas
jge
fistp
mov
xchg
mov
jecxz
fmul
pop
shr
rcl
add
add
imul
add
bound
aaa
xchg
svldt
jo
fstp
dec
add
or
std
rol
add
inc
jnz
adc
push
cmc
and
push
jmp
retn
inc
retn
mov
pop
jl
adc
retn
aam
jz
cmp
push
call
push
adc
mov
retn
push
cmp
mov
stosd
cmpsb
or
mov
push
mov
sbb
retf
mov
push
add
test
xor
mov
jbe
xchg
sub
imul
adc
add
add
or
push
aas
jnp
push
inc
dec
cmp
mov
enter
dec
out
adc
push
mov
dec
mov
adc
test
cli
fst
retn
cmp
add
jnb
adc
jmp
retn
pop
retf
inc
retf
pop
cmp
mov
or
add
clc
xor
adc
aaa
jmp
adc
arpl
mov
and
retn
fld
adc
sbb
clc
rcl
mov
or
fidiv
jecxz
sbb
ficomp
retf
or
jmp
mov
jz
fsubr
test
inc
cmc
not
pop
xchg
adc
insd
imul
clc
retn
xchg
retn
rcl
push
shl
push
retn
add
mov
add
jmp
retn
cmp
adc
and
add
mov
sub
cmpsd
sub
retn
add
retn
or
retn
pusha
mov
cmc
jmp
inc
and
xor
or
add
add
jnp
adc
jmp
loop
in
lodsd
cld
jmp
mov
imul
popa
cdq
mov
stosb
sub
call
fiadd
adc
cwde
retn
sbb
retn
pop
mov
push
push
dec
and
retn
sub
push
jmp
pop
aad
cli
retn
mov
sar
setalc
fndisi
add
retn
mov
cmc
jmp
mov
add
mov
or
or
fnstenv
xchg
jbe
add
push
mov
stosb
mov
js
cmpsd
jno
pop
retf
and
adc
fidivr
or
std
jl
loopne
or
jb
jl
cmpsb
jnz
dec
jnb
add
cmp
pop
push
pop
test
or
add
add
sub
mov
xchg
add
pop
fstp
fdiv
retf
push
retf
mov
dec
retf
stosd
mov
retf
mov
cli
retn
enter
sal
or
jz
dec
sbb
mov
push
inc
or
xlat
cld
movups
xchg
sbb
jo
adc
add
cwde
retn
icebp
push
les
insd
mov
cmp
jno
aam
sbb
mov
xlat
fist
mov
retn
xor
daa
or
mov
retf
push
stc
retf
push
add
jmp
sub
mov
pop
jb
push
test
adc
or
dec
rep
mov
aaa
inc
retf
sub
dec
inc
cld
dec
sbb
jnz
rcl
aaa
and
pop
div
bound
push
bound
cmp
sbb
pop
sti
clc
push
test
hlt
or
mov
stc
jmp
and
add
aam
stc
jmp
jmp
out
adc
jz
and
xchg
mov
ror
test
push
dec
lock
and
push
xor
xchg
stc
jmp
retf
or
mov
jmp
sbb
or
add
cld
shl
test
stosd
mov
std
call
aad
clc
mov
push
stc
jmp
push
std
mov
push
std
jmp
xor
idiv
or
cmpsb
sub
jnp
retf
dec
test
push
std
ror
add
or
jno
sbb
or
pop
std
inc
push
push
sar
leave
jp
adc
cli
cmp
mov
inc
adc
sub
cmp
retn
add
and
mov
sub
retf
or
das
pop
clc
retn
call
jz
mov
sbb
retf
cmp
or
pusha
idiv
sti
fstp
and
jmp
icebp
add
mov
push
sbb
jmp
push
sbb
jecxz
sbb
fist
sbb
fild
sbb
xlat
push
sbb
rcl
sbb
iret
push
sbb
retf
push
sbb
mov
sbb
mov
push
sbb
mov
sbb
mov
sbb
mov
std
retn
retf
rsqrtps
retn
cli
add
cld
xor
jmp
push
retf
retn
retf
push
jp
and
bound
rcr
sti
das
pop
sbb
sub
xor
add
add
and
ja
retf
adc
cdq
add
retf
fcom
sub
push
xchg
call
add
fnsave
jp
sub
iret
retn
or
add
xor
add
add
add
add
jmp
or
add
add
jmp
sub
sub
push
sub
pop
cld
jmp
jmp
pop
mov
cmp
mov
xchg
rcl
adc
push
mov
retn
push
clc
dec
jmp
mov
mov
int
sal
retf
xchg
cli
inc
retn
lds
sti
mov
nop
aas
jnb
mov
shl
dec
sbb
pop
jnz
mov
xchg
or
mov
test
pop
mov
test
xor
add
mov
aas
test
mov
retf
or
or
jmp
pop
mov
mov
test
mov
int
leave
inc
retf
push
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
retn
push
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
cmp
jnb
mov
jmp
jmp
mov
mov
pop
retn
push
mov
mov
pop
retn
push
mov
mov
pop
retn
push
mov
mov
mov
pop
retn
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
mov
movzx
sar
cmp
jnz
mov
mov
mov
movzx
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
retn
push
mov
sub
mov
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
cmp
jnz
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmp
jz
cmp
jnz
mov
jmp
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
retn
push
mov
sub
mov
cmp
jz
mov
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
retn
push
mov
sub
mov
lea
push
push
push
push
push
call
test
jz
xor
jmp
lea
push
push
push
push
push
call
test
jz
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jnz
xor
jmp
call
mov
pop
retn
push
mov
sub
pusha
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
movzx
cmp
jz
xor
jmp
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
push
xor
retn
mov
pop
retn
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
