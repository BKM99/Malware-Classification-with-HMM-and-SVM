add
jmp
mov
push
mov
add
shr
and
mov
push
pop
and
mov
xor
sub
and
add
sub
or
and
mov
call
lea
sub
and
lea
sub
imul
lea
mov
lea
push
push
call
sub
pop
pop
leave
retn
push
mov
and
push
pop
add
mov
lea
push
mov
push
call
and
mov
add
mov
xor
push
mov
mov
push
call
sub
imul
add
lea
sub
sub
lea
call
int
push
mov
sub
lea
mov
and
mov
add
lea
and
lea
sub
xor
mov
push
push
call
add
cmp
ja
mov
mov
sub
mov
mov
push
call
xor
leave
retn
mov
mov
mov
xor
mov
mov
mov
jg
sub
mov
add
sub
mov
imul
add
mov
pop
sub
jbe
not
sar
mov
mov
add
and
jnb
inc
mov
mov
mov
add
not
add
lea
dec
xchg
jnb
xor
sub
add
mov
add
mov
mov
and
shr
lea
add
add
sub
jz
xchg
mov
push
push
call
add
push
mov
sub
or
pop
leave
retn
or
jnb
add
or
mov
lea
jbe
xor
mov
inc
lodsd
jnb
lea
add
mov
or
jg
sbb
mov
mov
jbe
and
add
mov
add
jnb
inc
sub
lea
add
mov
jg
sbb
inc
sub
mov
and
or
and
xor
and
sub
xor
cmp
jnz
jg
lea
mov
mov
mov
xchg
jbe
lea
sbb
sub
or
mov
jbe
sub
and
ror
sub
add
and
cmp
jnz
mov
add
lea
mov
push
pop
jbe
sbb
lea
push
sub
push
add
and
push
sbb
not
push
jnb
mov
mov
jnb
add
neg
push
add
inc
mov
add
neg
mov
xor
call
not
sbb
mov
xor
sub
sbb
lea
lea
mov
mov
add
lea
push
or
mov
jnb
mov
add
xor
pop
sub
mov
xchg
sub
add
xchg
and
sub
jnz
