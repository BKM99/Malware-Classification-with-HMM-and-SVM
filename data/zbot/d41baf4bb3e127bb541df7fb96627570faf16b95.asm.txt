jmp
push
mov
add
mov
imul
push
pop
or
add
sub
and
mov
add
sub
call
xchg
xor
lea
sub
shr
sub
lea
mov
call
mov
pop
pop
leave
retn
push
mov
push
mov
push
pop
and
mov
push
lea
push
call
lea
lea
or
pop
push
call
mov
pop
add
mov
and
push
push
call
int
push
mov
sub
add
and
push
pop
sub
mov
push
mov
lea
mov
mov
push
push
call
add
cmp
ja
push
pop
add
shr
add
lea
push
call
xor
leave
retn
add
sbb
and
lea
jg
or
mov
sub
add
pop
push
mov
sub
add
mov
mov
ror
or
inc
add
jnb
mov
sub
add
and
sub
add
mov
xchg
sar
and
not
mov
sub
and
mov
lea
shr
lea
sub
shl
sub
jz
mov
mov
push
push
call
push
sub
lea
pop
leave
retn
or
add
mov
mov
mov
mov
add
or
mov
add
lodsd
jbe
lea
lea
mov
jbe
add
mov
mov
mov
mov
mov
mov
add
add
jbe
not
add
lea
mov
add
mov
or
inc
sub
mov
mov
and
neg
add
sub
shl
cmp
jnz
sub
xchg
xor
add
sub
inc
mov
lea
and
neg
sub
push
pop
xor
cmp
jnz
jnb
or
not
xor
mov
push
pop
xor
push
xor
lea
push
add
sbb
neg
push
sar
lea
push
jg
mov
jnb
mov
mov
lea
push
xor
inc
sub
mov
xor
and
call
and
mov
jbe
add
add
mov
lea
mov
add
add
push
mov
mov
sar
xor
pop
jnb
sbb
neg
xchg
sub
mov
add
xchg
lea
sub
jnz
nop
sar
adc
cmpxchg
jno
mov
test
adc
inc
push
sub
loop
daa
add
and
daa
