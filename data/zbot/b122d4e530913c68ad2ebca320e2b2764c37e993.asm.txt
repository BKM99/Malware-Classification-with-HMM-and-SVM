sbb
cmp
xor
add
xor
jmp
retf
push
fld
mov
fld
cmp
fld
dec
xor
add
fld
imul
fld
popa
xchg
fld
movsd
jnb
add
mov
rcr
retf
retf
inc
retf
rcr
retf
retf
retf
or
leave
push
push
sub
retf
retf
imul
cdq
jo
retn
mov
inc
sbb
fisub
mov
and
cmc
out
sbb
mov
add
and
wait
or
adc
sti
push
sahf
dec
add
pop
inc
jnb
xchg
das
js
jmp
inc
pop
push
les
dec
add
enter
jnz
cli
adc
mov
outsb
or
sahf
or
cwde
xchg
retn
retn
retn
mov
retf
fist
les
cdq
inc
sub
pop
sbb
retf
inc
lodsb
retn
aam
add
test
add
les
add
inc
fiadd
or
sbb
sub
or
sbb
lodsd
inc
fiadd
retf
xlat
sbb
lodsb
inc
fiadd
retf
test
add
les
add
fadd
or
sbb
cmp
or
sbb
cmp
or
sbb
popf
inc
fadd
retf
mov
add
neg
add
fadd
retf
les
add
sbb
add
mov
call
mov
jmp
mov
call
inc
add
mov
jmp
retf
retf
and
inc
punpckldq
mov
fld
mov
sbb
mov
or
add
cld
sbb
test
dec
int
sbb
ja
fld
dec
mov
fld
or
sbb
test
mov
fdivr
or
add
cld
sbb
sub
jle
retf
jle
mov
mov
retn
xor
or
mov
adc
sub
add
retf
mov
retf
mov
and
dec
retf
add
jp
retf
wait
pop
mov
adc
stosb
bound
pop
push
xor
pushf
push
and
pushf
adc
wait
push
sub
jnb
bound
xor
push
jecxz
bound
fcmove
shr
push
inc
stosb
bound
int
out
xor
dec
cdq
add
cmp
add
sub
add
pop
fst
add
mov
add
ficom
add
inc
add
fidiv
add
mov
add
add
add
fiadd
add
mov
add
fimul
add
mov
add
mov
add
fiadd
add
retn
mov
fimul
retf
xchg
mov
enter
mov
retf
rol
jb
add
les
mov
retn
inc
add
retn
inc
sbb
jz
imul
insb
xchg
bound
out
and
push
pop
imul
fld
scasb
xchg
mov
cmpsb
and
movsb
inc
mov
jno
popa
fld
scasb
and
mov
test
mov
jl
fld
cmp
jg
mov
in
rcr
add
mov
mov
add
or
insd
add
xlat
insd
add
xlat
push
add
fsubr
cmpsd
xlat
insd
add
jno
pop
aad
add
xlat
pop
add
fdiv
sbb
stosb
jmp
loop
imul
add
mov
fiadd
pusha
fild
jmp
mov
into
pop
jnp
fst
mov
out
jmp
and
ficomp
daa
retn
aam
mov
retf
retn
cmpsb
mov
mov
retf
jmp
adc
add
mov
adc
int
mov
std
push
jmp
mov
mov
jnb
inc
jge
push
fld
mov
jb
xor
adc
add
push
mov
cmp
ja
dec
mov
dec
sal
adc
xor
inc
cmp
stosd
pushf
dec
jmp
sub
cwde
cmp
cli
test
push
adc
les
xchg
push
sbb
add
sbb
pop
pop
retf
retf
aad
add
cdq
pushf
mov
wait
jp
retf
scasd
pop
adc
aam
or
mov
push
mov
jmp
inc
mov
sub
les
mov
leave
retf
popf
xchg
add
test
mov
retn
and
std
jz
retf
and
add
loopne
dec
pop
or
mov
test
lock
lock
retn
cmp
and
pop
retn
pusha
or
xor
xchg
cmp
sbb
jmp
rsqrtps
stc
mov
pop
xchg
add
fldenv
push
cmp
sahf
mov
push
pop
and
les
jg
pop
pop
dec
sar
sbb
jmp
jmp
retn
das
aaa
mov
jmp
push
nop
aaa
push
retn
mov
push
inc
jo
sbb
retn
fistp
retf
or
retn
pop
retn
xlat
adc
push
xchg
adc
and
mov
retn
add
jmp
xor
or
mov
lss
sbb
bound
aam
rep
and
pop
sub
xchg
sti
inc
cmp
clc
jz
fnstcw
jle
mov
adc
jnb
test
fsub
jl
sbb
in
setalc
sub
lodsd
insb
aad
out
fst
sbb
test
inc
out
out
mov
in
dec
daa
jmp
retf
mov
std
sub
inc
jle
jnb
cmp
add
mov
xlat
pop
retn
push
ja
dec
mov
adc
dec
adc
sar
std
jz
mov
jno
std
jo
push
setalc
xor
sti
fcomi
fsub
retn
sub
or
xchg
and
add
sub
retn
retf
stc
xchg
sti
push
add
inc
imul
shl
push
inc
imul
cmp
retn
or
scasb
imul
or
std
retn
push
sbb
retf
and
and
or
xor
cmp
jbe
jmp
jz
in
in
jz
cmp
jmp
pop
lea
push
mov
mov
add
ficom
jmp
adc
lods
daa
xchg
retf
aad
jmp
xor
add
inc
icebp
pop
xor
sub
sar
or
dec
dec
mov
adc
shr
and
xchg
mov
lodsb
adc
or
mov
xchg
dec
jz
insd
dec
adc
retf
and
pop
retf
pop
stosb
add
pushf
retn
daa
cmp
add
lahf
sub
inc
mov
fadd
lea
adc
jmp
dec
retn
paddusw
add
das
leave
pop
push
or
nop
pop
and
or
add
sti
mov
lea
fiadd
retf
adc
scasd
mov
or
inc
mov
cmp
cmc
fsubr
retn
dec
and
loop
adc
and
jnz
enter
dec
rcl
add
js
mov
inc
push
push
push
or
xor
bound
xchg
cmp
push
retf
cmp
jge
or
rol
push
std
mov
xchg
and
lea
cmp
lea
popa
add
jmp
adc
retf
xor
or
mov
pop
mov
retn
retf
retf
xlat
test
mov
sti
jnz
push
retf
jo
xor
and
jmp
xchg
mov
fst
retn
retf
xchg
scasb
add
jmp
sub
retn
push
retn
mov
sub
inc
imul
add
retf
or
fsub
popa
pop
sar
jmp
push
int
push
add
inc
jnp
sal
and
sub
adc
retn
cmp
add
retn
push
retn
cmp
add
fsub
mov
pop
dec
mov
aas
xor
and
sysret
xchg
mov
mov
xchg
mov
push
push
cli
pop
rol
add
wait
test
inc
dec
xor
pushf
mov
push
mov
fmul
stc
or
jmp
jo
sub
xor
mov
lodsb
dec
mov
push
dec
setalc
retf
or
mov
push
and
nop
cli
fadd
lea
adc
sti
js
jmp
mov
retn
inc
aam
add
or
rcr
jmp
mov
xchg
and
and
retn
inc
and
cmp
retf
pop
sub
daa
sbb
and
jmp
mov
cli
retf
mov
or
add
and
retn
mov
xchg
mov
icebp
inc
sbb
mov
mov
add
or
jmp
dec
xchg
sbb
or
retn
lds
or
cwde
jmp
add
pop
cdq
or
fld
jmp
retf
rcr
add
inc
popa
enter
add
retn
neg
cmp
rcl
jmp
xor
sar
retn
retf
adc
inc
retn
xchg
jmp
sub
cmp
retn
xlat
mov
add
test
retn
jecxz
pop
jmp
jecxz
inc
mov
stc
push
dec
leave
fldl2t
mov
adc
pop
ja
or
or
jmp
xchg
ja
cld
xchg
or
retn
jecxz
jmp
popa
push
inc
icebp
mov
adc
lahf
aad
jge
mov
adc
icebp
imul
or
sub
call
mov
jmp
retf
mov
dec
or
xor
add
xlat
and
cmc
xchg
pop
or
xlat
mov
pusha
retn
sti
lea
mov
or
test
cld
imul
xlat
jb
lodsb
mov
jmp
push
cmp
pop
cmpsb
imul
jmp
stosd
pop
dec
daa
and
jmp
cdq
pop
lodsd
mov
fnstsw
xor
sbb
push
sub
pop
popf
retn
pop
push
adc
mov
mov
retn
or
or
lea
jmp
lea
inc
or
or
test
sub
fadd
dec
pop
stc
sbb
inc
and
nop
and
xor
push
les
add
adc
push
mov
dec
pop
and
push
retn
mov
xchg
aad
adc
retn
pop
dec
retn
pop
push
retf
push
push
add
push
retf
sbb
jmp
daa
pop
mov
and
lodsb
mov
cmpsd
mov
or
xchg
push
adc
jmp
jle
mov
pop
cmp
jmp
lodsb
sbb
push
pop
cld
lds
and
jl
inc
cld
retf
xlat
mov
fistp
aaa
popf
lea
inc
inc
pushf
xor
mov
dec
add
jp
jp
iret
paddusw
adc
mov
rol
retn
push
fadd
mov
retf
retf
popa
retf
retf
scasd
jmp
sbb
inc
pop
and
mov
sbb
xchg
retn
pop
cmp
pop
ja
pminub
xchg
xchg
or
pop
dec
dec
adc
aad
fsubr
push
out
push
dec
ror
cmp
sbb
mov
adc
inc
pop
and
add
mov
push
aaa
lds
push
pop
lds
aas
add
xchg
pop
adc
add
cmp
cmp
add
pop
push
fimul
setalc
wait
mov
cmp
xor
inc
sbb
sahf
cld
jmp
retn
retf
cmp
retf
mov
lds
jmp
adc
pop
and
movsb
mov
retf
jle
psubsw
cld
fsubr
inc
retf
test
mov
fld
adc
or
pop
dec
div
adc
and
push
retf
inc
add
bound
call
inc
fldcw
imul
or
add
cdq
sub
xlat
retn
fnsave
and
xor
add
lds
mov
jmp
cmp
mov
popf
xor
push
xor
push
inc
or
jo
call
enter
inc
dec
adc
retf
mov
sub
and
cmp
retn
mov
pop
sub
in
lds
loope
popf
lock
adc
mov
push
lodsb
or
and
fld
adc
cmc
xor
lods
leave
add
mov
jmp
fimul
xchg
int
idiv
jmp
fcmovne
add
dec
or
retn
pop
retn
mov
add
sbb
mov
retf
inc
xor
jmp
retf
push
sbb
cwde
xor
fdiv
and
pop
mov
add
ror
not
or
sar
adc
retf
push
daa
aaa
mov
xchg
retn
mov
popa
cli
add
sub
dec
scasb
push
pop
add
push
retn
mov
sal
inc
clc
mov
mov
xor
xchg
retf
mov
adc
mul
retf
pusha
pop
retf
setalc
adc
jmp
stc
retf
jnp
mov
pop
dec
sub
or
retn
mov
add
clc
mov
push
push
in
bound
bound
add
ja
adc
stosd
adc
sti
outsd
or
inc
bound
jl
repne
and
add
and
retn
cmp
cmp
xchg
int
push
push
and
cmpsb
xchg
test
pop
cmp
xor
nop
ror
pop
mov
jl
daa
and
cdq
daa
cmpsd
push
xchg
sub
xchg
outsb
daa
jle
outsb
aaa
inc
loope
pop
mov
fst
push
mov
jle
sbb
wait
jmp
stosd
retf
sti
pusha
jz
jnz
adc
mov
mov
retn
pusha
add
sbb
jmp
xchg
xor
arpl
mov
adc
inc
jo
xor
jmp
fisub
add
and
xchg
lahf
push
inc
fldcw
jmp
jmp
retf
inc
xor
push
xchg
mov
inc
fld
push
xchg
sti
popf
dec
xor
mov
dec
and
mov
mov
stc
pop
pop
xor
retf
sti
pop
jge
test
pop
xchg
retf
pop
inc
mov
inc
cmp
aas
pusha
mov
adc
push
xchg
mov
retf
mov
test
inc
pop
mov
push
cmp
mov
push
inc
and
pop
jge
xchg
fld
call
rol
rcl
pop
dec
fld
inc
retn
retf
pop
cdq
add
or
dec
fmul
scasd
mov
add
fprem1
mov
cmp
or
aad
inc
retf
xlat
mov
jmp
or
dec
xchg
cmp
or
mov
add
push
xchg
push
jle
retf
and
or
fmul
push
mov
jl
fsubp
adc
jmp
inc
rol
insb
popa
or
or
dec
mov
retn
retf
jns
retn
mov
mov
mov
xchg
cmpsd
xchg
daa
jmp
xchg
xor
pop
and
or
out
inc
mov
xchg
fadd
popa
jle
arpl
sbb
lds
leave
pop
test
pusha
pop
or
out
hlt
xor
shl
jg
mov
and
mov
dec
fiadd
jmp
lea
add
test
adc
xor
dec
retn
cmp
test
xchg
sbb
jmp
add
or
mov
test
jmp
bound
lodsd
stc
popf
mov
and
cdq
loopne
lea
xchg
fist
jmp
popa
pop
leave
adc
ja
push
xor
in
jmp
retf
call
lea
retf
mov
push
cvttps2pi
jz
or
dec
jnz
call
jmp
push
retn
or
xlat
jns
aas
popf
xor
jno
push
xchg
jmp
popa
or
sub
jg
pop
inc
jmp
dec
mov
rol
and
add
repne
out
xor
std
mov
jle
mov
jbe
jecxz
fidiv
push
push
xor
mov
out
xchg
insd
pop
adc
push
mov
out
js
sbb
icebp
loop
xchg
leave
jns
push
mov
or
jnb
hlt
jbe
nop
retn
push
retn
lodsd
dec
retf
xchg
push
retf
retn
retn
or
cwde
xor
inc
cdq
mov
push
retf
imul
movsd
test
jmp
fild
jmp
std
xchg
sub
mov
inc
lds
inc
mov
fmulp
retn
adc
jmp
jmp
cmc
pop
std
add
fimul
jmp
sub
pop
dec
test
push
pop
not
mov
retf
xor
retf
pop
daa
retn
lodsb
mov
cmc
scasd
std
push
adc
cli
sub
adc
std
test
scasb
add
inc
dec
or
mov
jl
xor
add
or
inc
aas
or
push
pop
sbb
xchg
xor
aas
xchg
jmp
xor
cmp
jo
adc
sbb
mov
pop
and
cmp
sub
jmp
test
or
das
xchg
jmp
cmc
adc
push
pop
retn
xchg
adc
adc
mov
add
add
push
sbb
dec
neg
push
mov
les
sbb
jmp
retf
stosd
aam
add
retf
xchg
add
xchg
mov
test
jmp
retn
retf
jmp
mov
pop
pop
add
pop
add
jmp
cld
fisttp
sub
icebp
add
xchg
mov
xchg
stc
cmp
cmp
jecxz
sbb
add
sbb
repne
or
or
add
out
cmp
adc
push
cmp
xchg
fadd
mov
mov
pop
push
cmp
cmp
scasb
retn
pop
mov
fild
movq
mov
mov
inc
or
jns
sub
push
js
fucomp
retn
jmp
mov
fistp
inc
in
pop
arpl
daa
push
retf
shl
inc
retn
retn
retn
retn
mov
scasb
imul
cmc
retf
mov
push
pop
daa
retn
and
idiv
mov
dec
movd
cmc
jmp
xor
icebp
cld
push
jp
test
bound
retf
xchg
aam
dec
lodsb
adc
mov
jnz
inc
xor
add
jmp
xor
aam
or
push
cmpsd
mov
retf
push
jo
cli
outsd
mov
retf
add
mov
pop
clc
pusha
mov
retf
retf
retn
retf
jb
dec
and
xor
jmp
dec
and
xor
jmp
retf
push
mov
sbb
dec
jmp
pop
mov
mov
dec
cli
cmpsd
add
jmp
add
scasd
fld
sbb
push
and
xor
add
pop
inc
shl
test
push
jmp
mov
push
inc
mov
adc
and
mov
fild
sysenter
jo
add
wait
add
retf
fistp
jmp
wait
push
or
sub
jmp
scasb
sub
adc
mov
test
fistp
nop
dec
out
jmp
inc
push
inc
lds
lds
sbb
push
retf
add
sbb
adc
inc
xchg
retn
lahf
dec
inc
and
add
das
push
push
mov
inc
retn
scasb
std
add
scasb
sbb
sbb
setalc
retf
and
mov
mov
retf
cmp
sal
retf
jle
out
call
add
fstp
retn
stosb
dec
xor
fxch7
cmpsd
pop
push
retn
retf
sal
add
jbe
sti
jmp
das
mov
in
fimul
jnb
xchg
push
mov
test
sahf
outsb
jnz
and
jno
call
jb
out
inc
mov
sub
xchg
aad
xor
inc
pop
fldcw
pop
sub
int
add
mov
arpl
mov
fsubr
add
and
adc
mov
xor
add
fstp9
pushf
push
adc
aam
pop
mov
or
add
test
mov
jmp
stc
xchg
mov
lds
cmp
dec
scasw
sub
pop
cmc
aaa
mov
repne
mov
jb
pop
mov
mov
stc
insd
adc
and
mov
icebp
fcom
pop
xchg
jnz
pop
imul
pushf
outsb
add
fld
or
and
loope
rol
jnb
daa
and
lahf
adc
int
or
jns
xchg
cld
and
adc
mov
setalc
sub
and
call
aad
fnstenv
jno
cld
retn
jmp
sub
pop
push
stosb
out
pop
mov
add
popa
fld
aam
ja
mov
mov
xor
and
outsb
or
or
fst
cwde
jmp
retf
lahf
cwde
jg
or
cld
mov
pop
push
stc
adc
jmp
push
or
aam
inc
cdq
ror
jno
add
sbb
inc
pop
retf
and
cwde
pop
add
xlat
jnb
fldenv
push
stosd
jno
cli
pop
and
cmp
xor
inc
bound
daa
or
popf
push
jno
mov
sbb
retn
inc
mov
and
jno
mov
fldl2t
imul
jg
jmp
jo
fcom
fiadd
loop
insd
fsubp
and
mov
lea
mov
fincstp
sbb
inc
repne
in
push
pop
jecxz
cld
or
idiv
add
insb
jecxz
div
sub
clc
aam
fiadd
out
cmc
cmp
pop
mov
pop
loop
test
or
aam
fld
loop
outsb
shr
sbb
jz
cmp
sahf
xchg
div
xor
clc
add
add
pop
sti
retn
retf
pop
cld
retf
jmp
jmp
retf
jg
jz
dec
adc
or
retf
xlat
mov
daa
stc
adc
push
in
sbb
mov
in
dec
sbb
into
pop
inc
and
and
or
cmp
retf
or
add
cli
clc
sti
fadd
rcl
sbb
or
add
sbb
jz
push
retn
and
inc
cmp
retn
mov
cmp
pop
sub
inc
add
and
retn
pop
sub
xor
fprem1
retn
cli
retn
dec
retf
sbb
wait
sar
mov
jmp
out
in
lea
xchg
push
test
pop
push
retn
cwde
adc
imul
xchg
pop
pop
xchg
cmp
push
mov
aas
pop
sub
int
retf
jl
xchg
retn
push
out
or
jmp
push
pop
lahf
push
jbe
movsb
adc
cmps
loope
jmp
mov
pop
retn
lodsb
dec
mov
retn
adc
or
mov
dec
pop
jns
mov
pop
aam
xchg
push
sti
jmp
fldcw
iret
jmp
adc
pop
jmp
add
lock
and
mov
std
or
mov
sbb
rol
pop
mov
add
pop
mov
pop
jnb
out
test
add
fsubr
add
shr
jecxz
mov
jmp
in
in
loope
rep
add
xlat
pop
rcr
add
loop
cld
call
loop
add
retf
loop
wait
iret
pop
int
push
jecxz
or
dec
in
loop
add
loop
insb
pop
xor
jmp
inc
pop
jnp
std
push
add
cmp
add
retn
popa
clc
jz
push
rol
inc
dec
push
in
popa
cli
jz
pop
fldenv
sbb
push
fbstp
mov
retf
retf
xchg
or
add
test
add
or
shl
or
add
or
add
or
add
dec
or
retf
jmp
mov
aad
jmp
and
jb
dec
pop
add
pop
xchg
xor
pop
cmp
adc
dec
or
cmp
rep
lodsd
mov
mov
mov
fidivr
cli
in
mov
cld
in
fldpi
jmp
pushf
ja
inc
retf
leave
dec
cmp
add
add
std
loopne
mov
dec
fidiv
leave
cmp
clc
and
add
std
loopne
mov
leave
or
xchg
clc
cmc
inc
rol
or
loopne
mov
push
out
shl
rep
clc
movsd
cmps
shl
cmpsb
jo
mov
insb
push
add
pop
movsd
or
cwde
dec
add
into
mov
jmp
test
lodsd
pop
pop
sal
retn
dec
retf
mov
wait
add
mov
retf
mov
jge
pop
pop
jmp
push
cmp
xchg
inc
dec
std
xlat
mov
dec
mov
mov
aas
or
xor
mov
clc
loope
add
popf
test
cld
cwde
dec
sub
div
svts
lea
inc
xchg
mov
sub
clc
loope
add
sub
dec
pusha
mov
lodsb
jmp
inc
wait
xchg
call
jmp
retf
xor
cld
test
inc
or
push
icebp
or
retn
and
xlat
mov
mov
xlat
mov
inc
dec
retf
retf
retn
push
push
scasd
push
retf
popf
retn
popa
retn
sbb
retf
retf
push
jno
mov
push
adc
mov
sbb
xor
scasd
push
mov
or
xchg
pop
xchg
adc
jmp
xchg
add
sti
popa
or
dec
adc
dec
fcmovne
pop
popf
pop
jg
push
fiadd
pop
sar
retn
imul
fmul
and
mov
fldl2t
add
push
add
dec
fbld
imul
retf
and
jz
cmp
shr
stc
clc
push
pop
retn
loop
clc
inc
nop
out
jmp
retf
dec
out
inc
jnz
setalc
std
cmpsd
add
jo
xchg
mov
adc
or
mov
sub
pop
or
fiadd
not
jo
or
rcr
inc
pop
fsub
fcom
add
jnz
dec
setalc
popf
in
xlat
mov
retf
sbb
mov
retf
retn
add
pop
mov
retf
retn
mov
sub
xor
add
cmp
daa
cmp
sbb
jp
movsb
mov
jmp
fdiv
sub
inc
and
xor
rep
mov
mov
and
loopne
add
or
retn
xchg
cli
or
xor
pcmpeqb
or
repne
retf
xchg
adc
jmp
mov
dec
inc
inc
jmp
sahf
xor
inc
mov
clc
sbb
xor
jmp
mov
fsubr
retf
retf
retf
mov
push
retn
retf
scasb
jecxz
jnz
add
retn
dec
jo
push
bound
out
in
pop
fcom
inc
sbb
dec
setalc
retn
leave
pop
cmc
jmp
or
cli
call
cli
jmp
xchg
sbb
cmc
jmp
cmc
dec
fadd
add
fadd
sub
add
cmp
add
sub
add
wait
aad
sub
add
adc
cmc
jmp
imul
inc
retf
neg
adc
inc
std
and
fsub
adc
jmp
jmp
xor
pop
mov
sbb
mov
retf
stosb
retf
dec
mov
cmp
sbb
js
jo
dec
mov
dec
jle
jz
sub
retn
add
mov
pop
jb
popf
push
jb
lodsb
push
sub
js
add
mov
loope
dec
retn
add
jg
lock
jbe
icebp
test
imul
pop
dec
jb
pusha
inc
inc
jmp
adc
pop
retn
jmp
jmp
retf
das
retf
pop
retf
sub
shr
cmps
retn
mov
sub
pop
push
add
xchg
add
std
jmp
retn
pop
stosd
retn
adc
mov
mov
push
push
pop
movsb
lodsb
push
retn
retn
movsd
xchg
adc
retf
pushf
setalc
xlat
cmp
retn
inc
pushf
retn
push
add
clc
jecxz
push
clc
mov
xor
jmp
retf
mov
retf
cmpsd
push
push
scas
push
pop
pop
sysret
pop
pop
idiv
retf
dec
push
cmp
retf
fcomp
jmp
push
mov
pop
retn
push
mov
pop
retn
push
mov
call
mov
push
call
add
mov
pop
retn
push
mov
push
mov
mov
add
mov
mov
pop
retn
push
mov
mov
mov
add
mov
pop
retn
push
mov
mov
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzx
mov
mov
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jnb
mov
mov
jmp
jmp
mov
mov
mov
pop
retn
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
retn
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
shr
mov
mov
mov
mov
pop
retn
push
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
pop
retn
push
mov
call
mov
push
call
add
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
push
push
call
cmp
jnz
xor
jmp
mov
sub
mov
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
retn
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
call
test
jnz
push
call
xor
jmp
lea
push
push
push
mov
push
push
call
test
jz
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
mov
mov
add
retn
xor
pop
pop
pop
mov
pop
retn
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
retn
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
mov
jmp
mov
cmp
jnz
mov
sub
push
mov
push
mov
push
call
add
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
push
push
call
cmp
jnz
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
sar
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
retn
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
