or
aaa
xor
int
pop
loopne
ja
or
fld
mov
nop
jnp
or
mov
push
test
dec
or
sbb
jz
mov
dec
adc
jb
mov
icebp
insb
add
push
in
xor
mov
xor
ror
jz
enter
push
or
mov
mov
retf
arpl
push
mov
sbb
inc
xchg
push
lea
mov
cmp
ja
nop
test
jp
and
dec
add
add
push
jg
sub
mov
call
mov
add
out
out
stc
add
sahf
add
cmp
imul
mov
outsb
inc
sahf
insb
mov
lodsd
retn
dec
dec
rcr
loopne
dec
retf
dec
mov
cwde
and
xor
retf
retf
mov
fdiv
lodsb
cmp
pusha
call
xchg
out
and
nop
sbb
in
jns
sub
cmp
push
sahf
xchg
dec
insb
rcr
loopne
outsb
retf
cwde
and
xor
mov
mov
jnz
repne
cmp
pusha
jbe
jo
clc
sahf
xchg
out
cmp
nop
sbb
in
jns
sub
cmp
sahf
xchg
dec
jge
pop
jle
push
jns
js
add
iret
and
retf
mov
xchg
repne
cmp
pusha
xchg
jo
clc
sahf
xchg
out
or
mov
sub
sahf
xchg
dec
mov
pop
add
iret
pusha
mov
lea
mov
push
or
jmp
mov
inc
mov
inc
add
jnz
mov
sub
adc
jb
mov
add
jnz
mov
sub
adc
adc
add
jnb
jnz
mov
sub
adc
jb
dec
add
jnz
mov
sub
adc
adc
jmp
add
jnz
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
jz
sar
mov
jmp
add
jnz
mov
sub
adc
jb
inc
add
jnz
mov
sub
adc
jb
add
jnz
mov
sub
adc
adc
add
jnb
jnz
mov
sub
adc
jnb
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jnz
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jnz
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
jz
mov
lea
add
push
add
call
xchg
mov
inc
or
jz
mov
push
dec
repne
push
call
or
jz
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jnz
sub
jmp
