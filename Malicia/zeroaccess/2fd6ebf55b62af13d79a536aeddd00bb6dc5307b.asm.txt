push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
sub
mov
sub
mov
xor
mov
add
mov
sbb
mov
push
movzx
sbb
mov
push
mov
xor
push
or
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
mov
mov
mov
or
mov
mov
sub
xor
add
mov
sbb
mov
mov
mov
xor
xor
add
jmp
cmp
aaa
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
jmp
mov
xor
xor
neg
jmp
add
mov
mov
xor
sbb
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
xor
sbb
add
dec
mov
lea
mov
movzx
and
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
jmp
mov
jmp
mov
mov
xor
add
mov
mov
mov
xor
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
jz
lea
push
mov
xor
add
jmp
push
mov
add
jmp
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
push
sal
push
stosd
rol
clc
push
retn
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmpsd
xchg
mov
mov
mov
mov
mov
test
jmp
or
mov
jnz
mov
xor
add
jmp
or
retf
icebp
jecxz
icebp
loop
mov
mov
stosb
or
jle
push
retf
xor
cmp
popa
js
add
out
out
xchg
fbld
or
in
jg
lock
mov
jmp
cmpsd
or
mov
mul
push
cdq
hlt
xor
or
jp
retf
xchg
sub
push
dec
add
mov
xor
int
jns
xlat
pop
mov
shl
stosd
out
fisttp
clc
xor
retf
push
enter
mov
mov
or
clc
shr
push
sbb
daa
retn
mov
xor
inc
aam
mov
pop
and
wait
push
sbb
dec
sbb
cld
sbb
pop
push
rcr
or
sbb
push
mov
fcmovnu
pop
xchg
fisttp
into
xchg
stosd
jnb
jo
mov
xor
adc
call
loopne
or
loop
lodsb
wait
pushf
xor
inc
cmpsb
push
lahf
inc
xor
insd
insd
scasb
shl
jo
dec
inc
dec
pop
sal
mov
enter
jge
clc
xchg
add
les
out
xchg
sub
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
cdq
adc
mov
cli
jg
jle
call
out
jno
hlt
or
add
rol
fld
aad
push
in
and
xchg
stosb
sbb
adc
mov
inc
adc
add
and
in
rep
loope
cmp
hlt
xor
lahf
dec
pop
outsd
scasd
jb
mov
setalc
retf
jle
mov
sub
and
jb
cli
dec
cmpsb
cmp
sub
sub
jp
hlt
mov
rcl
jbe
insb
fstp
jecxz
out
or
inc
jbe
mov
jp
push
out
adc
retf
inc
call
xchg
xchg
sahf
cmp
ror
push
pusha
push
icebp
popf
retf
jno
cmc
inc
add
mov
retf
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
jmp
jmp
push
ror
test
jle
jg
jle
jecxz
lahf
cmc
mov
scas
ja
js
xor
push
bound
mov
pop
int
test
xchg
mov
movsd
pop
dec
jl
mov
mov
or
dec
add
or
mov
dec
mov
out
push
retf
mov
mov
or
mov
mov
sbb
push
dec
jge
mov
fnsave
add
xchg
xchg
add
xor
outsb
cmc
dec
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
push
pop
jmp
call
mov
mov
add
pop
jmp
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
push
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
not
mov
xor
mov
sbb
mov
mov
add
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
dec
mov
xor
mov
mov
sub
imul
mov
add
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbb
xor
add
not
mov
not
mov
mov
mov
adc
mov
adc
mov
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
jmp
mov
sbb
mov
sbb
xor
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
mov
sub
add
mov
cmp
mov
jz
mov
push
jmp
xor
mov
sub
mov
sub
xor
mov
xor
xor
mov
add
cmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
neg
xor
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jb
add
add
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
sub
cmp
mov
jbe
mov
mov
jmp
aaa
or
mov
sub
xor
xchg
push
jz
jle
pop
jl
jle
and
inc
xchg
adc
jl
and
imul
scasb
sbb
pusha
wait
outsd
daa
wait
nop
pop
stosb
shl
add
cli
jle
pop
add
rcl
inc
retf
cmp
pusha
fcmove
sub
inc
test
rol
cmp
fstp
call
movsb
cmc
and
jb
or
out
sal
and
mov
adc
stc
xor
js
cld
rol
iret
jle
and
mov
jnz
stosd
dec
jp
enter
pop
jg
aad
jnb
pushf
jmp
jno
retf
sbb
or
cmp
das
fidivr
mov
push
adc
push
mov
pop
das
jbe
call
and
adc
xchg
pop
insb
jecxz
inc
cmp
adc
mov
or
inc
adc
call
inc
test
inc
jno
out
xchg
xor
jmp
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
jmp
test
fst
sbb
jl
jle
push
sub
mov
neg
cmpsb
movsd
mov
fstp
clc
xor
out
xchg
adc
adc
ror
mov
mov
sbb
add
push
retf
fyl2x
inc
adc
jz
and
insb
rep
cmp
outsd
mov
insd
mov
and
inc
xchg
retf
and
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
imul
mov
xor
sub
lea
jmp
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
and
mov
xor
xor
not
add
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
jz
mov
xor
xor
xor
lea
xor
cmp
jnz
mov
jmp
add
mov
xor
add
mov
mov
mov
mov
jmp
xor
neg
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
jmp
call
jmp
mov
leave
retn
push
mov
sub
push
call
mov
cmp
jnz
push
call
mov
cmp
mov
jnz
mov
mov
lea
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
movzx
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
sub
xor
adc
push
mov
add
mov
mov
mov
cmp
mov
mov
jz
or
mov
sbb
xor
add
sbb
imul
mov
mov
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
add
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbb
xor
adc
add
cmp
mov
jnz
sub
push
or
push
push
call
mov
mov
and
mov
mov
mov
or
mov
sub
mov
sub
mov
and
mov
dec
mov
mov
adc
xor
add
jmp
not
mov
xor
lea
push
mov
xor
lea
push
adc
mov
xor
push
call
mov
add
xor
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
retn
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
or
mov
sbb
mov
mov
jmp
xor
mov
sbb
add
add
mov
movzx
sbb
jmp
not
and
and
mov
mov
jmp
xor
mov
jmp
push
call
test
jmp
jz
leave
retn
push
mov
sub
and
mov
mov
or
jmp
mov
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
push
lea
mov
mov
jmp
push
sub
push
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
neg
jmp
xor
adc
mov
mov
xor
add
xor
and
add
neg
add
inc
div
mov
mov
mov
mov
cmp
jz
mov
mov
and
lea
xor
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
aad
jno
xor
das
sbb
pop
jmp
xchg
pop
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
adc
mov
mov
movzx
or
mov
or
mov
mov
or
push
xor
xor
sub
push
mov
sub
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
neg
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
add
mov
add
lea
not
mov
mov
mov
and
mov
and
xor
add
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
mov
dec
mov
jmp
lea
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
inc
mov
or
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
mov
adc
mov
sbb
jmp
mov
xor
mov
adc
movzx
xor
add
not
mov
mov
or
mov
xor
add
cmp
jnz
dec
mov
mov
xor
add
cmp
jmp
stosb
adc
inc
jno
stosd
icebp
jl
and
push
jl
jle
mov
jg
dec
retf
push
insb
push
outsd
jp
dec
inc
popa
inc
nop
hlt
xlat
js
adc
repne
rcl
jnp
pop
scasd
in
into
xchg
test
sub
jns
jns
scasb
shr
enter
add
sahf
xor
mov
jbe
out
mov
push
jz
mov
mov
lodsd
jb
test
std
fyl2xp1
inc
ja
cmpsd
pop
xor
cmp
popa
rep
cmp
or
ja
adc
scasd
and
lds
retf
adc
or
test
xchg
leave
push
test
add
sbb
add
push
jnz
rcl
push
lock
das
mov
mov
xor
dec
aaa
inc
adc
test
push
pop
add
hlt
xchg
fxch
push
mov
sbb
ficomp
cmc
pop
mov
test
push
pop
pop
aam
setalc
or
mov
lea
jno
sal
fdivr
fcompp
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
add
xor
sub
jmp
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
jmp
call
jmp
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
mov
add
mov
xor
xor
xor
mov
push
sub
mov
add
xor
mov
add
or
mov
mov
sub
mov
jmp
shr
stosd
fadd
cwde
pushf
dec
retf
push
push
sbb
jmp
test
mov
jz
mov
mov
sub
mov
mov
or
jmp
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
or
mov
jmp
mov
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
or
add
mov
mov
mov
mov
jz
mov
xor
sbb
add
mov
jmp
jnb
test
pusha
cmp
pushf
mov
jle
jl
jle
mov
test
call
pop
jo
xchg
mov
jge
inc
push
cdq
mov
inc
stosd
inc
fsubr
retn
xchg
xchg
pusha
wait
jmp
cmp
jnp
mov
pushf
xchg
popa
or
and
xchg
pop
xor
clc
rcr
and
mov
pop
pop
push
jbe
inc
mov
mov
mov
sbb
push
xchg
dec
mov
xor
mov
mov
cdq
dec
std
retn
dec
sahf
movsd
and
jecxz
mov
cld
pop
int
inc
mov
aas
aad
outsd
stosd
sbb
dec
jbe
jg
retf
rep
loopne
cdq
sbb
aad
lds
das
cmp
push
frstor
sbb
inc
mov
mov
pop
idiv
jnp
push
pop
push
cmc
jns
or
repne
jp
add
adc
mov
rol
adc
dec
cmp
mov
rep
pop
cwde
cmp
jl
out
and
test
mov
dec
test
or
mov
bound
leave
pop
mov
xor
jle
pop
jb
popf
loop
repne
mov
lahf
insb
sbb
fiadd
movsd
adc
xchg
cmp
mov
jnz
adc
push
add
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
add
add
mov
cmp
mov
jz
add
push
xor
push
dec
call
movzx
sub
jmp
mov
mov
xor
mov
xor
adc
add
mov
jmp
dec
retn
xchg
push
nop
push
dec
retn
mov
cmp
jz
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
adc
jmp
mov
or
mov
mov
mov
not
add
movzx
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
jmp
mov
mov
add
jmp
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
push
push
call
mov
mov
xor
add
cmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
jmp
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
jmp
and
xchg
dec
mov
imul
sub
mov
jmp
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
jmp
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
mov
mov
xor
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int
xor
jmp
sub
xchg
jmp
dec
mov
imul
add
xchg
jmp
push
xor
mov
dec
jmp
mov
pusha
xchg
xchg
push
push
pop
daa
sbb
std
xor
dec
jo
pminsw
dec
sal
hlt
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
not
push
mov
mov
mov
mov
push
mov
mov
mov
mov
push
not
mov
not
mov
mov
cmp
mov
jz
mov
mov
sub
xor
add
mov
cmp
mov
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
add
mov
mov
xor
add
push
push
push
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
add
jmp
cmp
jnz
mov
xor
jmp
xchg
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
xor
jmp
mov
mov
sub
push
sub
push
or
mov
jmp
xor
adc
mov
xor
add
push
jmp
mov
mov
inc
xor
add
mov
mov
dec
add
mov
jmp
cmp
jnz
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
xor
and
mov
add
sub
xor
push
sbb
mov
mov
add
push
call
mov
inc
cmp
mov
jb
mov
jmp
mov
cmp
mov
jnz
movzx
and
mov
add
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
retn
pop
adc
sub
mov
iret
mov
or
xor
add
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
jmp
mov
mov
mov
jmp
retn
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
or
jnz
mov
pop
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
mov
dec
mov
jmp
mov
push
mov
sbb
mov
mov
push
add
mov
adc
mov
jmp
scasb
xor
sub
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
jmp
mov
pop
leave
retn
push
mov
push
push
inc
jmp
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
sub
sub
mov
mov
cmp
jz
cmp
jnz
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
jmp
mov
xor
mov
jmp
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
or
add
xor
movzx
and
mov
xor
xor
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
sub
xor
xor
sub
mov
movzx
sub
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
adc
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
sub
mov
push
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
jmp
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
jmp
add
jmp
mov
mov
jmp
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jmp
jmp
cmp
push
xchg
mov
inc
rol
mov
dec
not
fsubr
and
mov
clc
aad
cli
xchg
cwde
sub
dec
mov
lodsb
sub
mov
jz
mov
lea
mov
mov
add
mov
jmp
retn
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
jmp
mov
mov
mov
sub
add
xor
xor
mov
cmp
jnz
and
mov
mov
add
and
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
jmp
add
jmp
mov
xor
add
leave
retn
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
jz
add
xor
add
add
retn
setalc
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidiv
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
jz
add
mov
add
add
add
add
mov
add
retf
retn
retf
pop
add
imul
add
retf
retf
retn
jns
retn
dec
cmp
dec
jp
cmp
dec
dec
add
dec
retn
dec
push
push
pop
push
cmp
dec
retn
dec
xor
retn
dec
push
jb
jnb
or
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
sbb
setnb
nop
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
retn
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
retn
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
retn
dec
push
retn
retf
retf
push
test
or
inc
jb
dec
jmp
retn
mov
dec
push
int
pop
pop
adc
pop
add
add
movsb
pop
cmp
push
sub
retf
test
inc
sbb
retf
test
sbb
sti
push
mov
cmp
mov
add
inc
xchg
retf
retn
fiadd
retn
push
retn
inc
jmp
aas
daa
push
cld
push
std
jmp
and
dec
retf
push
sbb
jmp
push
jnp
mov
std
mov
sub
jnb
add
retn
lds
sbb
push
push
xchg
mov
dec
jmp
fmulp
mov
sub
mov
or
lahf
out
std
sub
mov
mov
mov
wait
push
test
xchg
lodsd
rol
sub
xlat
call
mov
adc
and
cmp
xor
mov
enter
mov
inc
jg
test
call
adc
loop
jecxz
call
inc
sti
push
ja
jns
dec
and
xor
das
dec
call
shl
jnb
loopne
mov
xchg
xor
rep
pushf
cmpsb
inc
xchg
sbb
sub
lodsd
pop
dec
xlat
sbb
fstp
mov
jnb
scasb
add
pop
jge
or
jmp
jmp
wait
and
popa
mov
xor
cmpsb
xchg
add
add
and
push
jmp
mov
push
movsd
mov
rol
movs
retn
adc
sbb
pop
push
pushf
mov
add
add
rcr
dec
jmp
cmpsd
aaa
not
add
mov
dec
wait
call
fdivr
xlat
xchg
cmc
fsub
mov
sbb
mov
lodsb
cmp
ror
mov
dec
lodsd
in
or
mov
sbb
inc
or
add
movsd
jle
dec
jno
and
pop
outsb
out
sbb
das
pop
and
sbb
xor
mov
sti
push
retf
mov
imul
movsb
and
jmp
wait
add
add
movsd
retf
mov
cld
mov
leave
jle
setalc
inc
add
add
add
adc
jbe
mov
cdq
retf
push
loop
inc
lahf
dec
call
adc
cmc
div
jb
stc
into
xor
push
insb
xchg
xor
outsb
jl
and
jge
mov
std
mov
fmul
int
xor
fbstp
jge
wait
sub
or
fild
push
sahf
js
sbb
sbb
jmp
push
aaa
pop
jecxz
mov
add
push
xor
or
aad
les
jle
push
scasd
jnb
out
loope
std
or
outsb
and
wait
add
imul
adc
pop
add
push
inc
jp
inc
and
lodsb
add
sbb
pop
dec
adc
adc
mov
add
push
neg
jg
fist
lodsd
mov
pop
push
mov
sub
aad
pop
xchg
inc
test
xlat
retf
cmc
cdq
sbb
mov
mov
inc
dec
dec
jnp
push
push
fld
scasd
hlt
icebp
jnb
push
js
cmp
mov
into
pop
add
inc
test
jbe
arpl
not
sahf
aaa
retn
sub
scasd
mov
aas
scasb
fld
retn
add
inc
pop
cmp
or
frstor
mov
xchg
retn
mov
mov
mov
pop
xchg
or
jecxz
sub
add
inc
wait
stosb
pop
adc
lodsb
sub
and
or
fnstsw
retn
rep
adc
cmpsb
cmp
in
pusha
push
bound
or
retn
push
fcmovb
lodsb
jmp
mov
jnb
push
out
pusha
test
dec
out
mov
test
jmp
dec
or
aad
jnp
cmp
pop
xor
sub
sub
xchg
in
xchg
loope
daa
inc
sub
xchg
adc
sub
mov
mov
sub
push
sbb
sub
dec
jb
sub
rcl
add
add
jno
out
retn
pop
add
dec
add
push
pop
cmc
jnp
cwde
push
cmp
jp
push
adc
movsb
mov
aaa
xor
cmpsb
out
arpl
mov
sub
xchg
test
and
add
aam
inc
retn
retn
jecxz
test
ja
add
add
push
add
aad
xlat
xor
stc
push
call
bound
add
mov
mov
cmpxchg
sub
mov
pop
jno
add
pop
mov
jb
add
std
inc
cwde
shr
add
or
js
inc
cwde
rep
sub
scasd
jns
mov
sub
mov
wait
sub
out
push
out
jmp
xchg
jecxz
pop
or
mov
mov
cdq
add
retn
aaa
jnb
cdq
dec
mov
jno
retn
pop
retn
cmp
mov
out
inc
rol
loopne
mov
cmp
loopne
out
jp
mov
and
mov
adc
xchg
clc
in
sub
push
jmp
dec
rol
retf
push
mov
fcom
inc
xor
iret
cld
retf
push
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
pop
or
add
retf
mov
retn
