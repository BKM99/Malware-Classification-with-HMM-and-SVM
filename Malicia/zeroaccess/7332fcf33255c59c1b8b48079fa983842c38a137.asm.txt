push
mov
sub
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbb
push
sbb
jmp
retn
aas
retn
push
xor
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
retn
ror
push
add
mov
sub
add
and
mov
sub
jmp
lea
sbb
mov
jmp
mov
mov
and
xor
or
add
xor
add
mov
add
mov
mov
mov
xor
mov
lea
and
mov
mov
mov
or
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
sub
mov
mov
and
xor
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
add
add
jmp
retn
mov
retn
mov
adc
mov
add
mov
mov
mov
mov
adc
movzx
and
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
cmp
jmp
jnz
mov
mov
xor
add
cmp
jnz
mov
mov
jmp
retn
rcr
retf
mov
retn
xor
add
mov
mov
mov
jmp
leave
retn
xor
jmp
mov
sub
add
mov
mov
jmp
rcl
rcl
enter
push
aad
aas
dec
cwde
adc
jle
add
fld
retf
int
sti
fcmovu
mov
jmp
retf
movzx
add
mov
jmp
retn
mov
mov
xor
add
jmp
xor
sub
mov
jmp
movzx
sub
cmp
mov
movzx
jg
xor
jmp
sub
sub
mov
jmp
xor
jmp
retf
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
jmp
rcr
cmp
jz
jmp
mov
mov
jmp
xor
mov
mov
jmp
retn
push
lea
add
mov
mov
mov
jmp
mov
jmp
setalc
enter
retn
mov
xor
jmp
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
add
jmp
retn
fcmovne
retf
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
jmp
retn
aad
retn
mov
mov
mov
mov
push
call
mov
jmp
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
mov
mov
mov
movzx
xor
mov
jmp
sub
mov
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
mov
xor
xor
cmp
jz
mov
mov
sub
add
mov
and
mov
sub
and
xor
jmp
rcl
cmp
mov
jnz
mov
sub
jmp
retn
add
mov
jmp
mov
inc
xor
jmp
sar
add
mov
jmp
retn
leave
retf
mov
jmp
xor
add
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
jmp
aas
mov
retf
pop
retn
push
mov
mov
xor
mov
jmp
div
mov
and
or
jmp
retn
retn
mov
pop
retn
push
mov
jmp
retf
clc
aas
sub
sbb
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
sbb
jmp
retn
mov
adc
xor
mov
adc
add
jmp
movzx
mov
and
mov
lea
mov
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
mov
mov
xor
add
sub
mov
sbb
mov
not
mov
and
mov
mov
push
jmp
xor
dec
mov
mov
add
jmp
mov
mov
mov
mov
inc
jmp
retn
xlat
rcl
retf
cmp
mov
jb
dec
jmp
mov
sbb
mov
add
jmp
xor
add
mov
cmp
mov
jmp
aas
ror
rcl
retn
jz
adc
jmp
push
and
xor
xor
inc
mov
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
mov
mov
jmp
retn
xor
mov
add
movzx
mov
jmp
fmul
fcomp
aad
movsb
inc
jb
inc
adc
jle
adc
jle
rcr
retn
cmc
stc
int
setalc
into
fsubrp
sar
fcmovu
mov
shl
mov
lock
jecxz
cmp
hlt
hlt
ffree
aad
xor
mov
repne
mov
jecxz
into
in
xor
iret
jmp
fcom
fdivrp
fcmovb
cmp
retf
mov
movzx
xor
add
jmp
retn
mov
mov
jmp
mov
jmp
retn
retf
inc
jmp
ffreep
cmp
jnz
pop
jmp
pop
jmp
retn
ror
fcomp
aam
mov
push
dec
xor
jle
imul
retf
fprem
retf
mov
mov
jmp
xor
add
mov
mov
xor
add
jmp
mov
mov
jmp
retn
std
mov
mov
cmp
jmp
jz
mov
mov
mov
jmp
cmp
jmp
ror
enter
retf
jnz
mov
mov
movsx
xor
add
jmp
cmp
jz
mov
lea
jmp
sar
aam
aam
fcmovne
inc
cwde
sbb
sbb
jle
sbb
retn
mov
fimul
jmp
setalc
mov
mov
add
jmp
mov
mov
xor
lea
jmp
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
push
jmp
xlat
fstp
fst
mov
inc
jle
ror
jle
retn
retf
rcr
test
xchg
mov
into
in
out
xchg
clc
xchg
mov
add
jmp
mov
and
xor
add
inc
mov
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
and
mov
jmp
clc
mov
mov
adc
push
inc
mov
mov
jmp
cmp
mov
jmp
xor
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
xor
mov
add
add
imul
mov
cmp
jmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
jle
retf
iret
mov
mov
jmp
xor
xor
add
add
imul
jmp
sar
retn
mov
cmp
jmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
push
push
mov
mov
mov
not
jmp
mov
mov
mov
cmp
mov
jmp
jnz
and
jmp
retf
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
jmp
aam
aas
retn
retf
mov
xor
mov
add
mov
movzx
jmp
not
and
jmp
mov
mov
jmp
xor
mov
jmp
rcl
enter
fcmovne
wait
fdiv
mov
jle
add
imul
retf
ror
call
out
fsubp
jmp
cmc
mov
cmp
fstp9
fsubrp
clc
retn
push
call
test
jz
leave
retn
push
mov
sub
mov
mov
inc
mov
add
jmp
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
adc
lea
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
mov
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
xor
xor
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
or
mov
jmp
xor
mov
adc
xor
adc
xor
adc
add
add
div
mov
mov
cmp
jmp
retf
jz
mov
lea
jmp
mov
mov
mov
jmp
retf
retn
jle
cmp
retf
xor
retf
stc
fdivp
fcmovu
imul
mov
mov
cmp
jz
jmp
mov
or
mov
xor
add
jmp
mov
retf
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
jmp
mov
jmp
mov
jmp
fadd
setalc
retf
setalc
fstp
aad
mov
cmp
mov
retn
xor
mov
add
cmp
jz
mov
xor
jmp
ror
mov
fcomp
mov
cmp
add
jle
retn
aas
sar
stc
out
in
retf
fucom
in
loope
fxch7
into
cmp
cmp
sub
in
xor
xlat
fimul
call
retf
retn
add
jmp
mov
jmp
retf
leave
int
aam
aad
fnstcw
ficomp
dec
push
jle
retn
aad
mov
jmp
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
jmp
xchg
mov
mov
jmp
xor
add
imul
sub
jmp
mov
jmp
mov
mov
jmp
aaa
xlat
xor
cmp
jmp
jz
mov
jmp
add
jmp
mov
jmp
retn
retn
cmp
jz
jmp
mov
jmp
push
mov
jmp
sub
jmp
mov
push
dec
push
jmp
mov
retn
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
call
jmp
adc
jmp
xor
jmp
mov
adc
add
jmp
push
not
mov
xor
mov
adc
xor
mov
jmp
jle
rol
cld
fcmovu
inc
dec
jmp
setalc
sal
fcomp
retn
fcmove
out
hlt
rol
cli
in
mov
fnsave
fcmovnu
test
sbb
add
xchg
hlt
call
in
int
xor
sti
cmp
cmc
stc
ffree
mov
add
mov
jmp
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
not
jmp
rol
retf
mov
jmp
cmp
jmp
jnz
sbb
and
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jb
xor
jmp
retn
mov
or
sub
push
or
jmp
mov
sbb
add
push
call
inc
jmp
retn
cld
cmp
jb
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
jmp
sar
retn
xor
add
mov
lea
mov
mov
xor
add
jmp
retn
fstp
retn
mov
lea
push
mov
xor
jmp
add
push
jmp
mov
retf
mov
push
push
call
jmp
jmp
xor
cmp
jnz
jmp
mov
xor
add
jmp
mov
jmp
rcl
retf
mov
mov
mov
mov
mov
push
jmp
cmp
pop
jmp
sub
add
mov
mov
xor
lea
jmp
cmp
jnz
mov
pop
jmp
ror
retn
movsb
inc
push
retf
xor
jmp
retn
fstp1
retn
fxam
pop
add
jmp
pop
leave
retn
push
mov
sub
xor
jmp
retf
push
or
mov
add
mov
mov
inc
jmp
mov
mov
mov
mov
sub
xor
mov
add
jmp
mov
movzx
or
mov
xor
mov
movzx
or
mov
add
mov
mov
dec
xor
add
sub
mov
xor
add
adc
jmp
mov
xor
or
sub
jmp
retf
cld
fxch7
mov
or
mov
movzx
xor
mov
mov
add
mov
mov
mov
mov
adc
mov
mov
sub
xor
mov
add
jmp
retf
aas
retn
add
mov
cmp
mov
jz
push
mov
jmp
mov
mov
and
sub
or
mov
xor
add
jmp
mov
fcmovnbe
lodsd
pop
mov
cwde
push
retn
cmp
jmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
xor
xor
xor
add
adc
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
xor
dec
retf
test
sub
cmp
mov
jmp
rcl
retn
ja
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
mov
or
xor
add
mov
jmp
mov
not
mov
xor
xor
add
add
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sub
add
add
imul
jmp
retn
aad
retn
mov
add
jmp
mov
neg
jmp
sub
cmp
mov
ja
mov
mov
jmp
mov
adc
mov
mov
mov
jmp
xor
xor
xor
jmp
rcr
fcom
retn
pop
mov
fdivr
fiadd
jle
fisubr
ror
retf
sar
xor
fcom
in
fsubp
cld
retf
xchg
add
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
mov
ja
mov
jmp
xor
jmp
retf
mov
mov
movzx
sub
mov
xor
xor
jmp
add
adc
add
jmp
aad
retn
imul
xor
xor
sub
mov
mov
jmp
cmp
icebp
mov
sub
cmp
jmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
xor
xor
add
jmp
add
jmp
imul
jmp
retf
mov
mov
sub
cmp
mov
jbe
jmp
retf
retn
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
retn
mov
jmp
xor
jmp
retf
add
jmp
jmp
retf
setalc
fstp1
fst
mov
aas
mov
aas
pop
retf
clc
imul
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
retn
mov
mov
mov
jmp
retf
retn
mov
mov
jmp
leave
aas
retn
xor
jmp
retn
retf
retn
add
mov
jmp
mov
mov
mov
jmp
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
retf
add
jmp
mov
mov
mov
xor
add
jmp
aam
retf
rcr
fcom
scasb
cld
cmp
xchg
jle
mov
rol
leave
jmp
retf
sal
int
repne
sar
retn
stc
imul
mov
xor
sub
mov
mov
jmp
retn
retn
retn
retn
xor
jmp
add
imul
mov
xor
sub
jmp
retn
fmul
retn
aad
lea
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
jmp
add
mov
lea
mov
mov
jmp
xor
jmp
retn
mov
jmp
sub
jmp
add
jmp
mov
mov
xor
add
jmp
imul
jmp
rol
retf
retf
cmp
jbe
jmp
mov
retf
retf
pop
jmp
pop
leave
retn
push
mov
sub
add
push
and
push
add
push
push
add
push
call
mov
and
test
mov
jz
and
lea
push
and
push
xor
call
add
push
add
call
mov
test
jz
mov
mov
jmp
mov
mov
jmp
push
push
push
mov
call
mov
mov
mov
mov
cmp
mov
jnz
push
push
adc
push
push
or
call
inc
mov
cmp
jb
mov
inc
mov
cmp
jb
sbb
push
call
or
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
mov
mov
sub
sub
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
lea
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
inc
mov
xor
xor
mov
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jb
add
mov
mov
mov
cmp
mov
mov
mov
mov
jz
mov
xor
xor
sub
add
imul
mov
mov
mov
jmp
mov
adc
xor
and
add
or
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jb
mov
add
xor
add
add
movzx
and
mov
or
mov
xor
mov
adc
xor
xor
add
cmp
jnz
sub
push
or
push
and
push
call
xor
mov
not
mov
mov
neg
mov
mov
or
mov
mov
sub
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
or
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
movzx
xor
lea
mov
mov
neg
mov
add
mov
adc
mov
sbb
mov
or
mov
dec
mov
xor
or
add
mov
cmp
mov
jz
xor
mov
xor
add
sub
mov
sbb
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
mov
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jz
mov
jmp
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
mov
mov
mov
mov
xor
mov
mov
add
cmp
jz
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
push
lea
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
fmul
retn
push
push
mov
mov
mov
push
jmp
mov
jmp
mov
push
not
jmp
retn
mov
mov
mov
jmp
cmp
mov
jmp
jz
mov
mov
inc
xor
add
mov
cmp
mov
jz
jmp
retf
aam
mov
sub
xor
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
add
add
or
push
xor
jmp
retf
aad
fstp
jns
wait
mov
jnz
jg
pop
add
test
mov
adc
loop
out
fmul
retf
fcmovnu
int
test
iret
loop
push
retn
push
push
mov
jmp
aad
int
retf
call
jmp
mov
jmp
sti
cmp
mov
mov
mov
jmp
mov
jmp
retf
mov
jmp
xor
add
cmp
jnz
jmp
mov
xor
jmp
retn
add
mov
mov
jmp
rol
rol
rcl
aad
add
cmp
pop
pop
jg
pop
add
icebp
aaa
retf
retf
fstp1
retf
xor
add
mov
push
push
call
mov
jmp
retn
retf
xor
jmp
pop
add
jmp
fcom
xlat
fstp
int
fstp
sbb
lodsb
cmp
jg
pop
add
cmc
clc
sti
cld
cmp
mov
retf
cmp
int
mov
fimul
test
clc
out
lock
lock
xlat
pop
leave
retn
push
mov
push
mov
mov
mov
add
or
xor
mov
jmp
cmp
mov
jnz
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
retn
fcmovnu
btc
retn
mov
xor
xor
push
or
mov
mov
add
mov
cmp
pop
mov
jz
mov
jmp
jmp
retf
xlat
retf
cli
mov
jmp
xor
add
jmp
mov
xor
add
leave
retn
push
mov
push
or
jmp
retn
retn
std
mov
mov
xor
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jmp
jz
or
mov
xor
jmp
xor
jmp
retf
lea
or
jmp
xor
cmp
jnz
jmp
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
xor
jmp
aad
retf
enter
fcmovnu
push
icebp
retn
add
mov
mov
xor
jmp
retf
xor
jmp
aas
retf
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
pop
test
jz
jmp
push
push
mov
push
mov
call
jmp
jmp
retf
rcr
retf
mov
leave
retn
push
mov
sub
dec
mov
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
sbb
jmp
cmc
push
sub
jmp
mov
xor
adc
mov
and
add
sbb
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
jmp
adc
mov
push
add
push
test
jz
mov
mov
xor
mov
sbb
jmp
mov
mov
sbb
imul
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
sub
mov
add
add
sbb
jmp
mov
mov
sbb
jmp
rol
xlat
retf
mov
xchg
adc
sub
xor
sbb
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
movzx
add
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xor
xor
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
call
cmp
jnz
mov
inc
mov
jmp
jmp
retf
add
movzx
mov
mov
mov
jz
mov
cmp
jz
cmp
jnz
push
push
call
xor
add
dec
mov
jmp
adc
mov
xor
dec
jmp
add
mov
cmp
mov
jnz
and
push
xor
call
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
jz
push
push
call
jmp
mov
mov
mov
xor
add
jmp
cmp
cmp
jz
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
mov
mov
jmp
add
jmp
lea
mov
push
push
push
call
jmp
retf
mov
jmp
mov
xor
jmp
retn
add
cmp
jmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
mov
mov
mov
mov
mov
jmp
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
jmp
not
pop
xchg
jmp
sub
xchg
dec
jmp
setalc
retf
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
retf
imul
mov
jmp
xor
mov
lea
jmp
cmp
jmp
retn
jz
mov
jmp
mov
mov
mov
jmp
retf
mov
jmp
xor
jmp
xor
mov
add
jmp
div
mov
jmp
xor
jmp
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
retf
retn
rcl
fcmovbe
retf
mov
jmp
mov
aam
fstp
fcom
retn
cwde
pop
mov
add
add
int
clc
mov
xor
not
xor
cli
fdiv
retf
xor
add
jmp
retn
icebp
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
jmp
rcl
retn
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
jmp
xlat
aas
retf
pop
inc
xchg
sub
jmp
fsubrp
xchg
dec
jmp
mov
imul
add
xchg
jmp
push
xor
mov
dec
inc
add
dec
jmp
xor
add
pop
mov
pop
pop
pop
leave
retn
