push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
sub
mov
sub
mov
xor
mov
add
mov
sbb
mov
push
movzx
sbb
mov
push
mov
xor
push
or
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
mov
mov
mov
or
mov
mov
sub
xor
add
mov
sbb
mov
mov
mov
xor
xor
add
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
jmp
mov
xor
xor
neg
jmp
mov
cwde
cmp
mov
jge
jle
jg
jle
setalc
xchg
and
or
lds
jp
push
mov
fidiv
dec
mov
push
inc
and
cmp
mov
xor
aad
outsb
jnp
mov
movsb
fdivr
adc
mov
cmc
retn
adc
and
add
push
xor
sub
daa
in
sub
jz
push
mov
fisubr
shr
jbe
cmp
jnb
pop
inc
xchg
mov
nop
fadd
cmp
push
xlat
mov
sub
sbb
pusha
push
xor
fild
sub
xor
inc
cmp
jl
mov
in
fnstcw
dec
jbe
pop
push
sti
add
push
dec
cdq
jnb
aaa
ja
xchg
int
daa
add
nop
jg
sub
xchg
xchg
xor
mov
adc
adc
bound
xchg
mov
xor
mov
cmp
cmpsb
lea
dec
add
stc
rol
pop
xchg
adc
or
sub
jmp
add
mov
mov
xor
sbb
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
xor
sbb
add
dec
mov
lea
mov
movzx
and
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
jmp
mov
jmp
xchg
mov
push
jo
adc
dec
or
retn
call
div
jmp
or
mov
mov
xor
add
mov
mov
mov
xor
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
xor
jz
lea
push
mov
xor
add
jmp
push
mov
add
jmp
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
push
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
test
jmp
push
jnp
or
push
adc
nop
dec
cmp
int
sbb
or
jle
jg
jle
jnp
xor
mov
js
aam
mov
or
das
int
enter
jb
dec
adc
fmul
test
test
jmp
xchg
cmp
loope
pop
mov
jnz
mov
xor
add
jmp
or
retf
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
jmp
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
jmp
jmp
xchg
push
arpl
nop
push
ror
fmul
jle
cli
jg
jle
repne
enter
bound
mov
jl
sbb
mov
jg
shl
dec
pop
jmp
les
stosb
pop
iret
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
push
pop
jmp
call
mov
mov
add
pop
jmp
add
mov
adc
mov
pop
jle
cli
jg
jle
jmp
sbb
xor
retf
mov
iret
sal
fsub
scasb
stosb
into
stosd
xor
fcompp
insd
xchg
pop
or
out
fidiv
mov
pop
pop
cdq
mov
pop
mov
inc
wait
setalc
mov
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
push
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
not
mov
xor
mov
sbb
mov
mov
add
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
dec
mov
xor
mov
mov
sub
imul
mov
add
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbb
xor
add
not
mov
not
mov
mov
mov
adc
mov
adc
mov
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
jmp
xor
mov
sbb
mov
sbb
xor
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
mov
sub
add
mov
cmp
mov
jz
mov
push
jmp
xor
mov
sub
mov
sub
xor
mov
xor
xor
mov
add
cmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
neg
xor
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jb
add
add
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
pop
stosb
sub
cmp
mov
jbe
mov
mov
jmp
xor
jmp
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
jmp
push
pop
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
imul
mov
xor
sub
lea
jmp
cwde
jmp
cmp
jbe
mov
mov
jmp
les
dec
mov
xor
retn
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
and
mov
xor
xor
not
add
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
jz
mov
xor
xor
xor
lea
xor
cmp
jnz
mov
jmp
add
mov
xor
add
mov
mov
mov
mov
jmp
pop
mov
push
push
sub
jle
sub
jle
imul
imul
mov
mov
clc
mov
and
retn
aam
xchg
pop
ja
mov
mov
dec
jl
ror
mov
xchg
cmp
mov
mov
xor
ror
js
out
cli
mov
jnz
or
rep
loopne
xchg
jnb
fcom
test
arpl
inc
push
push
sbb
adc
call
and
mov
pop
pop
inc
mov
mov
test
mov
nop
mov
or
mov
jge
popf
pop
jecxz
int
xchg
stc
pop
ror
sbb
call
push
and
mov
inc
mov
mov
adc
popf
retf
mov
xor
neg
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
jmp
call
jmp
mov
leave
retn
push
mov
sub
push
call
mov
cmp
jnz
push
call
mov
cmp
mov
jnz
mov
mov
lea
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
movzx
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
sub
xor
adc
push
mov
add
mov
mov
mov
cmp
mov
mov
jz
or
mov
sbb
xor
add
sbb
imul
mov
mov
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
add
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbb
xor
adc
add
cmp
mov
jnz
sub
push
or
push
push
call
mov
mov
and
mov
mov
mov
or
mov
sub
mov
sub
mov
and
mov
dec
mov
mov
adc
xor
add
jmp
not
mov
xor
lea
push
mov
xor
lea
push
adc
mov
xor
push
call
mov
add
xor
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
retn
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
or
mov
sbb
mov
mov
jmp
xor
mov
sbb
add
add
mov
movzx
sbb
jmp
not
and
and
mov
mov
jmp
xor
mov
jmp
push
call
test
jmp
jz
leave
retn
push
mov
sub
and
mov
mov
or
jmp
scasb
mov
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
push
lea
mov
mov
jmp
push
sub
push
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
neg
jmp
xor
adc
mov
mov
xor
add
xor
and
add
neg
add
inc
div
mov
mov
mov
mov
cmp
jz
mov
mov
and
lea
xor
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
adc
mov
mov
movzx
or
mov
or
mov
mov
or
push
xor
xor
sub
push
mov
sub
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
neg
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
add
mov
add
lea
not
mov
mov
mov
and
mov
and
xor
add
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
mov
dec
mov
jmp
lea
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
inc
mov
or
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
add
mov
adc
mov
sbb
jmp
icebp
mov
xor
mov
adc
movzx
xor
add
not
mov
mov
or
mov
xor
add
cmp
jnz
dec
mov
mov
xor
add
cmp
jmp
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
jz
and
adc
or
jle
and
jle
pop
retn
mov
and
adc
or
dec
push
popf
xchg
mov
lds
icebp
test
ficom
imul
setalc
jle
push
and
rcl
mov
cmp
pop
pop
js
mov
clc
imul
bound
icebp
mov
adc
fmul
sub
sbb
lock
call
mov
and
aaa
bound
sbb
pusha
aas
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
jmp
call
jmp
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
mov
add
mov
xor
xor
xor
mov
push
sub
mov
add
xor
mov
add
or
mov
mov
sub
mov
jmp
push
push
sbb
jmp
xchg
test
mov
jz
mov
mov
sub
mov
mov
or
jmp
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
or
mov
jmp
mov
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
or
add
mov
mov
mov
mov
jz
mov
xor
sbb
add
mov
jmp
cmp
mov
jnz
adc
push
add
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
add
add
mov
cmp
mov
jz
add
push
xor
push
dec
call
movzx
sub
jmp
mov
mov
xor
mov
xor
adc
add
mov
jmp
dec
retn
xchg
push
nop
push
dec
retn
cmp
jz
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
adc
jmp
mov
or
mov
mov
mov
not
add
movzx
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
jmp
mov
mov
add
jmp
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
inc
push
push
call
mov
mov
xor
add
cmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
jmp
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
jmp
xchg
dec
mov
imul
sub
mov
jmp
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
jmp
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
mov
xor
jmp
pop
mov
cwde
mov
mov
cmp
jle
sets
jle
sahf
push
setalc
inc
retn
retn
pop
cld
jmp
adc
jno
test
retf
pop
sbb
push
mov
sub
lahf
pop
fnsave
sbb
add
dec
test
and
wait
jl
pop
bound
pusha
xchg
push
aam
push
adc
mov
pop
cmpsb
aaa
push
jnb
push
dec
mov
pop
dec
retf
pop
xchg
insb
jnb
stos
les
loope
mov
pop
int
out
wait
in
xor
jg
inc
dec
call
fst
hlt
push
mov
xor
arpl
jecxz
mov
xchg
pop
test
retf
or
cmpsd
fcmovnb
adc
mov
add
inc
test
lds
push
pop
mov
adc
xor
sal
retn
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
jmp
sub
xchg
jmp
dec
mov
imul
add
xchg
jmp
push
xor
mov
dec
jmp
push
scasb
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
not
push
mov
mov
mov
mov
push
mov
mov
mov
mov
push
not
mov
not
mov
mov
cmp
mov
jz
mov
mov
sub
xor
add
mov
cmp
mov
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
add
mov
mov
xor
add
push
push
push
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
add
jmp
cmp
jnz
mov
xor
jmp
or
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
xor
jmp
mov
sub
push
sub
push
or
mov
jmp
js
inc
xor
adc
mov
xor
add
push
jmp
sti
retn
mov
mov
inc
xor
add
mov
mov
dec
add
mov
jmp
cmp
jnz
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
xor
and
mov
add
sub
xor
push
sbb
mov
mov
add
push
call
mov
inc
cmp
mov
jb
mov
jmp
mov
cmp
mov
jnz
movzx
and
mov
add
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
retn
rcr
jmp
mov
or
xor
add
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
jmp
mov
mov
mov
jmp
pop
jl
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
fcom
loope
jecxz
loope
mov
movsd
loop
jle
adc
jle
inc
sub
mov
mov
or
lea
sbb
xor
sbb
dec
push
arpl
pop
in
xchg
leave
inc
dec
add
fdivr
dec
mov
jle
xlat
out
fsubr
shr
mov
insd
outsb
dec
jbe
pop
sahf
sbb
sub
add
lahf
adc
pop
fcomp
daa
enter
wait
mov
daa
fcom
add
enter
mov
jmp
jnz
mov
pop
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
mov
dec
mov
jmp
mov
push
mov
sbb
mov
mov
push
add
mov
adc
mov
jmp
xor
sub
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
jmp
mov
pop
leave
retn
push
mov
push
push
inc
jmp
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
sub
sub
mov
mov
cmp
jz
cmp
jnz
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
jmp
mov
xor
mov
jmp
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
or
add
xor
movzx
and
mov
xor
xor
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
sub
xor
xor
sub
mov
movzx
sub
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
adc
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
sub
mov
push
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
jmp
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
jmp
add
jmp
mov
mov
jmp
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jmp
jmp
or
push
scasd
test
lea
aaa
and
xor
nop
and
mov
cmpsb
or
leave
mov
setalc
rol
lodsd
adc
add
stc
mov
sbb
popa
idiv
and
xor
sbb
sbb
shl
loope
div
dec
xor
xchg
arpl
add
jz
lodsb
pop
leave
movsd
cdq
sub
scasb
push
enter
das
mov
inc
jl
mov
adc
pop
mov
pop
call
cmp
arpl
adc
jo
call
cwde
fcomp
adc
sahf
retn
jz
mov
lea
mov
mov
add
mov
jmp
retn
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
jmp
mov
mov
mov
sub
add
xor
xor
mov
cmp
jnz
and
mov
mov
add
and
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
jmp
add
jmp
mov
xor
add
leave
retn
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
jz
add
xor
add
add
retn
setalc
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidiv
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
jz
add
mov
add
add
add
add
mov
add
retf
retn
retf
pop
add
imul
add
retf
retf
retn
jns
retn
dec
cmp
dec
jp
cmp
dec
dec
add
dec
retn
dec
push
push
pop
push
cmp
dec
retn
dec
xor
retn
dec
push
jb
jnb
or
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
sbb
setnb
nop
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
retn
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
retn
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
retn
dec
push
retn
retf
pop
mov
push
dec
shl
add
jbe
aaa
xor
inc
retn
dec
aaa
push
loopne
sub
sub
or
jl
adc
dec
mov
adc
mov
or
push
push
or
dec
test
jb
ficomp
sub
sub
shr
inc
or
adc
cli
and
dec
cmpsd
bound
div
daa
jb
mov
rep
mov
sub
retf
xchg
and
movsd
mov
mov
mov
inc
xchg
add
add
jle
imul
inc
stc
mov
mov
lodsb
imul
retf
dec
jmp
xor
or
ror
or
dec
rep
repne
push
fcom
and
xchg
mov
cmc
fstp
and
shl
icebp
mov
xchg
sbb
bound
push
jp
dec
jno
xchg
and
xor
pop
inc
fist
pop
push
dec
fcmovu
sbb
xchg
push
jl
xchg
wait
or
insb
in
fldl2e
retn
push
and
std
mov
dec
push
sbb
and
add
add
or
pusha
jl
retf
mov
adc
and
sbb
push
push
ffreep
mov
retn
les
out
int
aad
scasd
dec
in
push
xor
shr
inc
adc
loope
daa
in
fiadd
retn
push
retn
inc
jmp
pop
imul
retf
aas
daa
push
cld
push
std
jmp
stosd
add
push
mov
or
xchg
enter
add
retn
and
dec
retf
push
sbb
jmp
inc
pop
mov
fstp
retf
push
jnp
mov
std
mov
sub
jmp
sbb
dec
jnp
jo
pushf
pop
and
sal
cmp
jmp
pop
dec
retn
or
jmp
jmp
retf
mov
mov
mov
pop
xchg
or
rol
add
retf
push
mov
push
dec
cmc
scas
retn
xor
add
sbb
sub
dec
movsb
dec
push
push
rcl
add
add
cmp
movsb
pop
retf
retn
jecxz
test
ja
add
add
jno
sti
and
int
cmp
retf
mov
sub
mov
neg
pop
retn
sbb
lodsd
and
repne
into
jmp
retn
add
xor
jb
jnb
retn
xlat
sbb
cmp
in
cwde
icebp
retf
jge
aam
out
das
retn
dec
rol
retf
push
mov
fcom
inc
xor
iret
cld
retf
push
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
pop
or
add
retf
mov
retn
