push
mov
sub
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
or
jmp
mov
mov
mov
sbb
mov
mov
mov
xor
mov
and
push
sub
jmp
push
sbb
mov
xor
push
add
mov
mov
mov
sub
and
add
mov
jmp
and
mov
not
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
sbb
mov
jmp
mov
mov
and
jmp
xor
or
jmp
pop
dec
add
xor
add
mov
add
jmp
jge
lahf
mov
mov
mov
xor
mov
mov
and
jmp
xor
push
sbb
push
imul
repne
jnz
in
adc
jb
popf
daa
inc
out
stosd
sbb
mov
sal
aaa
xchg
mov
dec
ficomp
cwde
inc
call
mov
scasd
jb
mov
aad
ficomp
lock
pop
retf
add
pop
test
and
les
jge
les
or
fld
jnz
xchg
inc
leave
fist
mov
adc
cwde
mov
cmp
aaa
insd
push
cmp
pusha
mov
lds
aas
std
sbb
out
das
fcmove
xor
mov
mov
mov
or
xor
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
sub
add
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
jmp
add
jmp
mov
adc
xor
mov
mov
sub
or
jmp
jo
add
mov
mov
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
xor
jmp
add
xor
mov
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
adc
add
jmp
mov
sub
jmp
retn
lea
mov
jmp
mov
dec
mov
adc
mov
mov
add
mov
sbb
mov
jmp
retf
rcl
ror
fsin
sbb
pop
xor
jle
retn
mov
sub
adc
cmp
mov
setalc
outsd
and
mov
mov
dec
sahf
jecxz
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
jmp
retn
mov
xor
add
jmp
leave
push
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
ror
rol
fxch
fcmove
xor
rcl
retf
mov
mov
mov
jmp
mov
mov
jmp
mov
xor
jmp
jnz
wait
add
jmp
stosb
push
in
js
jb
outsb
call
cld
and
jg
mov
sbb
in
cld
xor
xchg
xor
popa
loopne
and
pop
push
push
mov
xor
mov
add
mov
and
pop
sti
and
inc
out
push
sub
mov
popf
jz
shr
into
dec
sub
stosd
add
mov
sub
jl
mov
std
inc
and
mov
cmp
inc
or
cld
jg
insb
adc
loopne
in
enter
jge
cmpsd
popa
ja
inc
ror
out
pusha
fisubr
mov
scasb
popa
test
test
adc
jmp
jz
lea
push
mov
xor
add
push
jmp
cmp
rcr
retf
mov
add
push
jmp
ror
ror
rcl
retf
mov
mov
push
jmp
retn
retn
leave
retf
and
call
jmp
retf
mov
cmp
lea
jmp
mov
jmp
retn
jz
lea
jmp
mov
mov
xor
add
jmp
cmp
retn
retn
mov
jmp
leave
cmp
retn
leave
leave
leave
retf
mov
xor
add
mov
mov
mov
lea
mov
jmp
setalc
setalc
retf
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
xor
add
mov
mov
mov
jmp
retf
retf
mov
mov
jmp
cmp
retn
dec
pop
wait
or
wait
pusha
mov
push
js
inc
jecxz
nop
inc
int
sub
stc
jnz
pop
cwde
xchg
jmp
mov
in
shr
push
jecxz
pop
mov
insd
stosb
mov
mov
push
and
popa
push
sbb
retn
xchg
xchg
out
insb
neg
pop
jge
insd
and
dec
scasd
jl
mov
into
cli
or
movsd
cwde
push
push
sahf
mov
push
setalc
pop
jo
popf
sub
loopne
call
sti
mov
bound
stos
adc
mov
xor
pusha
adc
push
into
test
mov
sahf
pop
dec
add
inc
wait
insd
mov
sub
mov
mov
jmp
rcl
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
test
mov
jnz
mov
xor
jmp
rcl
mov
cmpsd
sbb
add
mov
js
mov
retf
mov
mul
sub
add
or
sahf
add
jbe
sub
push
inc
push
sbb
mov
push
adc
lahf
mov
fstp
retn
cli
adc
xchg
mov
imul
and
ja
sahf
pusha
arpl
inc
dec
jbe
fimul
sal
wait
rcr
mov
xor
adc
mov
mov
cmp
mov
cwde
stosd
aam
js
mov
mul
fdiv
cmc
mov
sar
aaa
push
das
inc
and
scasb
sbb
retf
adc
xchg
sub
cmpsb
mov
sbb
adc
scasb
add
sbb
call
add
test
jz
jmp
retf
lea
jmp
push
jmp
mov
jmp
retn
pushf
xchg
dec
xor
add
push
mov
add
push
mov
mov
jmp
push
call
jmp
mov
jmp
dec
xor
jmp
mov
retn
retf
mov
sub
sub
jmp
retf
mov
add
mov
mov
mov
jmp
mov
jmp
xor
sub
mov
lea
inc
inc
jmp
retn
push
pop
dec
jmp
rcl
mov
xlat
aad
sahf
mov
push
push
js
pusha
jecxz
cmpsb
imul
and
sub
dec
pop
add
jnp
xor
inc
jge
or
mov
pop
retn
push
outsb
arpl
xlat
add
pop
loope
xchg
jl
scasb
push
cmp
adc
mov
jo
mov
jl
push
fdiv
nop
cmp
or
mov
pop
int
sbb
and
sbb
fcmovbe
mov
push
jbe
movsb
and
push
fisub
mov
adc
add
xchg
mov
cld
cmp
loope
std
loope
xchg
sub
push
push
adc
test
xchg
pop
pop
jle
mov
mov
leave
sbb
push
dec
inc
and
xor
cmp
adc
adc
xor
adc
stos
pop
sqrtps
jo
adc
cdq
imul
jmp
push
int
xor
lodsd
lds
jl
ror
pop
out
mov
cmovno
mov
retn
push
jle
push
inc
rol
xor
movsd
xor
pop
retf
xchg
mov
fxch7
push
das
rep
int
and
arpl
push
or
retn
xchg
jmp
dec
jmp
sar
retn
dec
push
jmp
mov
mov
jmp
push
lea
push
jmp
lea
jmp
js
xchg
push
xchg
pop
push
inc
pop
sub
imul
inc
aas
mov
and
xor
push
fidiv
push
sbb
inc
mov
pcmpeqw
retn
std
test
push
lea
push
jmp
lea
push
jmp
xchg
inc
push
pop
call
mov
mov
add
pop
jmp
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
jmp
push
jmp
retn
mov
and
jmp
aas
retn
mov
sub
mov
mov
jmp
cmp
retf
rcr
retf
mov
mov
xor
jmp
mov
xor
add
mov
sub
sub
jmp
mov
mov
mov
add
mov
mov
mov
adc
jmp
xor
jmp
mov
jmp
add
sub
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
jmp
xor
xor
xor
and
jmp
add
neg
jmp
retn
retf
retn
aad
leave
or
retf
mov
or
jmp
cmpsd
cmp
mov
adc
mov
sbb
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
xor
xor
add
jmp
retf
retn
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
adc
jmp
mov
and
jmp
retf
daa
mov
mov
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
jmp
xor
mov
not
add
cmp
mov
jz
push
mov
jmp
mov
adc
jmp
retf
rol
retf
mov
mov
sub
mov
add
xor
and
add
mov
jmp
cmp
jmp
retf
jb
mov
mov
jmp
xor
add
jmp
xor
jmp
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
add
imul
sub
mov
mov
or
sub
mov
jmp
aas
int
retn
cmp
mov
jmp
stosd
ja
dec
mov
xor
sbb
add
mov
jmp
jmp
xchg
inc
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
mov
sub
mov
jmp
retf
xor
xor
add
jmp
cmp
leave
retf
leave
leave
retn
add
jmp
imul
mov
mov
sub
jmp
ror
retf
retn
cmp
jmp
setalc
retn
ja
mov
jmp
mov
mov
xor
xor
add
jmp
add
jmp
imul
mov
mov
sub
cmp
jmp
ja
mov
jmp
mov
mov
xor
xor
jmp
retf
retn
fstp1
fcmovnb
push
mov
pop
jg
jnb
js
jmp
xor
rcl
push
sbb
rol
jnz
cwde
insb
outsb
jge
jecxz
div
mov
mov
jmp
add
daa
sbb
sahf
jno
popf
cmpsd
jmp
xor
sbb
aad
sbb
stosb
add
cmpsd
aaa
and
test
jb
cmpsb
xchg
dec
xlat
mov
dec
cmc
or
and
out
push
loopne
mov
inc
arpl
add
mov
jno
xchg
std
jno
inc
loopne
enter
rol
iret
retf
add
add
imul
mov
mov
sub
jmp
retn
add
cmp
ja
mov
jmp
mov
jmp
mov
xor
jmp
sar
xor
jmp
add
jmp
add
imul
mov
mov
sub
cmp
ja
jmp
stosd
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
mov
xor
adc
add
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
cmp
mov
jz
dec
mov
adc
xor
add
xor
sub
lea
sub
xor
mov
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
and
mov
mov
adc
xor
add
sbb
mov
mov
or
mov
or
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
call
jmp
mov
leave
retn
push
mov
sub
sbb
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
push
and
xor
add
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
sub
lea
push
push
not
push
lea
inc
inc
and
xor
xor
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
adc
push
pop
sub
xor
adc
call
cmp
jnz
xor
mov
inc
jmp
sub
mov
adc
mov
lea
xor
mov
lea
mov
sub
mov
mov
sub
mov
mov
xor
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
mov
xor
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
add
mov
mov
cmp
movzx
mov
mov
jz
sbb
mov
xor
xor
add
or
imul
mov
mov
jmp
xor
or
add
add
mov
mov
inc
xor
add
inc
mov
mov
sub
mov
xor
add
cmp
jnz
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
add
mov
lea
mov
mov
mov
mov
xor
mov
mov
add
cmp
jz
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
push
lea
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
push
mov
push
movzx
mov
mov
mov
mov
mov
mov
cmp
jnz
mov
mov
cmp
jz
cmp
jnz
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzx
not
and
mov
mov
jmp
xor
mov
push
call
test
jz
leave
retn
push
mov
sub
adc
mov
mov
and
mov
mov
mov
sub
mov
movzx
add
mov
sub
lea
and
mov
xor
mov
adc
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
and
mov
inc
mov
cmp
jnz
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
or
sub
or
mov
mov
sbb
xor
sub
mov
xor
and
xor
add
adc
add
or
div
mov
mov
cmp
jz
mov
lea
mov
mov
mov
imul
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
movzx
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
dec
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
mov
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzx
xor
mov
xor
and
xor
or
inc
mov
cmp
jnz
push
push
call
cmp
jb
movzx
or
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
sbb
mov
not
mov
sbb
mov
and
mov
mov
sub
mov
movzx
xor
add
mov
mov
mov
and
xor
add
add
cmp
mov
jnz
mov
adc
mov
xor
sbb
add
cmp
mov
jnz
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
or
xor
xor
add
sbb
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
lea
xor
sub
mov
movzx
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
push
xor
or
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
or
mov
adc
add
mov
mov
and
mov
push
push
sbb
test
jz
adc
mov
mov
sub
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
imul
mov
sub
add
sub
mov
xor
mov
xchg
sub
sub
xor
add
mov
mov
mov
xor
mov
mov
sub
xor
xor
add
add
mov
mov
mov
jz
mov
xor
add
cmp
mov
jnz
push
call
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jz
push
push
add
call
movzx
sbb
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
cmp
jz
cmp
jnz
push
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
mov
push
mov
not
mov
push
mov
mov
mov
mov
push
mov
movzx
mov
cmp
jz
mov
or
mov
mov
add
mov
and
xor
adc
add
cmp
mov
jz
neg
mov
xor
xor
or
add
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
push
neg
push
push
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
mov
push
push
sbb
mov
xor
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
and
mov
mov
or
xor
and
mov
mov
xor
add
mov
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
not
mov
mov
mov
mov
mov
jmp
mov
cmp
jnz
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
and
mov
sub
or
push
xor
or
add
mov
mov
mov
add
and
push
or
call
inc
mov
cmp
jb
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
push
xor
push
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
or
imul
mov
mov
cmp
mov
jnz
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
mov
movzx
or
mov
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
sub
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
push
pop
inc
mov
jmp
mov
push
mov
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
retn
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
mov
or
xor
xor
mov
add
movzx
mov
cmp
jz
cmp
jnz
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
mov
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbb
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
adc
mov
mov
or
push
sbb
xor
mov
add
mov
jmp
mov
mov
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jz
mov
lea
mov
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
mov
mov
add
xor
mov
cmp
jnz
add
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
retn
retn
js
add
nop
pop
add
movsb
pop
add
mov
add
retf
add
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repne
add
pop
add
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
retn
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
retn
sub
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
test
add
mov
add
retn
retf
retn
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
cld
mov
push
push
retf
