push
mov
sub
sbb
mov
mov
mov
add
mov
dec
mov
sbb
push
push
sub
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adc
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
or
jmp
fmul
mov
adc
lea
xor
mov
adc
mov
or
mov
xor
xor
neg
add
mov
mov
lea
sbb
mov
mov
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
xor
add
mov
dec
mov
mov
mov
sbb
mov
adc
mov
xor
movzx
add
mov
jmp
mov
mov
and
mov
xor
add
add
mov
cmp
mov
jnz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
or
mov
sub
and
mov
mov
add
xor
or
add
mov
cmp
jmp
cmp
sub
mov
xor
jle
mov
jle
pop
mov
retf
mov
and
pop
dec
dec
mov
add
or
sbb
dec
adc
movsb
push
enter
sbb
jecxz
insb
adc
inc
mov
jo
sbb
jg
mov
cmp
lea
inc
mov
cmovno
shr
int
add
pusha
mov
jnb
and
inc
movsd
xchg
shl
inc
jle
inc
ror
cmp
sub
xchg
sub
push
jl
dec
jns
xor
jnz
out
out
imul
and
leave
mov
mov
xchg
cmpsd
rep
aaa
call
jmp
push
mov
xor
out
push
in
sbb
icebp
cwde
pop
cmpsd
enter
mov
imul
adc
in
clc
mov
leave
int
sti
imul
mov
dec
jmp
setalc
dec
push
mov
test
mov
jnp
adc
push
popa
dec
rep
pop
sbb
cdq
dec
insb
xchg
and
pop
bound
sub
xor
ficomp
call
js
mov
fild
and
push
jnz
mov
or
jmp
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
pop
mov
mov
mov
movzx
add
jmp
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
jmp
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
jmp
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
jmp
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
jmp
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
jmp
sbb
jge
fidivr
pushf
cmp
jle
push
jg
jle
sub
retf
div
and
imul
shl
pusha
pop
pushf
repne
jbe
push
xchg
loope
inc
loop
or
add
xor
and
mov
outsd
mov
adc
inc
retf
out
mov
xlat
push
idiv
push
inc
add
stosd
repne
sar
push
push
mov
push
aaa
fdivr
jnp
and
cmp
xchg
jge
lock
mov
sti
mov
stc
insd
cmp
mov
mov
sar
ja
icebp
pop
aas
add
mov
sub
test
pop
adc
dec
mov
sbb
rcl
xchg
pop
call
mov
cmp
mov
sal
inc
mov
sahf
mov
mov
aad
mov
int
jo
pop
jz
push
mov
mov
add
or
cli
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
jmp
xor
push
sbb
mov
sbb
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
add
mov
mov
push
mov
or
mov
xor
mov
push
add
mov
sbb
jmp
wait
and
add
cmp
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
mov
xor
mov
xor
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
retn
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
retn
push
mov
sub
and
mov
jmp
mov
xor
mov
and
add
mov
xor
mov
movzx
mov
xor
mov
mov
sbb
mov
mov
lea
or
mov
and
jmp
xor
mov
mov
sbb
mov
mov
sbb
xor
add
sub
or
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
adc
mov
mov
push
adc
xor
inc
mov
sub
add
jmp
not
mov
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
jmp
dec
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
add
mov
jmp
mov
xor
add
mov
mov
jmp
pop
retn
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
jmp
xor
add
cmp
jz
mov
lea
mov
jmp
xchg
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
sub
jmp
push
or
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
xor
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
inc
mov
inc
mov
xor
xor
mov
add
xor
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
push
jmp
push
mov
mov
mov
mov
jmp
mov
mov
jmp
cmp
jnz
add
mov
and
mov
sub
xor
or
mov
and
add
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
movzx
not
and
mov
mov
jmp
xor
mov
push
call
test
jmp
jz
leave
retn
push
mov
sub
mov
mov
mov
mov
sub
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
adc
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
jmp
lea
movzx
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
jmp
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
add
xor
add
sbb
add
div
mov
jmp
inc
push
sti
sbb
mov
mov
and
dec
cli
retn
mov
mov
jmp
mov
mov
cmp
mov
jz
mov
lea
add
mov
xor
mov
not
mov
or
imul
mov
mov
mov
mov
cmp
jz
mov
mov
sub
sub
mov
or
mov
xor
add
pop
pop
jmp
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
jmp
retn
jz
jl
pop
jmp
pop
mov
ror
xchg
aam
icebp
cdq
retn
xchg
popa
jz
retn
sub
iret
xchg
shld
repne
push
cwde
retn
adc
outsb
inc
push
rcl
add
sub
xor
pusha
or
iret
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
jmp
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
movzx
sbb
mov
sbb
push
xor
or
sbb
push
jmp
jmp
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
xor
or
mov
add
push
sub
mov
xor
jmp
mov
xor
not
mov
mov
add
jmp
cmp
jmp
cwde
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
jmp
and
mov
or
sub
push
mov
or
mov
add
add
sub
push
dec
call
mov
inc
cmp
mov
jb
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
jmp
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
sub
push
adc
mov
mov
and
jmp
mov
mov
or
mov
xor
mov
movzx
add
mov
mov
jmp
jmp
and
jle
jns
jle
imul
lodsd
xchg
xor
mov
loopne
push
in
mov
call
mov
and
leave
cmp
out
adc
sbb
cmpsb
enter
xchg
aaa
js
cli
fcomp
cmp
cmp
mul
push
aad
jge
idiv
aad
mov
pop
add
loop
and
cmp
xor
jl
jb
bound
fldenv
mov
mov
xor
inc
loope
xchg
adc
sahf
sti
loop
pop
arpl
push
mov
js
arpl
insb
dec
stc
adc
lodsb
add
mov
xchg
aaa
and
and
fnstsw
hlt
mov
adc
imul
mov
imul
mov
add
retf
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
mov
mov
mov
sub
add
jmp
xor
xchg
mov
stosb
pusha
pop
xchg
das
fisttp
jns
jle
or
inc
push
xchg
test
retn
sar
sbb
mov
and
or
pop
push
mov
hlt
ja
push
ror
push
jo
mov
setalc
xlat
mov
jmp
mov
or
mov
cmpsb
dec
dec
popa
mov
int
xchg
rcl
jbe
xor
fcomip
sal
adc
pop
or
jg
dec
lahf
cmp
inc
out
cmp
push
pop
jecxz
js
mov
push
sub
popa
add
mov
push
jmp
sbb
test
mov
repne
lodsb
outsd
push
mov
insb
fdiv
pop
hlt
ja
fcom
fisttp
mov
imul
cmc
wait
stc
rcr
pop
push
add
mov
icebp
push
jnp
ja
into
xchg
loopne
int
mov
sbb
mov
xchg
mov
sbb
rep
and
sub
movsb
pushf
test
cmp
retn
cli
mov
jz
leave
call
hlt
jle
retf
cmpsd
sub
mov
add
sub
add
cmp
rcr
xor
imul
retf
mov
and
jmp
mov
mov
or
mov
sbb
mov
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jb
or
mov
sbb
mov
xor
sub
mov
or
add
cmp
jz
mov
push
jmp
xor
mov
add
mov
add
sub
mov
mov
and
xor
add
add
mov
cmp
mov
jb
mov
mov
sub
xor
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
xor
inc
xor
sbb
add
or
add
imul
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
and
mov
sub
cmp
mov
ja
xor
add
add
mov
or
jmp
popa
leave
xor
adc
add
jmp
mov
sub
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
add
imul
xor
mov
mov
xor
sub
mov
cmp
mov
ja
mov
mov
mov
jmp
sub
mov
add
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
xor
xor
add
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jb
add
imul
mov
mov
jmp
aaa
sub
cmp
ja
mov
jmp
jmp
mov
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
add
add
jmp
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
jmp
xchg
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
xor
add
mov
lea
jmp
mov
mov
xor
mov
jmp
fidiv
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
lahf
retf
xchg
pop
leave
retn
push
mov
sub
sbb
push
sbb
push
inc
push
and
push
adc
call
test
mov
jz
adc
xor
inc
mov
jmp
add
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
sub
mov
sbb
lea
movzx
and
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
and
xor
sbb
mov
xor
add
mov
mov
movzx
cmp
mov
movzx
mov
jz
sub
mov
xor
add
sbb
imul
mov
mov
mov
jmp
add
xor
sbb
add
mov
movzx
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xor
add
mov
cmp
jnz
sbb
push
mov
push
sbb
push
adc
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
mov
or
mov
mov
xor
mov
and
mov
and
mov
or
xor
sub
xor
adc
add
mov
adc
xor
xor
adc
add
mov
lea
mov
mov
mov
cmp
mov
ja
jmp
adc
mov
add
mov
xor
xor
lea
push
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
movzx
adc
mov
mov
xor
mov
lea
sub
push
and
mov
adc
push
call
mov
mov
mov
or
xor
lea
mov
or
mov
sub
xor
xor
xor
add
mov
and
xor
mov
lea
mov
mov
mov
cmp
mov
jbe
mov
mov
add
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
add
mov
inc
mov
sub
push
or
sub
sub
push
adc
xor
mov
push
call
sub
adc
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
cmp
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jnz
mov
xor
add
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
lea
push
lea
push
lea
push
lea
push
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
retn
push
mov
jmp
push
push
mov
mov
mov
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
cmp
jz
or
jmp
mov
mov
xor
xor
add
mov
cmp
mov
jz
and
mov
mov
xor
xor
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
and
add
push
push
push
mov
jmp
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
add
mov
push
push
call
jmp
mov
xor
pop
jmp
add
pop
leave
retn
push
mov
push
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
and
mov
add
xor
cmp
mov
jnz
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
lds
mov
mov
jmp
dec
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
retn
push
mov
push
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
movzx
adc
mov
and
xor
add
mov
jmp
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
mov
jz
mov
xor
sub
xor
xor
lea
xor
cmp
jnz
mov
jmp
jmp
add
mov
xor
add
mov
mov
xor
jmp
sahf
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
call
jmp
mov
leave
retn
push
mov
sub
mov
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
mov
xor
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
movzx
adc
mov
xor
add
or
mov
sbb
mov
xor
push
mov
push
sbb
test
jz
mov
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
rol
std
mov
xchg
inc
jg
aam
adc
jg
jle
xchg
lea
xor
rcl
retn
add
jge
mov
push
inc
pop
mov
adc
or
cdq
in
add
lodsb
aad
das
scasd
sbb
jmp
fnstsw
lodsb
jnp
xchg
inc
loope
jl
iret
cwde
xchg
and
out
push
or
push
xchg
stc
hlt
pop
imul
sbb
sti
test
or
push
sub
mov
adc
in
jz
pop
dec
cmp
imul
push
and
dec
pop
mov
cmp
xor
sahf
push
in
pop
push
aas
leave
mov
or
imul
jle
test
iret
leave
lodsd
bound
nop
call
sub
dec
mov
add
call
das
jns
cmpsd
add
nop
mov
or
mov
jmp
retf
xchg
sub
xor
xor
adc
mov
mov
dec
mov
mov
mov
add
xor
xor
add
mov
mov
mov
mov
jz
adc
mov
adc
xor
or
add
mov
cmp
jnz
sbb
push
or
call
and
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
xor
add
cmp
jz
or
push
push
sub
call
movzx
and
mov
mov
mov
cmp
jz
cmp
jnz
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
jmp
retf
mov
mov
jmp
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
jmp
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
xor
jmp
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
jmp
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
cmp
add
add
pop
cmp
add
add
jz
add
nop
cmp
add
add
int
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
retn
add
cmp
add
cmp
add
jmp
jbe
add
mov
add
inc
add
retf
add
inc
add
fiadd
add
inc
add
repne
add
inc
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int
inc
add
fadd
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
ror
setalc
dec
add
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
retn
retf
and
cmp
sti
fsubrp
dec
retn
retf
dec
jmp
pop
out
inc
cmp
outsb
sub
enter
sbb
jnb
push
test
mov
cmp
mov
sbb
mov
mov
push
cmc
out
adc
in
dec
in
mov
sbb
retf
movsd
lahf
sbb
jge
sbb
int
jg
into
jecxz
icebp
fld
adc
test
sbb
cwde
pop
and
sbb
sbb
xchg
push
xor
dec
sub
lodsb
jnz
call
setalc
in
out
movsb
scasd
jle
adc
mov
or
mov
sar
test
movsb
xchg
rol
jb
rcr
or
retn
fiadd
retn
push
retn
inc
jmp
aas
daa
push
cld
push
std
jmp
and
dec
retf
push
sbb
jmp
fnstcw
mov
retf
mov
and
das
retf
push
jnp
jl
mov
idiv
fst
inc
sahf
pop
dec
mov
sub
test
add
xor
add
sti
enter
inc
aas
ficomp
pop
retf
add
dec
mov
rep
jb
test
and
mov
xchg
scasb
adc
push
lea
mov
mov
mov
mov
jns
lock
mov
xor
or
dec
loop
retn
pop
mov
movsb
cmp
jnz
sbb
mov
pop
sub
outsb
pop
mov
aad
mov
push
aaa
jmp
mov
std
mov
retf
aad
aam
inc
icebp
jp
lahf
add
test
add
nop
loop
inc
jecxz
mov
dec
fcomp
rcr
or
or
jz
and
sub
mov
jmp
retf
cmc
adc
loopwe
sbb
sbb
add
test
add
mov
xor
inc
sub
hlt
xchg
pop
test
and
xor
retf
retn
retn
dec
rol
retf
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
dec
retf
