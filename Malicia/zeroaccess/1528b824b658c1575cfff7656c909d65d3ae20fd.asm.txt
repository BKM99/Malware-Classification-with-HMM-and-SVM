push
mov
sub
mov
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
or
jmp
mov
mov
mov
sbb
mov
mov
mov
xor
mov
and
push
sub
jmp
push
sbb
mov
xor
push
add
mov
mov
mov
sub
and
add
mov
jmp
mov
not
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
sbb
mov
jmp
mov
mov
and
jmp
xor
or
jmp
and
add
xor
add
mov
add
jmp
mov
mov
mov
xor
mov
mov
and
jmp
mov
mov
mov
or
xor
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
sub
add
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
jmp
add
jmp
mov
adc
xor
mov
mov
sub
or
jmp
les
add
mov
mov
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
xor
jmp
add
xor
mov
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
adc
add
jmp
mov
sub
jmp
retn
lea
mov
jmp
mov
dec
mov
adc
mov
mov
add
mov
sbb
mov
jmp
retf
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
jmp
retn
mov
xor
add
jmp
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
xor
jmp
add
jmp
jz
lea
push
mov
xor
add
push
jmp
cmp
rcr
retf
mov
add
push
jmp
ror
ror
rcl
retf
mov
mov
push
jmp
retn
retn
leave
retf
adc
call
jmp
retf
mov
cmp
lea
jmp
mov
jmp
retn
popf
jz
lea
jmp
mov
mov
xor
add
jmp
cmp
retn
retn
mov
jmp
leave
cmp
retn
leave
leave
leave
retf
mov
xor
add
mov
mov
mov
lea
mov
jmp
setalc
setalc
retf
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
xor
add
mov
mov
mov
jmp
retf
retf
mov
mov
jmp
cmp
retn
mov
mov
jmp
ror
leave
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
test
mov
jnz
mov
xor
jmp
mov
cmpsd
sbb
inc
stc
and
push
js
pop
add
setalc
push
push
push
xchg
fidivr
add
cmp
push
jnb
popa
mov
arpl
mov
sub
xchg
xchg
sub
xchg
push
jno
rep
push
sub
sbb
ror
rep
push
jnz
scasb
sbb
jno
in
retn
lea
jb
pop
and
adc
jb
jnp
xchg
dec
jz
out
mov
adc
sub
add
shl
cmp
dec
ror
imul
imul
daa
push
jno
fdiv
inc
loopne
mov
cmp
dec
cmp
aad
outsd
cmp
sar
dec
cmpsb
add
aas
mov
push
daa
mov
div
cdq
mov
in
ror
lahf
in
sbb
add
test
jz
jmp
retf
lea
jmp
push
jmp
mov
jmp
retn
xor
add
push
mov
add
push
mov
mov
jmp
cmpsb
push
call
jmp
mov
jmp
xor
jmp
mov
retn
retf
mov
sub
sub
jmp
retf
pop
push
leave
mov
add
mov
mov
mov
jmp
mov
jmp
xor
sub
mov
lea
inc
inc
jmp
retn
push
pop
dec
jmp
push
cmp
xchg
jmp
dec
jmp
sar
retn
retn
push
jmp
mov
mov
jmp
cmc
push
lea
push
jmp
lea
jmp
push
lea
push
jmp
les
fidivr
mov
stosb
push
push
jg
push
js
retf
inc
movsd
test
cmp
push
retn
inc
rcr
out
popf
iret
cmpsb
loope
dec
jmp
lea
push
jmp
xchg
inc
push
pop
call
mov
mov
add
pop
jmp
mov
int
fcmove
setalc
fimul
mov
mov
jg
push
js
pop
pop
popf
xor
pusha
lodsb
cmp
pop
sub
pushf
retn
rep
sbb
mov
inc
and
inc
jl
jle
bound
out
pop
pop
cmp
outsb
pop
loope
or
stosb
mov
mov
xor
aam
daa
push
mov
push
and
cmp
push
retf
pop
sahf
push
movsb
fcomp
scasb
cdq
jns
int
pop
mov
movaps
xchg
and
xchg
dec
push
out
fst
sbb
push
cmc
pop
cwde
push
pop
mov
pushf
rep
dec
test
adc
js
mov
sub
mov
jge
stosd
inc
xor
inc
jnz
adc
arpl
adc
clc
retf
mov
cmp
mov
cmpsb
mov
fprem1
scasb
out
inc
jmp
adc
sub
int
mov
xchg
push
fbstp
add
sbb
in
push
bound
popf
xchg
pusha
retf
wait
push
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
jmp
lodsb
push
jmp
retn
mov
and
jmp
aas
retn
mov
sub
mov
mov
jmp
cmp
retf
rcr
retf
mov
mov
xor
jmp
aas
enter
fxch
rcl
fistp
ja
retn
jg
jnb
js
inc
retn
int
xchg
cmc
xor
jnp
fist
insb
sub
dec
in
mov
inc
pop
mov
add
add
push
or
jge
add
jecxz
mov
sub
int
dec
push
pop
fist
sbb
mov
inc
xor
sal
fcompp
pop
sti
fimul
dec
adc
inc
ja
mov
icebp
mov
enter
xor
scasd
add
cmp
cmp
movsb
loope
stosd
fmulp
sbb
sub
mov
call
jmp
psraw
mov
adc
dec
cmp
rcr
in
jl
and
test
sbb
mov
add
xchg
mov
jg
lahf
push
stosd
pop
sub
and
pop
jbe
test
aaa
outsd
fldln2
mov
mov
inc
or
rep
wait
enter
pusha
call
imul
inc
sub
push
push
out
pop
jb
fdivr
xchg
fcmovnb
xor
adc
stosd
rcl
icebp
lds
sbb
cmp
retf
xor
cmp
icebp
push
icebp
push
pushf
popf
and
retn
cmp
mov
insb
cmp
mov
push
pop
inc
mov
repne
add
mov
rcl
lds
sub
xchg
enter
not
inc
rcl
ja
mov
dec
pop
movsb
adc
xor
call
xlat
fnstenv
loop
adc
dec
inc
out
ror
and
pushf
cmp
sub
mov
mov
cwde
pop
adc
push
ror
xchg
int
loopne
fistp
wait
mov
jge
jl
daa
and
les
jp
xchg
jb
xchg
test
adc
or
insd
mov
or
mov
xor
rcl
pushf
das
sbb
cdq
sbb
push
insb
test
retf
pop
cli
mov
mov
xor
rcr
stosd
bound
mov
add
and
dec
mov
dec
aas
cmp
lahf
sbb
xchg
mov
xor
out
jle
sahf
cmpsd
out
loope
push
pop
jnz
mov
or
into
test
jecxz
stc
and
push
push
xor
loop
xchg
int
retn
or
jmp
jnp
push
mov
retn
jle
sbb
in
bound
call
ja
sahf
cmp
sub
clc
mov
test
nop
inc
mov
out
fadd
add
jnp
or
call
mov
adc
add
into
pop
sahf
fcmovb
call
add
dec
pushf
or
mov
jz
xchg
or
jp
push
cwde
mov
pop
dec
jle
or
fst
scasb
adc
xchg
in
mov
sti
dec
loopne
rcl
jmp
fnstsw
jl
pop
fadd
stosb
lodsd
jmp
mov
xor
add
mov
sub
sub
jmp
cld
mov
mov
mov
add
mov
mov
mov
adc
jmp
xor
jmp
adc
mov
jmp
adc
add
sub
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
jmp
xor
xor
xor
and
jmp
rcr
add
neg
jmp
retn
retf
retn
mov
or
jmp
lahf
add
mov
adc
mov
sbb
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
xor
xor
add
jmp
retf
retn
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
adc
jmp
lodsb
xchg
mov
and
jmp
retf
mov
mov
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
jmp
xor
mov
not
add
cmp
mov
jz
push
mov
jmp
mov
adc
jmp
retf
rol
retf
mov
mov
sub
mov
add
xor
and
add
mov
jmp
add
cmp
jmp
retf
jb
mov
mov
jmp
xor
add
jmp
xor
jmp
add
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
cdq
push
add
imul
sub
mov
mov
or
sub
mov
jmp
aas
int
retn
cmp
mov
jmp
ja
dec
mov
xor
sbb
add
mov
jmp
jmp
mov
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
mov
sub
mov
jmp
retf
xor
xor
add
jmp
cmp
leave
retf
leave
leave
retn
add
jmp
imul
mov
mov
sub
jmp
ror
retf
retn
cmp
jmp
setalc
retn
ja
mov
jmp
mov
mov
xor
xor
add
jmp
das
add
jmp
scasd
imul
mov
mov
sub
cmp
jmp
rcl
ror
rcr
aam
pop
inc
daa
clc
dec
mov
and
jnb
js
mov
pushf
rcr
cmpsd
and
add
retn
sub
xor
xor
stc
les
outsb
pop
push
mov
aam
lahf
push
fisub
sbb
pop
call
sbb
sbb
adc
stc
fcom
popf
mov
test
push
mov
mov
jno
enter
push
mov
out
mov
add
popa
mov
ja
aad
mov
cld
sti
xchg
cmpsb
push
in
inc
mov
leave
sub
pop
lods
push
dec
jnb
int
mov
loope
mov
xchg
aam
wait
out
out
mov
leave
insb
xchg
mov
mov
xor
scasb
popf
mov
pop
out
sbb
outsb
cmp
mov
pop
xchg
loop
adc
sbb
das
test
fdivr
mov
int
and
sahf
daa
pop
movsd
insd
sahf
sbb
inc
stc
adc
sbb
push
or
push
inc
scasb
lock
inc
mov
dec
not
enter
test
rol
mov
jbe
in
mov
int
mov
or
call
movsd
lodsb
mov
out
dec
and
xchg
xchg
add
and
lodsb
mov
jp
mov
in
add
xchg
clc
imul
clc
mov
sbb
and
mov
jmp
out
push
adc
pop
mov
adc
div
mov
movsb
push
mov
outsd
ror
xchg
stc
pop
mov
push
rcl
dec
mov
cli
insb
mov
inc
sahf
xor
repne
inc
jmp
jl
pusha
or
pop
xchg
fiadd
cmp
mov
cli
and
das
push
not
test
mov
and
mov
push
retf
xchg
out
cwde
retf
adc
pop
lahf
inc
push
adc
clc
mov
mov
push
aad
out
insd
outsb
loope
test
jns
xchg
das
sahf
mov
leave
xchg
cmp
push
push
xchg
pop
into
imul
inc
xchg
xchg
lodsd
xchg
and
adc
inc
dec
sbb
dec
pop
dec
or
pop
call
jnp
and
adc
setalc
fcomp
arpl
mov
add
sal
ja
mov
jmp
mov
mov
xor
xor
jmp
retf
retn
xchg
lodsb
add
add
imul
mov
mov
sub
jmp
cmp
ja
mov
jmp
mov
jmp
mov
xor
jmp
xchg
pop
pop
xor
jmp
add
jmp
js
inc
add
imul
mov
mov
sub
cmp
ja
jmp
and
inc
arpl
and
and
ja
jp
fisubr
sbb
out
inc
inc
mov
lodsd
push
mov
cmpsd
sti
sub
add
jge
cmp
imul
in
mov
mov
xchg
mov
add
aam
pop
mov
mov
in
rcl
into
sub
sbb
mov
inc
xchg
inc
or
or
xchg
lahf
cld
repne
cdq
lahf
xor
inc
popf
lodsd
jle
xor
xchg
cmp
inc
ror
bound
jp
dec
pop
push
leave
call
mov
inc
pusha
movsd
imul
or
pop
push
aas
push
pop
test
retf
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
mov
xor
adc
add
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
cmp
mov
jz
dec
mov
adc
xor
add
xor
sub
lea
sub
xor
mov
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
and
mov
mov
adc
xor
add
sbb
mov
mov
or
mov
or
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
call
jmp
mov
leave
retn
push
mov
sub
sbb
push
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
add
push
and
xor
add
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
push
sub
lea
push
push
not
push
lea
inc
inc
and
xor
xor
inc
mov
cmp
jnz
push
push
push
call
cmp
jb
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
adc
push
pop
sub
xor
adc
call
cmp
jnz
xor
mov
inc
jmp
sub
mov
adc
mov
lea
xor
mov
lea
mov
sub
mov
mov
sub
mov
mov
xor
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
mov
xor
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
add
mov
mov
cmp
movzx
mov
mov
jz
sbb
mov
xor
xor
add
or
imul
mov
mov
jmp
xor
or
add
add
mov
mov
inc
xor
add
inc
mov
mov
sub
mov
xor
add
cmp
jnz
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
add
mov
lea
mov
mov
mov
mov
xor
mov
mov
add
cmp
jz
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
push
lea
push
call
mov
mov
pop
pop
pop
leave
retn
push
mov
push
mov
push
movzx
mov
mov
mov
mov
mov
mov
cmp
jnz
mov
mov
cmp
jz
cmp
jnz
call
cmp
jnz
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzx
not
and
mov
mov
jmp
xor
mov
push
call
test
jz
leave
retn
push
mov
sub
adc
mov
mov
and
mov
mov
mov
sub
mov
movzx
add
mov
sub
lea
and
mov
xor
mov
adc
mov
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
and
mov
inc
mov
cmp
jnz
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
or
sub
or
mov
mov
sbb
xor
sub
mov
xor
and
xor
add
adc
add
or
div
mov
mov
cmp
jz
mov
lea
mov
mov
mov
imul
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
movzx
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
dec
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
mov
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzx
xor
mov
xor
and
xor
or
inc
mov
cmp
jnz
push
push
call
cmp
jb
movzx
or
add
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
jmp
sbb
mov
not
mov
sbb
mov
and
mov
mov
sub
mov
movzx
xor
add
mov
mov
mov
and
xor
add
add
cmp
mov
jnz
mov
adc
mov
xor
sbb
add
cmp
mov
jnz
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
or
xor
xor
add
sbb
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
lea
xor
sub
mov
movzx
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
push
xor
or
adc
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
or
mov
adc
add
mov
mov
and
mov
push
push
sbb
test
jz
adc
mov
mov
sub
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
imul
mov
sub
add
sub
mov
xor
mov
xchg
sub
sub
xor
add
mov
mov
mov
xor
mov
mov
sub
xor
xor
add
add
mov
mov
mov
jz
mov
xor
add
cmp
mov
jnz
push
call
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jz
push
push
add
call
movzx
sbb
mov
mov
mov
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
mov
cmp
jz
cmp
jnz
push
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
jz
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
push
push
call
mov
mov
xor
add
cmp
jnz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
mov
push
mov
not
mov
push
mov
mov
mov
mov
push
mov
movzx
mov
cmp
jz
mov
or
mov
mov
add
mov
and
xor
adc
add
cmp
mov
jz
neg
mov
xor
xor
or
add
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
push
neg
push
push
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jnz
mov
xor
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
mov
push
push
sbb
mov
xor
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
and
mov
mov
or
xor
and
mov
mov
xor
add
mov
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
not
mov
mov
mov
mov
mov
jmp
mov
cmp
jnz
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
and
mov
sub
or
push
xor
or
add
mov
mov
mov
add
and
push
or
call
inc
mov
cmp
jb
jmp
cmp
jnz
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jnz
mov
pop
xor
pop
add
pop
leave
retn
push
mov
push
xor
push
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
or
imul
mov
mov
cmp
mov
jnz
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
mov
pop
leave
retn
push
mov
mov
movzx
or
mov
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
sub
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
call
cmp
jnz
push
pop
inc
mov
jmp
mov
push
mov
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
retn
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
mov
or
xor
xor
mov
add
movzx
mov
cmp
jz
cmp
jnz
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
mov
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbb
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
jmp
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
and
mov
adc
mov
mov
or
push
sbb
xor
mov
add
mov
jmp
mov
mov
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jz
mov
lea
mov
mov
add
mov
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
mov
mov
add
xor
mov
cmp
jnz
add
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
retn
retn
js
add
nop
pop
add
movsb
pop
add
mov
add
retf
add
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repne
add
pop
add
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
retn
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
retn
sub
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
test
add
mov
add
retn
retf
retn
push
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
pop
or
cld
mov
push
push
retf
