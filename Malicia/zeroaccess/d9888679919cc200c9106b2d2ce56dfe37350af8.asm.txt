push
mov
sub
mov
cmp
jz
cmp
jnz
push
push
push
call
cmp
jnz
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
sub
mov
sub
mov
xor
mov
add
mov
sbb
mov
push
movzx
sbb
mov
push
mov
xor
push
or
mov
add
and
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
mov
mov
mov
or
mov
mov
sub
xor
add
mov
sbb
mov
mov
mov
xor
xor
add
jmp
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
or
jmp
retf
adc
mov
xor
xor
neg
jmp
add
jge
jle
jg
jle
sub
mov
adc
cmp
mov
jle
mov
adc
test
call
jmp
xchg
icebp
lodsb
iret
cwde
cmp
jl
idiv
inc
not
retf
cmp
div
fstp
in
sub
test
setalc
dec
cmp
add
dec
push
xchg
icebp
push
inc
ror
dec
mov
inc
jge
mov
dec
or
cwde
mov
add
jnb
cmc
retn
sbb
add
inc
jmp
mov
mov
loop
retf
add
mov
mov
xor
sbb
add
mov
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
jmp
xor
sbb
add
dec
mov
lea
mov
movzx
and
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
xor
mov
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
jmp
mov
jmp
mov
jmp
add
mov
mov
xor
add
mov
mov
mov
xor
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
jz
lea
push
mov
xor
add
jmp
push
mov
add
jmp
dec
push
mov
mov
push
call
mov
cmp
lea
mov
jz
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
push
sal
push
stosd
rol
retf
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
test
jmp
and
mov
jnz
mov
xor
add
jmp
or
retf
test
jz
lea
push
mov
xor
add
push
mov
add
push
mov
mov
push
call
mov
xor
mov
sub
jmp
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
inc
inc
push
pop
dec
xchg
dec
push
mov
mov
push
jmp
jmp
adc
dec
xor
jbe
retf
lea
push
lea
push
lea
push
lea
push
xchg
inc
inc
push
pop
jmp
call
mov
mov
add
pop
jmp
pop
pop
leave
retn
push
mov
sub
leave
retn
push
mov
sub
push
mov
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
not
mov
xor
mov
sbb
mov
mov
add
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
xor
add
dec
mov
jmp
mov
dec
mov
xor
mov
mov
sub
imul
mov
add
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbb
xor
add
not
mov
not
mov
mov
mov
adc
mov
adc
mov
mov
mov
cmp
jz
cmp
jnz
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
and
jmp
mov
sbb
mov
sbb
xor
and
xor
add
inc
mov
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
or
mov
sub
add
mov
cmp
mov
jz
mov
push
jmp
xor
mov
sub
mov
sub
xor
mov
xor
xor
mov
add
cmp
jb
mov
cmp
jz
cmp
jnz
push
push
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
mov
cmp
jz
cmp
jnz
push
call
xor
xor
dec
mov
jmp
neg
xor
and
xor
or
inc
mov
cmp
jnz
push
call
cmp
jb
add
add
mov
cmp
jz
cmp
jnz
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
sub
xor
mov
jle
pop
jl
jle
cmc
retf
push
mov
retn
mov
or
pop
mov
sub
cdq
setalc
movsb
jbe
ffreep
or
xchg
jge
xchg
add
paddsw
sub
mov
add
std
adc
sub
jl
fsub
mov
scasd
jo
push
pop
pop
or
mov
mov
mov
loop
test
dec
inc
sbb
pop
pop
shl
sbb
sbb
test
aas
ficomp
add
dec
inc
sub
cmp
test
jle
stosb
hlt
cmp
in
insb
xchg
jns
popf
jp
iret
icebp
jnp
in
lahf
popa
arpl
ror
jz
pusha
adc
or
sub
xor
stc
and
dec
stc
pop
jbe
xlat
adc
rep
int
adc
sub
jnp
sub
add
mov
xlat
sub
xor
int
push
aad
jmp
adc
xor
mov
mov
pop
aaa
jge
cld
mov
dec
clc
jb
jecxz
mov
mov
mov
or
cmp
and
in
sub
xchg
fstp
jo
mov
sub
add
push
or
movd
pushf
test
mov
int
dec
out
xor
jmp
jnz
xor
jle
cld
stosb
and
jle
pop
jl
jle
mov
mov
sub
jz
pop
jmp
fldenv
enter
retf
pop
lea
scasb
mov
int
cmpsd
fadd
mov
test
fmul
mov
loope
enter
adc
mov
and
mov
push
mov
push
xchg
rcl
jmp
xor
add
add
imul
mov
mov
mov
mov
add
mov
mov
jmp
fimul
mov
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
fadd
pop
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
imul
mov
xor
sub
lea
jmp
adc
cmp
jbe
mov
mov
jmp
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
retn
push
mov
push
mov
and
mov
xor
xor
not
add
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
cmp
jz
mov
xor
xor
xor
lea
xor
cmp
jnz
mov
jmp
add
mov
xor
add
mov
mov
mov
mov
jmp
pop
xor
neg
jmp
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jz
push
push
mov
push
mov
jmp
call
jmp
mov
leave
retn
push
mov
sub
push
call
mov
cmp
jnz
push
call
mov
cmp
mov
jnz
mov
mov
lea
mov
lea
and
mov
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
movzx
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
call
jmp
mov
sub
xor
adc
push
mov
add
mov
mov
mov
cmp
mov
mov
jz
or
mov
sbb
xor
add
sbb
imul
mov
mov
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
add
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbb
xor
adc
add
cmp
mov
jnz
sub
push
or
push
push
call
mov
mov
and
mov
mov
mov
or
mov
sub
mov
sub
mov
and
mov
dec
mov
mov
adc
xor
add
jmp
not
mov
xor
lea
push
mov
xor
lea
push
adc
mov
xor
push
call
mov
add
xor
and
mov
inc
mov
cmp
jnz
call
cmp
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
mov
push
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jnz
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
jz
mov
mov
sub
xor
cmp
jnz
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
retn
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
or
mov
sbb
mov
mov
jmp
xor
mov
sbb
add
add
mov
movzx
sbb
jmp
not
and
and
mov
mov
jmp
xor
mov
jmp
push
call
test
jmp
dec
jz
leave
retn
push
mov
sub
and
mov
mov
or
jmp
mov
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
and
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
jmp
xor
push
lea
mov
mov
jmp
push
sub
push
mov
xor
mov
mov
cmp
jz
cmp
jnz
push
push
call
mov
dec
mov
jmp
mov
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jb
xor
mov
neg
jmp
xor
adc
mov
mov
xor
add
xor
and
add
neg
add
inc
div
mov
mov
mov
mov
cmp
jz
mov
mov
and
lea
xor
mov
and
mov
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
mov
mov
cmp
jz
mov
or
mov
xor
add
pop
pop
pop
leave
retn
mov
add
cmp
jz
mov
and
jmp
mov
mov
or
cmp
jz
mov
xor
jmp
mov
mov
mov
mov
xor
mov
add
cmp
jz
mov
xor
add
mov
mov
mov
mov
xor
add
movzx
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
jz
mov
add
jmp
mov
cmp
jz
mov
jmp
push
mov
sub
adc
mov
mov
movzx
or
mov
or
mov
mov
or
push
xor
xor
sub
push
mov
sub
xor
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
call
cmp
jnz
mov
inc
mov
jmp
push
neg
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
sub
add
mov
add
lea
not
mov
mov
mov
and
mov
and
xor
add
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
call
cmp
jnz
xor
add
inc
mov
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
mov
dec
mov
jmp
lea
jmp
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
inc
mov
or
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
cmpsd
inc
mov
adc
mov
sbb
jmp
mov
xor
mov
adc
movzx
xor
add
not
mov
mov
or
mov
xor
add
cmp
jnz
dec
mov
mov
xor
add
cmp
jmp
stosb
adc
inc
jno
stosd
icebp
jl
and
xor
jle
das
adc
dec
xor
dec
mov
push
and
retf
jmp
pop
cmp
adc
xchg
stosb
adc
add
fld
clc
pop
jnz
pop
mov
xchg
dec
cmp
sub
and
pop
adc
wait
add
inc
xchg
cdq
pop
pop
clc
xor
sub
out
jl
jo
lodsb
mov
mov
mov
call
out
sahf
fcomp
adc
pop
imul
mov
mov
pop
out
fnstcw
out
in
lea
lahf
lds
dec
outsb
push
dec
xor
mov
lds
mov
jns
pop
scasb
not
pusha
adc
and
mov
adc
cmc
inc
mov
out
cmp
sbb
add
mov
shr
test
mov
sbb
int
dec
dec
insd
insd
jmp
add
setalc
or
and
loope
daa
xchg
cmp
push
and
xor
das
pop
jmp
push
sub
pop
stosd
jnz
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzx
add
mov
mov
mov
xor
add
xor
sub
jmp
mov
movzx
sub
cmp
mov
movzx
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
jz
mov
mov
jmp
mov
mov
xor
add
cmp
jz
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
xor
add
mov
mov
mov
xor
add
cmp
jz
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
jz
mov
mov
xor
add
mov
jmp
xor
jmp
mov
mov
mov
jmp
mov
mov
mov
push
jmp
call
jmp
mov
cmp
jz
mov
mov
pop
pop
pop
leave
retn
push
mov
sub
mov
add
mov
xor
xor
xor
mov
push
sub
mov
add
xor
mov
add
or
mov
mov
sub
mov
jmp
push
push
sbb
jmp
lds
popa
mov
fisttp
test
jle
cmp
aam
popf
lods
lahf
jmp
jl
pop
xlat
xchg
dec
insd
cmp
mov
test
pop
adc
push
jecxz
jg
mov
xchg
aam
pop
mov
cmpsb
sub
inc
stosb
call
cmpsd
lodsd
insd
loopne
sub
cmp
fbstp
fimul
push
mov
int
in
outsb
wait
wait
loope
and
adc
out
inc
xchg
setalc
jbe
or
push
mov
in
fiadd
inc
mov
aam
ror
jge
scasd
movsd
out
push
fist
push
sbb
cdq
cwde
or
insd
jnz
das
and
push
jge
inc
lodsd
xor
push
wait
jbe
nop
dec
arpl
mov
cmp
out
xchg
insd
add
cmp
retn
retf
and
test
inc
cdq
cmpsb
sbb
mov
and
and
mov
sbb
out
and
sub
cld
retf
pop
test
mov
jz
mov
mov
sub
mov
mov
or
jmp
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
mov
mov
cmp
jz
cmp
jnz
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
or
mov
jmp
mov
xor
and
jmp
xor
xor
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
push
push
push
call
jmp
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
or
add
mov
mov
mov
mov
jz
mov
xor
sbb
add
mov
jmp
cmp
mov
jnz
adc
push
add
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
add
add
mov
cmp
mov
jz
add
push
xor
push
dec
call
movzx
sub
jmp
mov
mov
xor
mov
xor
adc
add
mov
jmp
dec
retn
xchg
push
nop
push
dec
retn
cmp
jz
sbb
mov
and
xor
or
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jnz
xor
or
inc
mov
cmp
jb
adc
jmp
pop
mov
or
mov
mov
mov
not
add
movzx
sub
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
jmp
xor
jmp
movsb
mov
mov
add
jmp
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
push
push
call
mov
mov
xor
add
cmp
jnz
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
sbb
dec
movzx
mov
mov
mov
mov
mov
xor
add
cmp
jnz
mov
jmp
xor
jmp
mov
add
mov
mov
test
jz
mov
push
pop
push
dec
pop
xchg
sub
jmp
neg
xchg
dec
mov
imul
sub
mov
jmp
daa
adc
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
jz
mov
mov
mov
mov
mov
xor
xor
jmp
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
mov
xor
jmp
add
imul
mov
xor
mov
lea
cmp
jnz
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
jz
xchg
push
pop
push
pop
inc
xchg
jmp
inc
sub
xchg
jmp
dec
mov
imul
add
xchg
jmp
push
xor
mov
dec
jmp
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
retn
push
mov
push
not
push
mov
mov
mov
mov
push
mov
mov
mov
mov
push
not
mov
not
mov
mov
cmp
mov
jz
mov
mov
sub
xor
add
mov
cmp
mov
jz
and
mov
inc
mov
cmp
jnz
push
call
cmp
jb
and
xor
add
inc
mov
cmp
jnz
push
call
cmp
jb
movzx
add
mov
mov
xor
add
push
push
push
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
add
jmp
daa
cmp
jnz
mov
xor
jmp
add
mov
mov
xor
add
mov
push
push
call
mov
xor
pop
add
pop
leave
retn
push
mov
sub
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
xor
jmp
mov
sub
push
sub
push
or
mov
jmp
xor
adc
mov
xor
add
push
jmp
mov
mov
inc
xor
add
mov
mov
dec
add
mov
jmp
cmp
jnz
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
mov
jnz
xor
and
mov
add
sub
xor
push
sbb
mov
mov
add
push
call
mov
inc
cmp
mov
jb
mov
jmp
mov
cmp
mov
jnz
movzx
and
mov
add
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
retn
imul
lodsb
mov
pop
movsd
retf
mov
or
xor
add
sbb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
push
call
jmp
cmp
jnz
mov
xor
add
mov
jmp
jecxz
inc
mov
mov
mov
jmp
xchg
fbstp
arpl
fdivp
and
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
jnz
mov
pop
xor
pop
jmp
xlat
add
pop
leave
retn
push
mov
push
mov
cmp
jz
cmp
jnz
push
push
call
cmp
jnz
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
jz
cmp
jnz
push
push
push
call
mov
dec
mov
jmp
mov
push
mov
sbb
mov
mov
push
add
mov
adc
mov
jmp
xor
sub
xor
mov
cmp
jz
cmp
jnz
push
push
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jnz
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
jz
xor
add
mov
imul
add
mov
jmp
mov
pop
leave
retn
push
mov
push
push
inc
jmp
mov
and
xor
xor
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
sub
sub
mov
mov
cmp
jz
cmp
jnz
call
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jnz
push
call
cmp
jnz
mov
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jnz
push
push
push
push
call
cmp
jb
mov
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
jz
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
or
jbe
pop
mov
pop
pop
leave
retn
push
mov
jmp
pop
retf
mov
xor
mov
jmp
div
mov
and
or
mov
pop
retn
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
or
add
xor
movzx
and
mov
xor
xor
or
mov
and
jmp
mov
inc
mov
cmp
jnb
cmp
jnz
push
push
push
push
push
call
cmp
jnz
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
sub
xor
xor
sub
mov
movzx
sub
mov
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jb
adc
mov
and
mov
inc
mov
cmp
jnz
push
push
call
cmp
jnz
xor
xor
inc
mov
cmp
jb
sub
mov
push
and
jmp
xor
add
inc
mov
cmp
jnb
cmp
jnz
push
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
jz
push
push
mov
mov
xor
mov
add
movzx
mov
mov
movzx
xor
add
mov
mov
jmp
mov
inc
cmp
jnz
pop
pop
mov
mov
xor
jmp
add
jmp
xor
push
xchg
pop
pop
dec
xor
mov
jle
retn
mov
scasd
jmp
movsb
loopne
mov
mov
jmp
xor
add
mov
mov
mov
mov
cmp
jz
mov
mov
mov
cmp
jnz
mov
mov
movsx
xor
add
cmp
jmp
jmp
nop
fnstcw
dec
push
lahf
out
push
push
jz
mov
lea
mov
mov
add
mov
jmp
retn
mov
xor
lea
mov
inc
jmp
mov
xor
mov
add
mov
pop
leave
retn
push
mov
push
mov
jmp
sbb
mov
mov
mov
sub
add
xor
xor
mov
cmp
jnz
and
mov
mov
add
and
mov
and
mov
inc
mov
cmp
jnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
jnz
mov
inc
mov
cmp
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
jz
mov
jmp
mov
xor
jmp
add
jmp
mov
xor
add
leave
retn
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
jz
add
xor
add
add
retn
setalc
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidiv
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
jz
add
mov
add
add
add
add
mov
add
retf
retn
retf
pop
add
imul
add
retf
retf
retn
jns
retn
dec
cmp
dec
jp
cmp
dec
dec
add
dec
retn
dec
push
push
pop
push
cmp
dec
retn
dec
xor
retn
dec
push
jb
jnb
or
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
sbb
setnb
nop
js
jns
aas
dec
jbe
retn
dec
dec
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
retn
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
retn
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
retn
dec
push
retn
retf
and
cmp
sti
fsubrp
inc
push
sub
ror
add
xor
test
xlat
mov
and
retn
retf
xchg
enter
push
fbld
cmp
rol
add
add
retf
dec
jmp
test
arpl
and
add
retf
jo
push
iret
mov
push
and
hlt
or
mov
insb
sub
lodsd
icebp
or
or
rol
mov
sbb
sal
push
jno
xchg
popf
cmp
loopne
mov
pop
xor
dec
push
mov
sar
outsd
int
cmovle
add
jl
dec
pop
mov
rep
ja
cli
dec
xchg
mov
lock
cdq
inc
cdq
cmp
cli
xchg
dec
dec
xchg
or
pop
aad
add
imul
mov
mov
pop
cwde
adc
out
inc
mov
jl
imul
out
shl
and
sbb
jno
xchg
sub
test
loop
xchg
xor
loopne
adc
cmp
dec
jg
pop
sbb
adc
js
sub
lds
add
test
inc
sbb
retn
retn
push
and
std
mov
dec
push
cmpsd
sbb
add
add
sti
fisttp
mov
popa
das
jmp
sti
movsb
or
insd
rep
jnz
fidivr
add
or
dec
lds
add
add
inc
in
mov
in
adc
add
mov
aas
xchg
retf
test
dec
adc
mov
inc
jle
sub
retf
enter
pop
adc
cmpsb
adc
sbb
sbb
jp
movsb
retf
fiadd
retn
push
retn
inc
jmp
aas
daa
push
cld
push
std
jmp
stosd
add
push
mov
or
mul
adc
inc
add
add
retf
and
dec
retf
push
sbb
jmp
push
jnp
or
jmp
jl
mov
fnstcw
adc
add
add
retn
jns
sahf
cld
movsd
mov
ja
sbb
loopne
mov
pop
fstp9
mov
xchg
cld
xor
scasb
adc
jnz
pop
xchg
mov
fisttp
inc
aaa
dec
adc
int
arpl
push
push
sub
pop
mov
sahf
js
mov
mov
mov
or
xor
dec
jp
pop
leave
add
xor
mov
or
dec
cwde
cmp
jg
test
fild
mov
push
inc
push
or
adc
pop
pop
out
sbb
imul
jmp
xor
cli
mov
dec
wait
jge
and
add
add
enter
and
or
cdq
retf
jmp
push
and
xlat
aas
dec
sbb
or
stosd
cwde
add
add
xor
sti
dec
mov
stc
mov
sbb
jnz
cmpsd
pusha
dec
dec
enter
xchg
xor
sti
pusha
sti
xlat
dec
pop
jmp
sbb
retf
dec
inc
sub
mov
cmc
fsub
dec
push
mov
loop
mov
add
popf
stc
jge
sbb
add
xor
sbb
sub
nop
stosd
stc
rol
inc
xor
mov
or
adc
xor
add
sbb
pop
fbstp
fldl2e
les
icebp
cmpsb
add
add
retn
retf
mov
xlat
push
aaa
pop
pop
mov
add
add
jmp
push
div
inc
mov
popa
mov
mov
add
retn
sub
scasd
mov
aas
scasb
fnstcw
retn
mov
mov
mov
mov
retf
mov
pushf
adc
mov
jnb
mov
add
mov
inc
retn
sub
aas
pop
test
fnstcw
retn
retn
jecxz
test
ja
add
add
fdiv
pusha
cmp
imul
imul
pop
xchg
call
int
setalc
cmp
into
test
sub
or
xchg
jns
dec
pop
setalc
jo
outsb
call
loope
bound
adc
imul
cld
cmp
sub
dec
setalc
and
lodsd
aam
jns
mov
sti
pop
ja
cmpsd
daa
jnz
xor
shr
mov
mov
setalc
xchg
sub
dec
mov
enter
fisttp
add
sbb
jno
mov
out
inc
mov
bound
add
cld
mov
push
xor
pop
push
mov
imul
sbb
xor
lds
cmpsb
or
lds
cmp
mov
wait
retf
retn
dec
rol
retf
push
mov
fcom
inc
xor
iret
cld
retf
push
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
pop
or
add
retf
mov
retn
