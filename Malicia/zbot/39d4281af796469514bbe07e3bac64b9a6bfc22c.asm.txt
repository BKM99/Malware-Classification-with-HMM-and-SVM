and
jmp
push
mov
add
push
pop
sub
push
lea
xor
sub
mov
or
sub
sub
call
add
add
mov
push
and
and
pop
sub
mov
push
call
lea
pop
pop
leave
retn
push
mov
push
mov
sub
mov
mov
sub
push
mov
push
lea
push
call
push
pop
lea
push
pop
add
mov
add
push
call
or
mov
sub
shr
and
push
mov
push
push
call
mov
int
push
mov
sub
sub
lea
and
mov
sub
xor
add
mov
push
mov
mov
push
push
call
add
cmp
ja
imul
xor
sub
push
pop
sub
push
call
xor
leave
retn
lea
and
mov
mov
lea
and
jg
lea
mov
pop
add
push
sub
and
push
lea
sub
mov
mov
mov
jbe
sar
sbb
dec
add
add
add
sbb
sbb
add
sbb
lea
xchg
and
add
or
mov
add
dec
mov
mov
shr
add
jg
mov
mov
and
mov
sub
jz
mov
push
mov
push
call
mov
mov
and
pop
leave
retn
jbe
lea
lea
jnb
sub
and
jg
inc
mov
jg
and
mov
add
mov
mov
mov
mov
lodsd
jnb
xor
not
mov
jnb
neg
xor
mov
add
xor
dec
add
neg
jg
mov
mov
ror
sar
add
dec
and
or
sub
mov
not
and
mov
add
sub
sbb
cmp
jnz
inc
not
xchg
sub
mov
sub
sar
mov
ror
and
sbb
sub
sub
cmp
jnz
jbe
add
sub
jnb
dec
mov
push
pop
or
push
xor
xor
push
add
sub
or
push
jnb
add
and
push
mov
mov
mov
push
add
lea
inc
mov
add
push
pop
mov
call
jg
lea
add
mov
mov
mov
inc
sub
dec
lea
or
mov
lea
mov
add
or
push
sub
mov
jg
or
mov
mov
xor
pop
sbb
xchg
sub
mov
sbb
xchg
mov
mov
mov
sub
jnz
test
sub
add
push
mov
imul
add
pop
rep
mov
setalc
imul
add
add
rep
push
cmp
insd
loop
cmp
add
rep
cmp
mov
add
and
