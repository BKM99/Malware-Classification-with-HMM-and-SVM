push
mov
pop
retn
push
mov
push
mov
push
push
mov
push
push
call
mov
pop
retn
push
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
cmp
jnb
mov
jmp
jmp
mov
mov
pop
retn
push
mov
mov
pop
retn
push
mov
mov
pop
retn
push
mov
mov
mov
pop
retn
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
mov
movzx
sar
cmp
jnz
mov
mov
mov
movzx
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
retn
push
mov
sub
mov
cmp
jz
mov
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
retn
push
mov
sub
mov
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jnz
push
push
push
push
push
push
push
call
mov
cmp
jz
cmp
jnz
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
retn
push
mov
xor
pop
retn
push
mov
sub
pusha
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
lea
push
call
mov
mov
mov
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
push
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jnz
xor
jmp
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
call
push
push
call
push
call
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
jz
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
retn
push
mov
xchg
pop
das
xor
inc
scasb
sti
leave
push
imul
pop
inc
stc
inc
xor
push
jmp
mov
wait
adc
neg
xchg
xor
retn
inc
test
call
fdivr
retn
sti
mul
push
push
push
pop
jnz
sbb
and
jmp
cmpsd
loop
push
cmp
sbb
test
add
jge
jmp
retn
jg
imul
xor
retn
add
jz
enter
in
add
mov
dec
mov
fnstcw
sbb
retn
push
mov
mov
lock
mov
or
sbb
add
movsb
push
call
add
pop
add
popf
inc
hlt
sbb
jnz
out
movsb
push
call
rcl
cli
lea
push
push
cmp
inc
lock
outsd
mov
push
add
dec
mov
das
mov
jl
sub
jle
cmp
and
jo
sbb
pusha
aaa
and
sub
sub
xor
adc
push
or
retf
pop
inc
fisub
stosd
dec
or
pop
xchg
das
and
pop
mov
loopne
test
xor
push
mov
pop
mov
push
outsb
pop
jns
insb
dec
cwde
inc
inc
dec
imul
cmp
jno
dec
sub
add
push
pop
adc
pop
aaa
jb
push
std
dec
inc
add
pop
inc
or
jmp
mov
push
add
pop
call
add
or
insb
add
jz
lodsd
xor
mov
jb
jnb
sbb
pop
inc
and
pop
inc
xor
popa
cwde
add
movsb
pop
pop
jb
jmp
pop
inc
jno
add
pusha
jz
push
xchg
pop
pop
arpl
inc
push
dec
std
pop
arpl
jno
push
sbb
xor
push
add
dec
mov
xor
mov
push
adc
push
jbe
fnsave
enter
ficom
loop
push
jbe
jl
dec
setalc
jge
add
retf
push
jz
adc
retn
retn
adc
xor
inc
jnz
mov
inc
out
jbe
pop
and
xor
xchg
inc
pop
xor
inc
push
add
xor
inc
push
pop
xor
and
xor
or
hlt
cmp
or
adc
sub
pop
sub
stc
add
pop
mov
lock
pusha
out
retf
lock
insb
mov
out
sub
add
popfw
out
jb
xor
arpl
add
jg
jz
lea
inc
jnb
inc
xor
xchg
sub
sub
push
jb
jnb
push
xor
sub
push
insd
pop
or
sti
or
hlt
mul
arpl
inc
inc
insd
into
or
inc
mov
aad
outsb
add
add
xor
popa
pop
call
jnz
push
popa
jz
add
add
push
jno
add
lds
enter
add
push
arpl
pop
jb
test
lds
dec
das
xor
dec
imul
dec
jz
lahf
xor
ja
push
insd
and
or
cmp
neg
push
stosd
bound
popa
imul
sbb
push
adc
push
pop
add
add
in
aaa
push
push
ficom
sub
push
push
inc
iret
mov
lock
test
inc
jnp
xchg
bound
cmp
xchg
push
dec
popa
nop
aas
out
test
push
push
mov
dec
sub
pop
sub
inc
or
inc
sub
pop
push
daa
out
pop
daa
sbb
add
daa
or
div
popa
xor
xor
dec
setalc
jmp
xor
jmp
ror
inc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
