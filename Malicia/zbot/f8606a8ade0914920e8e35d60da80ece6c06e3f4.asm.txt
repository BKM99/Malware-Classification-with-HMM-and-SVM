jmp
push
mov
add
xor
lea
push
pop
add
and
xor
sub
pop
lea
or
mov
lea
sub
mov
add
call
add
sub
mov
and
add
add
add
mov
push
push
lea
push
call
pop
xchg
pop
pop
leave
retn
push
mov
mov
sub
push
add
pop
mov
mov
push
mov
push
call
pop
add
mov
lea
push
pop
add
push
pop
add
push
call
and
add
push
imul
push
call
lea
int
push
mov
sub
add
add
push
pop
sub
push
pop
add
mov
mov
push
push
call
add
cmp
ja
shr
mov
and
push
pop
add
push
call
xor
leave
retn
sub
xor
mov
neg
mov
push
lea
add
lea
sub
and
mov
shr
mov
push
sub
lea
mov
add
and
jnb
mov
jbe
add
lea
and
add
xor
push
pop
mov
not
sub
xchg
lea
jnb
add
sub
mov
sbb
mov
mov
mov
add
shr
not
lea
mov
sub
jz
mov
mov
push
lea
push
call
add
mov
add
pop
leave
retn
mov
mov
sbb
mov
mov
mov
mov
jnb
lea
add
mov
dec
lodsd
jnb
mov
mov
jbe
mov
sbb
mov
jbe
and
add
add
mov
jnb
lea
lea
add
lea
mov
jg
mov
lea
sub
add
mov
add
sbb
and
jg
mov
xor
add
sub
not
cmp
jnz
xor
mov
xchg
jg
push
pop
or
sub
mov
jnb
add
mov
lea
and
add
sub
jbe
sub
add
cmp
jnz
jbe
inc
and
lea
lea
mov
push
pop
mov
push
lea
push
add
jnb
lea
mov
jg
lea
mov
mov
push
mov
jnb
and
not
push
jbe
add
neg
push
mov
mov
mov
add
inc
or
jnb
add
mov
mov
lea
jg
dec
add
call
jbe
mov
mov
jnb
or
add
mov
mov
mov
sbb
sub
add
lea
add
lea
sbb
mov
add
mov
mov
mov
push
jnb
mov
mov
sbb
xor
pop
lea
not
xchg
sub
jg
mov
mov
sbb
xchg
mov
sub
jnz
retf
