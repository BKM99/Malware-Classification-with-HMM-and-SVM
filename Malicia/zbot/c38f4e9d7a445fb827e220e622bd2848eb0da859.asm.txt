jmp
mov
push
mov
add
and
mov
lea
and
shr
mov
sub
or
sub
mov
lea
call
sub
mov
and
sub
add
push
or
push
add
mov
mov
push
mov
push
push
call
pop
mov
pop
pop
leave
retn
push
mov
shr
sub
mov
add
mov
push
lea
push
push
mov
push
call
push
pop
add
mov
and
mov
add
and
lea
push
call
pop
mov
add
push
mov
lea
push
push
mov
push
call
add
int
push
mov
sub
mov
add
lea
add
mov
lea
push
mov
mov
lea
push
push
call
add
cmp
ja
xor
add
and
mov
mov
lea
pop
mov
mov
push
call
xor
leave
retn
mov
add
add
lea
push
or
mov
or
and
sub
pop
shr
sub
xor
mov
mov
jg
or
sbb
mov
jbe
and
add
add
lea
and
xor
sub
xchg
and
sub
inc
mov
mov
add
mov
mov
shr
mov
sub
sbb
sub
jz
lea
lea
push
lea
push
call
lea
add
pop
leave
retn
sub
not
jg
lea
mov
mov
sub
mov
mov
lodsd
lea
mov
or
or
mov
jg
or
add
sub
and
add
jbe
add
inc
inc
xor
add
mov
mov
mov
mov
lea
sub
mov
sub
jbe
add
and
add
jbe
not
jbe
xor
add
sub
cmp
jnz
add
lea
xchg
neg
add
sub
add
mov
lea
and
xor
sub
or
cmp
jnz
lea
neg
inc
mov
push
pop
and
push
lea
push
add
lea
lea
push
inc
mov
push
or
lea
push
neg
lea
inc
jnb
mov
add
and
add
call
jnb
sub
sbb
mov
lea
sub
xor
lea
sbb
lea
mov
add
dec
mov
push
add
mov
sub
xor
pop
add
jnb
inc
xchg
sub
and
add
xchg
mov
sub
jnz
scasb
icebp
sbb
insd
dec
insd
sub
xor
or
or
inc
rcl
insd
sub
sub
sub
sub
dec
insd
sub
push
insd
sub
