jmp
push
mov
add
push
mov
lea
and
add
mov
push
and
shr
push
sub
call
add
add
add
mov
and
mov
add
add
push
call
pop
sub
pop
pop
leave
retn
push
mov
push
pop
sub
push
pop
sub
mov
push
pop
sub
pop
mov
push
push
lea
push
call
push
lea
and
push
push
call
lea
push
imul
add
or
add
add
push
lea
push
lea
push
call
shr
sub
int
push
mov
sub
lea
lea
lea
xor
sub
push
pop
sub
and
add
xchg
mov
push
push
call
add
cmp
ja
and
sub
mov
mov
and
mov
push
call
xor
leave
retn
xor
mov
or
mov
mov
mov
add
shr
mov
sub
lea
sub
sub
mov
mov
sub
lea
mov
neg
xor
and
jg
or
ror
add
or
sub
xor
add
and
xchg
add
jg
and
xor
or
mov
mov
mov
jbe
lea
mov
mov
lea
shr
lea
neg
add
sub
jz
add
lea
push
push
call
sub
add
push
sub
mov
pop
leave
retn
sub
mov
mov
mov
and
jbe
add
mov
add
lodsd
mov
mov
mov
sbb
lea
mov
jbe
or
xor
add
neg
and
add
add
lea
xor
shl
sub
mov
mov
jnb
or
and
mov
mov
add
sub
xor
cmp
jnz
add
xchg
jnb
sar
lea
jbe
and
xor
sub
xor
mov
mov
mov
mov
jg
add
sbb
and
mov
sub
add
cmp
jnz
and
sar
mov
push
pop
mov
mov
push
sub
push
add
lea
or
push
add
push
add
sub
push
add
inc
jbe
lea
add
not
lea
call
add
mov
sbb
sub
xor
lea
mov
lea
sbb
mov
add
jg
add
sub
push
or
mov
jg
mov
mov
mov
xor
pop
add
xchg
sub
jbe
not
xor
xchg
and
sub
jnz
wait
ficomp
sbb
sbb
or
sbb
call
sti
pop
adc
mov
pop
sbb
sbb
sbb
sub
sbb
inc
pop
sbb
pusha
cmp
fldcw
inc
scasd
inc
pop
sbb
daa
