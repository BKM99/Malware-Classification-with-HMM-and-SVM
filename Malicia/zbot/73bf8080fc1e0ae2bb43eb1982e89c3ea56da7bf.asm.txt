add
fld
add
fld
add
mov
pusha
popa
push
cmp
retn
inc
add
retn
dec
cli
add
add
sbb
sbb
cli
cmp
or
retf
sbb
cli
adc
or
retf
sub
aam
and
jmp
jmp
add
jmp
retn
add
cmp
pop
mov
popf
xor
inc
retf
add
mov
rol
aam
retf
add
retn
add
retf
add
retn
jnb
sub
jecxz
test
dec
call
jle
movsd
pop
retn
das
clc
shr
clc
sub
xchg
sbb
lodsb
add
jns
aas
mov
dec
jg
xchg
push
retf
or
jmp
add
retf
sal
retf
jz
add
pop
mov
add
or
lea
or
pop
pop
add
cdq
out
jmp
add
enter
or
retn
retn
add
dec
sar
sar
sal
cmp
sti
sbb
jmp
mov
not
outsd
jno
sub
push
mov
push
inc
jno
mov
cmp
cmpsb
inc
cli
mov
pop
sbb
das
and
add
or
pmulhw
cmp
scasd
retn
add
push
test
aas
clc
std
jmp
cwde
enter
push
cld
jmp
pusha
stosd
loope
cmp
push
mov
stc
dec
pop
aad
jmp
add
retn
mov
inc
mov
add
xor
jmp
stc
xchg
fist
and
and
fcmovb
jnz
in
pop
mov
hlt
add
jmp
xchg
imul
retf
add
pushf
retf
dec
mov
mov
nop
sbb
std
cmp
retn
add
cmp
jmp
add
lodsd
jp
cmp
pop
mov
retf
add
retn
add
dec
push
retn
add
jmp
idiv
and
mov
int
or
adc
pop
dec
jecxz
imul
dec
xor
mul
xchg
in
sar
test
push
movsb
pop
test
sub
out
jl
into
and
div
std
cmpsd
cmp
in
xchg
call
das
into
pop
call
pop
setalc
pop
call
mov
scasd
mov
cmp
jmp
add
cli
retn
add
mov
mov
mul
retn
adc
xor
mov
xor
std
ja
pop
adc
pop
adc
stc
mov
dec
sub
das
add
and
adc
clc
jl
retf
push
add
lodsd
idiv
or
or
xchg
mov
retn
add
add
retn
add
add
mov
jp
jle
retn
jmp
pop
push
repne
mov
add
pop
cmp
push
mov
mov
add
bound
in
mov
jge
mov
imul
add
xlat
or
inc
inc
retf
retf
dec
mov
mov
dec
stc
sbb
mov
mov
jg
add
adc
or
add
add
add
or
xlat
mov
retn
sbb
pop
adc
dec
retn
cmp
sbb
popf
add
sub
mov
add
sti
jz
add
jb
cld
inc
lds
cmpsb
enter
pop
fst
sbb
dec
retn
xor
jb
push
fcmovb
retn
mov
retn
add
add
xchg
jmp
mov
mov
xor
les
xor
add
push
inc
lea
pop
call
ja
mov
sub
cmp
sub
push
and
sbb
dec
mov
out
in
test
test
jo
imul
add
dec
rcl
out
mov
push
jo
push
inc
lea
rcl
retn
mov
aam
clc
fadd
dec
movsb
lock
dec
insd
insd
cld
xor
int
mov
mov
add
adc
retf
add
shl
div
cmp
mov
mov
retf
fcom
pop
retn
test
jmp
add
retn
sbb
retn
add
call
inc
or
xchg
retn
jg
and
and
xchg
popa
retn
fsub
cdq
adc
push
pop
or
add
xchg
pop
and
cmp
jmp
add
dec
jmp
jmp
or
add
jmp
ja
cld
push
cld
jmp
adc
jnb
jg
cmp
xor
pop
adc
or
mov
push
retf
adc
dec
hlt
add
dec
and
les
fild
jo
add
or
insb
retn
and
jmp
retf
add
lodsd
push
or
cmp
retf
add
or
add
fnsave
jmp
push
retf
add
fcom
ficom
lodsb
push
mov
add
mov
sbb
mov
inc
sbb
jnz
pop
retn
retn
mov
test
pusha
clc
add
xchg
mov
inc
fisttp
add
or
retf
stosb
and
retn
imul
or
mov
push
lds
wait
push
inc
mov
clc
retf
retn
add
nop
mov
retn
add
retn
add
sub
add
retn
push
retf
add
pop
sub
push
mov
jmp
jmp
das
jge
add
mov
dec
push
retn
retf
push
or
jno
add
mov
pop
adc
js
mov
jmp
cli
add
jo
or
jg
mov
add
xchg
rol
int
scasb
cmpsb
xchg
adc
add
mov
inc
rcl
mov
sbb
push
pop
jo
aam
mov
add
retn
mov
mov
push
or
cmc
retn
retn
add
inc
add
pop
sti
dec
jmp
sub
push
sar
retf
push
retf
cmpsb
push
not
xor
dec
mov
jecxz
dec
inc
adc
push
not
push
mov
pop
mov
wait
push
retn
add
add
sti
mov
xchg
clc
imul
add
retn
clc
lds
sti
retn
retf
mov
dec
sbb
mov
mov
sub
retn
retf
add
add
mov
push
add
jmp
retn
add
cmc
call
push
cmp
push
or
lds
clc
dec
mov
cli
dec
movsd
mov
mov
jmp
dec
mov
scas
and
jmp
pop
jmp
jz
jz
sti
cmp
add
fldcw
lock
cli
mov
out
sub
jg
sbb
adc
cmp
maxps
jmp
xor
push
push
or
add
mov
add
cmp
inc
or
cmp
push
call
test
push
adc
out
aaa
cli
sar
stosd
mov
pop
aad
adc
js
add
pop
inc
cli
xchg
mov
xchg
setalc
xchg
cli
jbe
shr
retf
bound
xor
jnb
lea
add
jns
lea
inc
cmp
clc
mov
mov
xor
dec
jns
or
mov
push
in
pop
inc
dec
push
cmc
adc
xchg
cld
mul
pop
push
sti
or
iret
retn
add
jp
mov
adc
push
retf
add
jmp
cmpsb
inc
dec
mov
retn
test
jmp
add
retn
lodsd
cmp
setalc
jo
sub
inc
or
retf
test
idiv
stosb
jbe
or
adc
retn
add
mov
jmp
pop
xor
std
out
stc
stc
mov
sub
int
cmp
xor
xor
xor
sub
lock
add
mov
inc
cmc
call
sbb
std
jno
jnp
hlt
imul
lodsd
xchg
popa
stc
jns
xor
test
lahf
clc
mov
imul
cmc
sub
jmp
mov
push
mov
mov
cmp
test
jp
ja
enter
adc
repe
cmp
jmp
test
inc
add
jmp
add
retn
add
jmp
test
jmp
jnz
out
jnz
out
add
jmp
add
daa
imul
jmp
cld
push
jz
cli
push
inc
jnz
push
popa
jo
and
pop
jz
or
shl
jz
sub
pop
jz
push
pop
jnb
or
dec
mov
push
insd
sahf
dec
pop
jb
push
jo
dec
add
push
push
fstp
imul
inc
push
push
popf
cld
test
loop
jz
push
pop
outsb
mov
push
arpl
sbb
push
sbb
xchg
mov
add
test
jz
aad
arpl
mov
push
push
wait
push
inc
pop
out
sbb
stosb
pusha
and
push
inc
sub
inc
sbb
pop
sbb
cmp
push
add
inc
arpl
daa
sbb
sub
mov
dec
push
shl
cmp
or
or
pop
add
and
xor
retn
push
inc
push
sub
mov
add
jecxz
push
outsb
or
xchg
cmp
sbb
jz
jz
arpl
arpl
push
cmpsb
movsb
cmp
jz
jo
add
add
add
add
add
add
imul
hlt
nop
out
hlt
imul
hlt
imul
hlt
imul
hlt
in
add
mov
fnsave
test
xor
std
xor
lea
jge
popf
xor
retf
mov
xor
retn
retn
xor
retn
add
sub
cmp
das
xor
pop
das
mov
pop
mov
retf
add
sal
xor
retf
mov
movsb
sub
mov
push
sbb
cmp
sbb
cli
sbb
das
jnz
pop
das
pop
sbb
retn
cmp
sbb
cmp
and
aaa
icebp
pop
add
cmp
ja
lodsb
and
xor
dec
and
and
push
mov
add
fbld
jge
sub
outsb
sub
fadd
sti
sub
push
shr
push
mov
out
sub
out
xor
retf
les
xor
les
mov
mov
xor
push
xor
adc
or
xor
sbb
into
adc
cmp
add
jmp
pop
sbb
xor
and
xor
and
xor
pop
retn
xor
pop
inc
xor
dec
xor
pop
add
add
pop
sbb
add
xor
adc
inc
xor
adc
xchg
xor
adc
xor
adc
pop
loopne
mov
adc
aaa
loope
add
add
pop
adc
add
and
push
sbb
xchg
mov
rcl
sbb
or
shr
retn
xchg
mov
retf
test
retf
add
or
add
pop
add
int
sub
int
inc
dec
retf
jmp
wait
cli
aaa
add
test
idiv
idiv
wait
add
jg
rep
xor
push
cwde
jl
in
enter
xor
loopne
add
dec
push
sbb
push
add
or
test
add
mov
test
retn
mov
mov
mov
test
dec
clc
jnz
out
hlt
add
adc
div
cmp
add
pop
jmp
clc
push
add
hlt
mov
aad
or
test
and
inc
hlt
xchg
add
retf
push
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
retn
push
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
cmp
jnb
mov
jmp
jmp
mov
mov
pop
retn
push
mov
mov
pop
retn
push
mov
mov
pop
retn
push
mov
mov
mov
pop
retn
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
mov
movzx
sar
cmp
jnz
mov
mov
mov
movzx
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
retn
push
mov
sub
mov
mov
jmp
mov
add
mov
mov
cmp
jnb
mov
cmp
jnz
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmp
jz
cmp
jnz
mov
jmp
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
retn
push
mov
sub
mov
cmp
jz
mov
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
retn
push
mov
sub
mov
lea
push
push
push
push
push
call
test
jz
xor
jmp
lea
push
push
push
push
push
call
test
jz
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
jz
xor
jmp
lea
push
push
push
push
mov
push
call
test
jz
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jnz
xor
jmp
call
mov
pop
retn
push
mov
sub
pusha
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
movzx
cmp
jz
xor
jmp
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jnb
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
jmp
mov
pop
retn
push
mov
pop
pop
mov
jmp
pop
retn
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
