jmp
push
jmp
call
jmp
jmp
mov
jmp
add
jmp
xor
jmp
aaa
jns
lodsd
retn
jmp
stosb
cmc
daa
jmp
retn
xor
jmp
movsb
xchg
js
push
jmp
mov
jmp
jmp
mov
jmp
wait
retn
jmp
jmp
jmp
jnz
call
jmp
jmp
jmp
stc
jmp
pop
jmp
leave
add
jmp
pop
jmp
mov
call
adc
cmp
add
sbb
jl
sbb
mov
add
div
mov
jno
adc
mov
jbe
aas
not
mov
mov
push
not
add
sbb
pop
push
dec
inc
sbb
jno
adc
jnz
lodsd
cmc
sbb
sal
cmc
jns
adc
ja
xchg
hlt
sbb
clc
int
mov
mov
or
mov
and
ja
into
hlt
loopne
mov
adc
lodsd
add
jz
push
neg
call
hlt
sbb
jl
sbb
xor
sbb
add
cmp
scasb
adc
loop
stosb
jnz
mov
mov
ja
adc
stosd
sbb
arpl
mov
adc
pop
adc
sbb
outsb
nop
clc
mov
adc
insd
outsd
and
ja
sbb
mov
int
push
add
pop
sbb
xchg
mov
mov
mov
xor
popa
adc
sub
mov
mov
or
mov
mov
rsldt
pop
and
mov
int
and
outsb
mov
sbb
and
add
mov
sbb
movsb
or
inc
iret
pusha
sub
clc
jnb
insb
popf
mov
mov
mov
mov
stc
jb
test
mov
ror
clc
jnb
fisubr
mov
jmp
sub
clc
jnb
mov
popa
aam
rol
add
jmp
popf
sub
sub
jnz
popa
stc
jb
and
dec
cdq
dec
retn
wait
cmp
fdivr
sal
mov
sti
xchg
mov
fidiv
push
icebp
jmp
push
mov
test
retn
push
mov
