push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
test
jz
mov
add
mov
aaa
shr
outs
add
push
cwde
js
push
mov
xor
rcr
push
xor
push
jnb
sub
int
push
stosb
pop
leave
jle
xchg
cdq
jp
rol
mov
jno
sbb
pop
repne
outs
out
xor
pop
rol
arpl
add
sti
loop
ja
and
cli
ror
test
popa
xchg
fadd
out
rcl
popa
add
mov
mov
xchg
pop
movsd
mov
mov
jb
add
or
mov
in
in
daa
dec
arpl
inc
call
inc
out
hlt
retn
aad
call
mov
movzx
cmp
jnz
mov
lea
push
call
mov
mov
mov
mov
mov
jmp
mov
push
call
mov
push
call
mov
push
pop
mov
lea
push
mov
push
call
mov
push
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmp
jnz
push
push
call
push
call
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmp
jz
push
push
mov
push
jmp
jmp
mov
mov
mov
mov
pop
retn
push
mov
pop
retn
push
mov
sub
mov
mov
mov
mov
mov
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
mov
jmp
mov
add
mov
cmp
jnb
jmp
xor
mov
pop
retn
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
test
jz
out
adc
add
push
jmp
mov
call
mov
cmp
jnz
mov
push
call
add
xor
pop
mov
pop
retn
push
mov
sub
xor
mov
pop
retn
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzx
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzx
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
retn
